#include "Utilities/Exception.h"

#ifdef RV_PLATFORM_WINDOWS

const char* rv::VkResultDescription(const VkResult result)
{
	switch (result)
	{
	case VK_SUCCESS:									return "Command successfully completed";
	case VK_NOT_READY:									return "A fence or query has not yet completed";
	case VK_TIMEOUT:									return "A wait operation has not completed in the specified time";
	case VK_EVENT_SET:									return "An event is signaled";
	case VK_EVENT_RESET:								return "An event is unsignaled";
	case VK_INCOMPLETE:									return "A return array was too small for the result";
	case VK_SUBOPTIMAL_KHR:								return "A swapchain no longer matches the surface properties exactly, but can still be used to present to the surface successfully.";
	case VK_THREAD_IDLE_KHR:							return "A deferred operation is not complete but there is currently no work for this thread to do at the time of this call.";
	case VK_THREAD_DONE_KHR:							return "A deferred operation is not complete but there is no work remaining to assign to additional threads.";
	case VK_OPERATION_DEFERRED_KHR:						return "A deferred operation was requested and at least some of the work was deferred.";
	case VK_OPERATION_NOT_DEFERRED_KHR:					return "A deferred operation was requested and no operations were deferred.";
	case VK_PIPELINE_COMPILE_REQUIRED_EXT:				return "A requested pipeline creation would have required compilation, but the application requested compilation to not be performed.";
	case VK_ERROR_OUT_OF_HOST_MEMORY:					return "A host memory allocation has failed.";
	case VK_ERROR_OUT_OF_DEVICE_MEMORY:					return "A device memory allocation has failed.";
	case VK_ERROR_INITIALIZATION_FAILED:				return "Initialization of an object could not be completed for implementation-specific reasons.";
	case VK_ERROR_DEVICE_LOST:							return "The logical or physical device has been lost. See Lost Device";
	case VK_ERROR_MEMORY_MAP_FAILED:					return "Mapping of a memory object has failed.";
	case VK_ERROR_LAYER_NOT_PRESENT:					return "A requested layer is not present or could not be loaded.";
	case VK_ERROR_EXTENSION_NOT_PRESENT:				return "A requested extension is not supported.";
	case VK_ERROR_FEATURE_NOT_PRESENT:					return "A requested feature is not supported.";
	case VK_ERROR_INCOMPATIBLE_DRIVER:					return "The requested version of Vulkan is not supported by the driver or is otherwise incompatible for implementation-specific reasons.";
	case VK_ERROR_TOO_MANY_OBJECTS:						return "Too many objects of the type have already been created.";
	case VK_ERROR_FORMAT_NOT_SUPPORTED:					return "A requested format is not supported on this device.";
	case VK_ERROR_FRAGMENTED_POOL:						return "A pool allocation has failed due to fragmentation of the pool’s memory. This must only be returned if no attempt to allocate host or device memory was made to accommodate the new allocation. This should be returned in preference to VK_ERROR_OUT_OF_POOL_MEMORY, but only if the implementation is certain that the pool allocation failure was due to fragmentation.";
	case VK_ERROR_SURFACE_LOST_KHR:						return "A surface is no longer available.";
	case VK_ERROR_NATIVE_WINDOW_IN_USE_KHR:				return "The requested window is already in use by Vulkan or another API in a manner which prevents it from being used again.";
	case VK_ERROR_OUT_OF_DATE_KHR:						return "A surface has changed in such a way that it is no longer compatible with the swapchain, and further presentation requests using the swapchain will fail. Applications must query the new surface properties and recreate their swapchain if they wish to continue presenting to the surface.";
	case VK_ERROR_INCOMPATIBLE_DISPLAY_KHR:				return "The display used by a swapchain does not use the same presentable image layout, or is incompatible in a way that prevents sharing an image.";
	case VK_ERROR_INVALID_SHADER_NV:					return "One or more shaders failed to compile or link. More details are reported back to the application via VK_EXT_debug_report if enabled.";
	case VK_ERROR_OUT_OF_POOL_MEMORY:					return "A pool memory allocation has failed. This must only be returned if no attempt to allocate host or device memory was made to accommodate the new allocation. If the failure was definitely due to fragmentation of the pool, VK_ERROR_FRAGMENTED_POOL should be returned instead.";
	case VK_ERROR_INVALID_EXTERNAL_HANDLE:				return "An external handle is not a valid handle of the specified type.";
	case VK_ERROR_FRAGMENTATION:						return "A descriptor pool creation has failed due to fragmentation.";
	case VK_ERROR_INVALID_DEVICE_ADDRESS_EXT:			return "A buffer creation failed because the requested address is not available.\nA buffer creation or memory allocation failed because the requested address is not available. A shader group handle assignment failed because the requested shader group handle information is no longer valid.";
	case VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT:	return "An operation on a swapchain created with VK_FULL_SCREEN_EXCLUSIVE_APPLICATION_CONTROLLED_EXT failed as it did not have exlusive full-screen access. This may occur due to implementation-dependent reasons, outside of the application’s control.";
	case VK_ERROR_UNKNOWN:								return "An unknown error has occurred; either the application has provided invalid input, or an implementation failure has occurred.";
	}
	return "NOT RECOGNISED";
}

const char* rv::VkResultToString(const VkResult result)
{
	switch (result)
	{
	case VK_SUCCESS:									return "VK_SUCCESS";
	case VK_NOT_READY:									return "VK_NOT_READY";
	case VK_TIMEOUT:									return "VK_TIMEOUT";
	case VK_EVENT_SET:									return "VK_EVENT_SET";
	case VK_EVENT_RESET:								return "VK_EVENT_RESET";
	case VK_INCOMPLETE:									return "VK_INCOMPLETE";
	case VK_SUBOPTIMAL_KHR:								return "VK_SUBOPTIMAL_KHR";
	case VK_THREAD_IDLE_KHR:							return "VK_THREAD_IDLE_KHR";
	case VK_THREAD_DONE_KHR:							return "VK_THREAD_DONE_KHR";
	case VK_OPERATION_DEFERRED_KHR:						return "VK_OPERATION_DEFERRED_KHR";
	case VK_OPERATION_NOT_DEFERRED_KHR:					return "VK_OPERATION_NOT_DEFERRED_KHR";
	case VK_PIPELINE_COMPILE_REQUIRED_EXT:				return "VK_PIPELINE_COMPILE_REQUIRED_EXT";
	case VK_ERROR_OUT_OF_HOST_MEMORY:					return "VK_ERROR_OUT_OF_HOST_MEMORY";
	case VK_ERROR_OUT_OF_DEVICE_MEMORY:					return "VK_ERROR_OUT_OF_DEVICE_MEMORY";
	case VK_ERROR_INITIALIZATION_FAILED:				return "VK_ERROR_INITIALIZATION_FAILED";
	case VK_ERROR_DEVICE_LOST:							return "VK_ERROR_DEVICE_LOST";
	case VK_ERROR_MEMORY_MAP_FAILED:					return "VK_ERROR_MEMORY_MAP_FAILED";
	case VK_ERROR_LAYER_NOT_PRESENT:					return "VK_ERROR_LAYER_NOT_PRESENT";
	case VK_ERROR_EXTENSION_NOT_PRESENT:				return "VK_ERROR_EXTENSION_NOT_PRESENT";
	case VK_ERROR_FEATURE_NOT_PRESENT:					return "VK_ERROR_FEATURE_NOT_PRESENT";
	case VK_ERROR_INCOMPATIBLE_DRIVER:					return "VK_ERROR_INCOMPATIBLE_DRIVER";
	case VK_ERROR_TOO_MANY_OBJECTS:						return "VK_ERROR_TOO_MANY_OBJECTS";
	case VK_ERROR_FORMAT_NOT_SUPPORTED:					return "VK_ERROR_FORMAT_NOT_SUPPORTED";
	case VK_ERROR_FRAGMENTED_POOL:						return "VK_ERROR_FRAGMENTED_POOL";
	case VK_ERROR_SURFACE_LOST_KHR:						return "VK_ERROR_SURFACE_LOST_KHR";
	case VK_ERROR_NATIVE_WINDOW_IN_USE_KHR:				return "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR";
	case VK_ERROR_OUT_OF_DATE_KHR:						return "VK_ERROR_OUT_OF_DATE_KHR";
	case VK_ERROR_INCOMPATIBLE_DISPLAY_KHR:				return "VK_ERROR_INCOMPATIBLE_DISPLAY_KHR";
	case VK_ERROR_INVALID_SHADER_NV:					return "VK_ERROR_INVALID_SHADER_NV";
	case VK_ERROR_OUT_OF_POOL_MEMORY:					return "VK_ERROR_OUT_OF_POOL_MEMORY";
	case VK_ERROR_INVALID_EXTERNAL_HANDLE:				return "VK_ERROR_INVALID_EXTERNAL_HANDLE";
	case VK_ERROR_FRAGMENTATION:						return "VK_ERROR_FRAGMENTATION";
	case VK_ERROR_INVALID_DEVICE_ADDRESS_EXT:			return "VK_ERROR_INVALID_DEVICE_ADDRESS_EXT | VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS";
	case VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT:	return "VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT";
	case VK_ERROR_UNKNOWN:								return "VK_ERROR_UNKNOWN";
	}
	return "NOT RECOGNISED";
}

const char* rv::HrToString(const HRESULT hr)
{
	switch (hr)
	{
	case STG_S_CONVERTED:                                                        return "STG_S_CONVERTED";
	case STG_S_BLOCK:                                                            return "STG_S_BLOCK";
	case STG_S_RETRYNOW:                                                         return "STG_S_RETRYNOW";
	case STG_S_MONITORING:                                                       return "STG_S_MONITORING";
	case STG_S_MULTIPLEOPENS:                                                    return "STG_S_MULTIPLEOPENS";
	case STG_S_CONSOLIDATIONFAILED:                                              return "STG_S_CONSOLIDATIONFAILED";
	case STG_S_CANNOTCONSOLIDATE:                                                return "STG_S_CANNOTCONSOLIDATE";
	case OLE_S_USEREG:                                                           return "OLE_S_USEREG";
	case OLE_S_STATIC:                                                           return "OLE_S_STATIC";
	case OLE_S_MAC_CLIPFORMAT:                                                   return "OLE_S_MAC_CLIPFORMAT";
	case DRAGDROP_S_DROP:                                                        return "DRAGDROP_S_DROP";
	case DRAGDROP_S_CANCEL:                                                      return "DRAGDROP_S_CANCEL";
	case DRAGDROP_S_USEDEFAULTCURSORS:                                           return "DRAGDROP_S_USEDEFAULTCURSORS";
	case DATA_S_SAMEFORMATETC:                                                   return "DATA_S_SAMEFORMATETC";
	case VIEW_S_ALREADY_FROZEN:                                                  return "VIEW_S_ALREADY_FROZEN";
	case CACHE_S_FORMATETC_NOTSUPPORTED:                                         return "CACHE_S_FORMATETC_NOTSUPPORTED";
	case CACHE_S_SAMECACHE:                                                      return "CACHE_S_SAMECACHE";
	case CACHE_S_SOMECACHES_NOTUPDATED:                                          return "CACHE_S_SOMECACHES_NOTUPDATED";
	case OLEOBJ_S_INVALIDVERB:                                                   return "OLEOBJ_S_INVALIDVERB";
	case OLEOBJ_S_CANNOT_DOVERB_NOW:                                             return "OLEOBJ_S_CANNOT_DOVERB_NOW";
	case OLEOBJ_S_INVALIDHWND:                                                   return "OLEOBJ_S_INVALIDHWND";
	case INPLACE_S_TRUNCATED:                                                    return "INPLACE_S_TRUNCATED";
	case CONVERT10_S_NO_PRESENTATION:                                            return "CONVERT10_S_NO_PRESENTATION";
	case MK_S_REDUCED_TO_SELF:                                                   return "MK_S_REDUCED_TO_SELF";
	case MK_S_ME:                                                                return "MK_S_ME";
	case MK_S_HIM:                                                               return "MK_S_HIM";
	case MK_S_US:                                                                return "MK_S_US";
	case MK_S_MONIKERALREADYREGISTERED:                                          return "MK_S_MONIKERALREADYREGISTERED";
	case EVENT_S_SOME_SUBSCRIBERS_FAILED:                                        return "EVENT_S_SOME_SUBSCRIBERS_FAILED";
	case EVENT_S_NOSUBSCRIBERS:                                                  return "EVENT_S_NOSUBSCRIBERS";
	case SCHED_S_TASK_READY:                                                     return "SCHED_S_TASK_READY";
	case SCHED_S_TASK_RUNNING:                                                   return "SCHED_S_TASK_RUNNING";
	case SCHED_S_TASK_DISABLED:                                                  return "SCHED_S_TASK_DISABLED";
	case SCHED_S_TASK_HAS_NOT_RUN:                                               return "SCHED_S_TASK_HAS_NOT_RUN";
	case SCHED_S_TASK_NO_MORE_RUNS:                                              return "SCHED_S_TASK_NO_MORE_RUNS";
	case SCHED_S_TASK_NOT_SCHEDULED:                                             return "SCHED_S_TASK_NOT_SCHEDULED";
	case SCHED_S_TASK_TERMINATED:                                                return "SCHED_S_TASK_TERMINATED";
	case SCHED_S_TASK_NO_VALID_TRIGGERS:                                         return "SCHED_S_TASK_NO_VALID_TRIGGERS";
	case SCHED_S_EVENT_TRIGGER:                                                  return "SCHED_S_EVENT_TRIGGER";
	case SCHED_S_SOME_TRIGGERS_FAILED:                                           return "SCHED_S_SOME_TRIGGERS_FAILED";
	case SCHED_S_BATCH_LOGON_PROBLEM:                                            return "SCHED_S_BATCH_LOGON_PROBLEM";
	case XACT_S_ASYNC:                                                           return "XACT_S_ASYNC";
	case XACT_S_READONLY:                                                        return "XACT_S_READONLY";
	case XACT_S_SOMENORETAIN:                                                    return "XACT_S_SOMENORETAIN";
	case XACT_S_OKINFORM:                                                        return "XACT_S_OKINFORM";
	case XACT_S_MADECHANGESCONTENT:                                              return "XACT_S_MADECHANGESCONTENT";
	case XACT_S_MADECHANGESINFORM:                                               return "XACT_S_MADECHANGESINFORM";
	case XACT_S_ALLNORETAIN:                                                     return "XACT_S_ALLNORETAIN";
	case XACT_S_ABORTING:                                                        return "XACT_S_ABORTING";
	case XACT_S_SINGLEPHASE:                                                     return "XACT_S_SINGLEPHASE";
	case XACT_S_LOCALLY_OK:                                                      return "XACT_S_LOCALLY_OK";
	case XACT_S_LASTRESOURCEMANAGER:                                             return "XACT_S_LASTRESOURCEMANAGER";
	case CO_S_NOTALLINTERFACES:                                                  return "CO_S_NOTALLINTERFACES";
	case CO_S_MACHINENAMENOTFOUND:                                               return "CO_S_MACHINENAMENOTFOUND";
	case SEC_I_CONTINUE_NEEDED:                                                  return "SEC_I_CONTINUE_NEEDED";
	case SEC_I_COMPLETE_NEEDED:                                                  return "SEC_I_COMPLETE_NEEDED";
	case SEC_I_COMPLETE_AND_CONTINUE:                                            return "SEC_I_COMPLETE_AND_CONTINUE";
	case SEC_I_LOCAL_LOGON:                                                      return "SEC_I_LOCAL_LOGON";
	case SEC_I_CONTEXT_EXPIRED:                                                  return "SEC_I_CONTEXT_EXPIRED";
	case SEC_I_INCOMPLETE_CREDENTIALS:                                           return "SEC_I_INCOMPLETE_CREDENTIALS";
	case SEC_I_RENEGOTIATE:                                                      return "SEC_I_RENEGOTIATE";
	case SEC_I_NO_LSA_CONTEXT:                                                   return "SEC_I_NO_LSA_CONTEXT";
	case SEC_I_SIGNATURE_NEEDED:                                                 return "SEC_I_SIGNATURE_NEEDED";
	case CRYPT_I_NEW_PROTECTION_REQUIRED:                                        return "CRYPT_I_NEW_PROTECTION_REQUIRED";
	case ERROR_GRAPHICS_DRIVER_MISMATCH:                                         return "ERROR_GRAPHICS_DRIVER_MISMATCH";
	case ERROR_GRAPHICS_UNKNOWN_CHILD_STATUS:                                    return "ERROR_GRAPHICS_UNKNOWN_CHILD_STATUS";
	case ERROR_GRAPHICS_LEADLINK_START_DEFERRED:                                 return "ERROR_GRAPHICS_LEADLINK_START_DEFERRED";
	case ERROR_GRAPHICS_POLLING_TOO_FREQUENTLY:                                  return "ERROR_GRAPHICS_POLLING_TOO_FREQUENTLY";
	case ERROR_GRAPHICS_START_DEFERRED:                                          return "ERROR_GRAPHICS_START_DEFERRED";
	case E_PENDING:                                                              return "E_PENDING";
	case E_NOTIMPL:                                                              return "E_NOTIMPL";
	case E_NOINTERFACE:                                                          return "E_NOINTERFACE";
	case E_POINTER:                                                              return "E_POINTER";
	case E_ABORT:                                                                return "E_ABORT";
	case E_FAIL:                                                                 return "E_FAIL";
	case CO_E_INIT_TLS:                                                          return "CO_E_INIT_TLS";
	case CO_E_INIT_SHARED_ALLOCATOR:                                             return "CO_E_INIT_SHARED_ALLOCATOR";
	case CO_E_INIT_MEMORY_ALLOCATOR:                                             return "CO_E_INIT_MEMORY_ALLOCATOR";
	case CO_E_INIT_CLASS_CACHE:                                                  return "CO_E_INIT_CLASS_CACHE";
	case CO_E_INIT_RPC_CHANNEL:                                                  return "CO_E_INIT_RPC_CHANNEL";
	case CO_E_INIT_TLS_SET_CHANNEL_CONTROL:                                      return "CO_E_INIT_TLS_SET_CHANNEL_CONTROL";
	case CO_E_INIT_TLS_CHANNEL_CONTROL:                                          return "CO_E_INIT_TLS_CHANNEL_CONTROL";
	case CO_E_INIT_UNACCEPTED_USER_ALLOCATOR:                                    return "CO_E_INIT_UNACCEPTED_USER_ALLOCATOR";
	case CO_E_INIT_SCM_MUTEX_EXISTS:                                             return "CO_E_INIT_SCM_MUTEX_EXISTS";
	case CO_E_INIT_SCM_FILE_MAPPING_EXISTS:                                      return "CO_E_INIT_SCM_FILE_MAPPING_EXISTS";
	case CO_E_INIT_SCM_MAP_VIEW_OF_FILE:                                         return "CO_E_INIT_SCM_MAP_VIEW_OF_FILE";
	case CO_E_INIT_SCM_EXEC_FAILURE:                                             return "CO_E_INIT_SCM_EXEC_FAILURE";
	case CO_E_INIT_ONLY_SINGLE_THREADED:                                         return "CO_E_INIT_ONLY_SINGLE_THREADED";
	case CO_E_CANT_REMOTE:                                                       return "CO_E_CANT_REMOTE";
	case CO_E_BAD_SERVER_NAME:                                                   return "CO_E_BAD_SERVER_NAME";
	case CO_E_WRONG_SERVER_IDENTITY:                                             return "CO_E_WRONG_SERVER_IDENTITY";
	case CO_E_OLE1DDE_DISABLED:                                                  return "CO_E_OLE1DDE_DISABLED";
	case CO_E_RUNAS_SYNTAX:                                                      return "CO_E_RUNAS_SYNTAX";
	case CO_E_CREATEPROCESS_FAILURE:                                             return "CO_E_CREATEPROCESS_FAILURE";
	case CO_E_RUNAS_CREATEPROCESS_FAILURE:                                       return "CO_E_RUNAS_CREATEPROCESS_FAILURE";
	case CO_E_RUNAS_LOGON_FAILURE:                                               return "CO_E_RUNAS_LOGON_FAILURE";
	case CO_E_LAUNCH_PERMSSION_DENIED:                                           return "CO_E_LAUNCH_PERMSSION_DENIED";
	case CO_E_START_SERVICE_FAILURE:                                             return "CO_E_START_SERVICE_FAILURE";
	case CO_E_REMOTE_COMMUNICATION_FAILURE:                                      return "CO_E_REMOTE_COMMUNICATION_FAILURE";
	case CO_E_SERVER_START_TIMEOUT:                                              return "CO_E_SERVER_START_TIMEOUT";
	case CO_E_CLSREG_INCONSISTENT:                                               return "CO_E_CLSREG_INCONSISTENT";
	case CO_E_IIDREG_INCONSISTENT:                                               return "CO_E_IIDREG_INCONSISTENT";
	case CO_E_NOT_SUPPORTED:                                                     return "CO_E_NOT_SUPPORTED";
	case CO_E_RELOAD_DLL:                                                        return "CO_E_RELOAD_DLL";
	case CO_E_MSI_ERROR:                                                         return "CO_E_MSI_ERROR";
	case CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT:                          return "CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT";
	case CO_E_SERVER_PAUSED:                                                     return "CO_E_SERVER_PAUSED";
	case CO_E_SERVER_NOT_PAUSED:                                                 return "CO_E_SERVER_NOT_PAUSED";
	case CO_E_CLASS_DISABLED:                                                    return "CO_E_CLASS_DISABLED";
	case CO_E_CLRNOTAVAILABLE:                                                   return "CO_E_CLRNOTAVAILABLE";
	case CO_E_ASYNC_WORK_REJECTED:                                               return "CO_E_ASYNC_WORK_REJECTED";
	case CO_E_SERVER_INIT_TIMEOUT:                                               return "CO_E_SERVER_INIT_TIMEOUT";
	case CO_E_NO_SECCTX_IN_ACTIVATE:                                             return "CO_E_NO_SECCTX_IN_ACTIVATE";
	case CO_E_TRACKER_CONFIG:                                                    return "CO_E_TRACKER_CONFIG";
	case CO_E_THREADPOOL_CONFIG:                                                 return "CO_E_THREADPOOL_CONFIG";
	case CO_E_SXS_CONFIG:                                                        return "CO_E_SXS_CONFIG";
	case CO_E_MALFORMED_SPN:                                                     return "CO_E_MALFORMED_SPN";
	case E_UNEXPECTED:                                                           return "E_UNEXPECTED";
	case RPC_E_CALL_REJECTED:                                                    return "RPC_E_CALL_REJECTED";
	case RPC_E_CALL_CANCELED:                                                    return "RPC_E_CALL_CANCELED";
	case RPC_E_CANTPOST_INSENDCALL:                                              return "RPC_E_CANTPOST_INSENDCALL";
	case RPC_E_CANTCALLOUT_INASYNCCALL:                                          return "RPC_E_CANTCALLOUT_INASYNCCALL";
	case RPC_E_CANTCALLOUT_INEXTERNALCALL:                                       return "RPC_E_CANTCALLOUT_INEXTERNALCALL";
	case RPC_E_CONNECTION_TERMINATED:                                            return "RPC_E_CONNECTION_TERMINATED";
	case RPC_E_SERVER_DIED:                                                      return "RPC_E_SERVER_DIED";
	case RPC_E_CLIENT_DIED:                                                      return "RPC_E_CLIENT_DIED";
	case RPC_E_INVALID_DATAPACKET:                                               return "RPC_E_INVALID_DATAPACKET";
	case RPC_E_CANTTRANSMIT_CALL:                                                return "RPC_E_CANTTRANSMIT_CALL";
	case RPC_E_CLIENT_CANTMARSHAL_DATA:                                          return "RPC_E_CLIENT_CANTMARSHAL_DATA";
	case RPC_E_CLIENT_CANTUNMARSHAL_DATA:                                        return "RPC_E_CLIENT_CANTUNMARSHAL_DATA";
	case RPC_E_SERVER_CANTMARSHAL_DATA:                                          return "RPC_E_SERVER_CANTMARSHAL_DATA";
	case RPC_E_SERVER_CANTUNMARSHAL_DATA:                                        return "RPC_E_SERVER_CANTUNMARSHAL_DATA";
	case RPC_E_INVALID_DATA:                                                     return "RPC_E_INVALID_DATA";
	case RPC_E_INVALID_PARAMETER:                                                return "RPC_E_INVALID_PARAMETER";
	case RPC_E_CANTCALLOUT_AGAIN:                                                return "RPC_E_CANTCALLOUT_AGAIN";
	case RPC_E_SERVER_DIED_DNE:                                                  return "RPC_E_SERVER_DIED_DNE";
	case RPC_E_SYS_CALL_FAILED:                                                  return "RPC_E_SYS_CALL_FAILED";
	case RPC_E_OUT_OF_RESOURCES:                                                 return "RPC_E_OUT_OF_RESOURCES";
	case RPC_E_ATTEMPTED_MULTITHREAD:                                            return "RPC_E_ATTEMPTED_MULTITHREAD";
	case RPC_E_NOT_REGISTERED:                                                   return "RPC_E_NOT_REGISTERED";
	case RPC_E_FAULT:                                                            return "RPC_E_FAULT";
	case RPC_E_SERVERFAULT:                                                      return "RPC_E_SERVERFAULT";
	case RPC_E_CHANGED_MODE:                                                     return "RPC_E_CHANGED_MODE";
	case RPC_E_INVALIDMETHOD:                                                    return "RPC_E_INVALIDMETHOD";
	case RPC_E_DISCONNECTED:                                                     return "RPC_E_DISCONNECTED";
	case RPC_E_RETRY:                                                            return "RPC_E_RETRY";
	case RPC_E_SERVERCALL_RETRYLATER:                                            return "RPC_E_SERVERCALL_RETRYLATER";
	case RPC_E_SERVERCALL_REJECTED:                                              return "RPC_E_SERVERCALL_REJECTED";
	case RPC_E_INVALID_CALLDATA:                                                 return "RPC_E_INVALID_CALLDATA";
	case RPC_E_CANTCALLOUT_ININPUTSYNCCALL:                                      return "RPC_E_CANTCALLOUT_ININPUTSYNCCALL";
	case RPC_E_WRONG_THREAD:                                                     return "RPC_E_WRONG_THREAD";
	case RPC_E_THREAD_NOT_INIT:                                                  return "RPC_E_THREAD_NOT_INIT";
	case RPC_E_VERSION_MISMATCH:                                                 return "RPC_E_VERSION_MISMATCH";
	case RPC_E_INVALID_HEADER:                                                   return "RPC_E_INVALID_HEADER";
	case RPC_E_INVALID_EXTENSION:                                                return "RPC_E_INVALID_EXTENSION";
	case RPC_E_INVALID_IPID:                                                     return "RPC_E_INVALID_IPID";
	case RPC_E_INVALID_OBJECT:                                                   return "RPC_E_INVALID_OBJECT";
	case RPC_S_CALLPENDING:                                                      return "RPC_S_CALLPENDING";
	case RPC_S_WAITONTIMER:                                                      return "RPC_S_WAITONTIMER";
	case RPC_E_CALL_COMPLETE:                                                    return "RPC_E_CALL_COMPLETE";
	case RPC_E_UNSECURE_CALL:                                                    return "RPC_E_UNSECURE_CALL";
	case RPC_E_TOO_LATE:                                                         return "RPC_E_TOO_LATE";
	case RPC_E_NO_GOOD_SECURITY_PACKAGES:                                        return "RPC_E_NO_GOOD_SECURITY_PACKAGES";
	case RPC_E_ACCESS_DENIED:                                                    return "RPC_E_ACCESS_DENIED";
	case RPC_E_REMOTE_DISABLED:                                                  return "RPC_E_REMOTE_DISABLED";
	case RPC_E_INVALID_OBJREF:                                                   return "RPC_E_INVALID_OBJREF";
	case RPC_E_NO_CONTEXT:                                                       return "RPC_E_NO_CONTEXT";
	case RPC_E_TIMEOUT:                                                          return "RPC_E_TIMEOUT";
	case RPC_E_NO_SYNC:                                                          return "RPC_E_NO_SYNC";
	case RPC_E_FULLSIC_REQUIRED:                                                 return "RPC_E_FULLSIC_REQUIRED";
	case RPC_E_INVALID_STD_NAME:                                                 return "RPC_E_INVALID_STD_NAME";
	case CO_E_FAILEDTOIMPERSONATE:                                               return "CO_E_FAILEDTOIMPERSONATE";
	case CO_E_FAILEDTOGETSECCTX:                                                 return "CO_E_FAILEDTOGETSECCTX";
	case CO_E_FAILEDTOOPENTHREADTOKEN:                                           return "CO_E_FAILEDTOOPENTHREADTOKEN";
	case CO_E_FAILEDTOGETTOKENINFO:                                              return "CO_E_FAILEDTOGETTOKENINFO";
	case CO_E_TRUSTEEDOESNTMATCHCLIENT:                                          return "CO_E_TRUSTEEDOESNTMATCHCLIENT";
	case CO_E_FAILEDTOQUERYCLIENTBLANKET:                                        return "CO_E_FAILEDTOQUERYCLIENTBLANKET";
	case CO_E_FAILEDTOSETDACL:                                                   return "CO_E_FAILEDTOSETDACL";
	case CO_E_ACCESSCHECKFAILED:                                                 return "CO_E_ACCESSCHECKFAILED";
	case CO_E_NETACCESSAPIFAILED:                                                return "CO_E_NETACCESSAPIFAILED";
	case CO_E_WRONGTRUSTEENAMESYNTAX:                                            return "CO_E_WRONGTRUSTEENAMESYNTAX";
	case CO_E_INVALIDSID:                                                        return "CO_E_INVALIDSID";
	case CO_E_CONVERSIONFAILED:                                                  return "CO_E_CONVERSIONFAILED";
	case CO_E_NOMATCHINGSIDFOUND:                                                return "CO_E_NOMATCHINGSIDFOUND";
	case CO_E_LOOKUPACCSIDFAILED:                                                return "CO_E_LOOKUPACCSIDFAILED";
	case CO_E_NOMATCHINGNAMEFOUND:                                               return "CO_E_NOMATCHINGNAMEFOUND";
	case CO_E_LOOKUPACCNAMEFAILED:                                               return "CO_E_LOOKUPACCNAMEFAILED";
	case CO_E_SETSERLHNDLFAILED:                                                 return "CO_E_SETSERLHNDLFAILED";
	case CO_E_FAILEDTOGETWINDIR:                                                 return "CO_E_FAILEDTOGETWINDIR";
	case CO_E_PATHTOOLONG:                                                       return "CO_E_PATHTOOLONG";
	case CO_E_FAILEDTOGENUUID:                                                   return "CO_E_FAILEDTOGENUUID";
	case CO_E_FAILEDTOCREATEFILE:                                                return "CO_E_FAILEDTOCREATEFILE";
	case CO_E_FAILEDTOCLOSEHANDLE:                                               return "CO_E_FAILEDTOCLOSEHANDLE";
	case CO_E_EXCEEDSYSACLLIMIT:                                                 return "CO_E_EXCEEDSYSACLLIMIT";
	case CO_E_ACESINWRONGORDER:                                                  return "CO_E_ACESINWRONGORDER";
	case CO_E_INCOMPATIBLESTREAMVERSION:                                         return "CO_E_INCOMPATIBLESTREAMVERSION";
	case CO_E_FAILEDTOOPENPROCESSTOKEN:                                          return "CO_E_FAILEDTOOPENPROCESSTOKEN";
	case CO_E_DECODEFAILED:                                                      return "CO_E_DECODEFAILED";
	case CO_E_ACNOTINITIALIZED:                                                  return "CO_E_ACNOTINITIALIZED";
	case CO_E_CANCEL_DISABLED:                                                   return "CO_E_CANCEL_DISABLED";
	case RPC_E_UNEXPECTED:                                                       return "RPC_E_UNEXPECTED";
	case DISP_E_UNKNOWNINTERFACE:                                                return "DISP_E_UNKNOWNINTERFACE";
	case DISP_E_MEMBERNOTFOUND:                                                  return "DISP_E_MEMBERNOTFOUND";
	case DISP_E_PARAMNOTFOUND:                                                   return "DISP_E_PARAMNOTFOUND";
	case DISP_E_TYPEMISMATCH:                                                    return "DISP_E_TYPEMISMATCH";
	case DISP_E_UNKNOWNNAME:                                                     return "DISP_E_UNKNOWNNAME";
	case DISP_E_NONAMEDARGS:                                                     return "DISP_E_NONAMEDARGS";
	case DISP_E_BADVARTYPE:                                                      return "DISP_E_BADVARTYPE";
	case DISP_E_EXCEPTION:                                                       return "DISP_E_EXCEPTION";
	case DISP_E_OVERFLOW:                                                        return "DISP_E_OVERFLOW";
	case DISP_E_BADINDEX:                                                        return "DISP_E_BADINDEX";
	case DISP_E_UNKNOWNLCID:                                                     return "DISP_E_UNKNOWNLCID";
	case DISP_E_ARRAYISLOCKED:                                                   return "DISP_E_ARRAYISLOCKED";
	case DISP_E_BADPARAMCOUNT:                                                   return "DISP_E_BADPARAMCOUNT";
	case DISP_E_PARAMNOTOPTIONAL:                                                return "DISP_E_PARAMNOTOPTIONAL";
	case DISP_E_BADCALLEE:                                                       return "DISP_E_BADCALLEE";
	case DISP_E_NOTACOLLECTION:                                                  return "DISP_E_NOTACOLLECTION";
	case DISP_E_DIVBYZERO:                                                       return "DISP_E_DIVBYZERO";
	case DISP_E_BUFFERTOOSMALL:                                                  return "DISP_E_BUFFERTOOSMALL";
	case TYPE_E_BUFFERTOOSMALL:                                                  return "TYPE_E_BUFFERTOOSMALL";
	case TYPE_E_FIELDNOTFOUND:                                                   return "TYPE_E_FIELDNOTFOUND";
	case TYPE_E_INVDATAREAD:                                                     return "TYPE_E_INVDATAREAD";
	case TYPE_E_UNSUPFORMAT:                                                     return "TYPE_E_UNSUPFORMAT";
	case TYPE_E_REGISTRYACCESS:                                                  return "TYPE_E_REGISTRYACCESS";
	case TYPE_E_LIBNOTREGISTERED:                                                return "TYPE_E_LIBNOTREGISTERED";
	case TYPE_E_UNDEFINEDTYPE:                                                   return "TYPE_E_UNDEFINEDTYPE";
	case TYPE_E_QUALIFIEDNAMEDISALLOWED:                                         return "TYPE_E_QUALIFIEDNAMEDISALLOWED";
	case TYPE_E_INVALIDSTATE:                                                    return "TYPE_E_INVALIDSTATE";
	case TYPE_E_WRONGTYPEKIND:                                                   return "TYPE_E_WRONGTYPEKIND";
	case TYPE_E_ELEMENTNOTFOUND:                                                 return "TYPE_E_ELEMENTNOTFOUND";
	case TYPE_E_AMBIGUOUSNAME:                                                   return "TYPE_E_AMBIGUOUSNAME";
	case TYPE_E_NAMECONFLICT:                                                    return "TYPE_E_NAMECONFLICT";
	case TYPE_E_UNKNOWNLCID:                                                     return "TYPE_E_UNKNOWNLCID";
	case TYPE_E_DLLFUNCTIONNOTFOUND:                                             return "TYPE_E_DLLFUNCTIONNOTFOUND";
	case TYPE_E_BADMODULEKIND:                                                   return "TYPE_E_BADMODULEKIND";
	case TYPE_E_SIZETOOBIG:                                                      return "TYPE_E_SIZETOOBIG";
	case TYPE_E_DUPLICATEID:                                                     return "TYPE_E_DUPLICATEID";
	case TYPE_E_INVALIDID:                                                       return "TYPE_E_INVALIDID";
	case TYPE_E_TYPEMISMATCH:                                                    return "TYPE_E_TYPEMISMATCH";
	case TYPE_E_OUTOFBOUNDS:                                                     return "TYPE_E_OUTOFBOUNDS";
	case TYPE_E_IOERROR:                                                         return "TYPE_E_IOERROR";
	case TYPE_E_CANTCREATETMPFILE:                                               return "TYPE_E_CANTCREATETMPFILE";
	case TYPE_E_CANTLOADLIBRARY:                                                 return "TYPE_E_CANTLOADLIBRARY";
	case TYPE_E_INCONSISTENTPROPFUNCS:                                           return "TYPE_E_INCONSISTENTPROPFUNCS";
	case TYPE_E_CIRCULARTYPE:                                                    return "TYPE_E_CIRCULARTYPE";
	case STG_E_INVALIDFUNCTION:                                                  return "STG_E_INVALIDFUNCTION";
	case STG_E_FILENOTFOUND:                                                     return "STG_E_FILENOTFOUND";
	case STG_E_PATHNOTFOUND:                                                     return "STG_E_PATHNOTFOUND";
	case STG_E_TOOMANYOPENFILES:                                                 return "STG_E_TOOMANYOPENFILES";
	case STG_E_ACCESSDENIED:                                                     return "STG_E_ACCESSDENIED";
	case STG_E_INVALIDHANDLE:                                                    return "STG_E_INVALIDHANDLE";
	case STG_E_INSUFFICIENTMEMORY:                                               return "STG_E_INSUFFICIENTMEMORY";
	case STG_E_INVALIDPOINTER:                                                   return "STG_E_INVALIDPOINTER";
	case STG_E_NOMOREFILES:                                                      return "STG_E_NOMOREFILES";
	case STG_E_DISKISWRITEPROTECTED:                                             return "STG_E_DISKISWRITEPROTECTED";
	case STG_E_SEEKERROR:                                                        return "STG_E_SEEKERROR";
	case STG_E_WRITEFAULT:                                                       return "STG_E_WRITEFAULT";
	case STG_E_READFAULT:                                                        return "STG_E_READFAULT";
	case STG_E_SHAREVIOLATION:                                                   return "STG_E_SHAREVIOLATION";
	case STG_E_LOCKVIOLATION:                                                    return "STG_E_LOCKVIOLATION";
	case STG_E_FILEALREADYEXISTS:                                                return "STG_E_FILEALREADYEXISTS";
	case STG_E_INVALIDPARAMETER:                                                 return "STG_E_INVALIDPARAMETER";
	case STG_E_MEDIUMFULL:                                                       return "STG_E_MEDIUMFULL";
	case STG_E_PROPSETMISMATCHED:                                                return "STG_E_PROPSETMISMATCHED";
	case STG_E_ABNORMALAPIEXIT:                                                  return "STG_E_ABNORMALAPIEXIT";
	case STG_E_INVALIDHEADER:                                                    return "STG_E_INVALIDHEADER";
	case STG_E_INVALIDNAME:                                                      return "STG_E_INVALIDNAME";
	case STG_E_UNKNOWN:                                                          return "STG_E_UNKNOWN";
	case STG_E_UNIMPLEMENTEDFUNCTION:                                            return "STG_E_UNIMPLEMENTEDFUNCTION";
	case STG_E_INVALIDFLAG:                                                      return "STG_E_INVALIDFLAG";
	case STG_E_INUSE:                                                            return "STG_E_INUSE";
	case STG_E_NOTCURRENT:                                                       return "STG_E_NOTCURRENT";
	case STG_E_REVERTED:                                                         return "STG_E_REVERTED";
	case STG_E_CANTSAVE:                                                         return "STG_E_CANTSAVE";
	case STG_E_OLDFORMAT:                                                        return "STG_E_OLDFORMAT";
	case STG_E_OLDDLL:                                                           return "STG_E_OLDDLL";
	case STG_E_SHAREREQUIRED:                                                    return "STG_E_SHAREREQUIRED";
	case STG_E_NOTFILEBASEDSTORAGE:                                              return "STG_E_NOTFILEBASEDSTORAGE";
	case STG_E_EXTANTMARSHALLINGS:                                               return "STG_E_EXTANTMARSHALLINGS";
	case STG_E_DOCFILECORRUPT:                                                   return "STG_E_DOCFILECORRUPT";
	case STG_E_BADBASEADDRESS:                                                   return "STG_E_BADBASEADDRESS";
	case STG_E_DOCFILETOOLARGE:                                                  return "STG_E_DOCFILETOOLARGE";
	case STG_E_NOTSIMPLEFORMAT:                                                  return "STG_E_NOTSIMPLEFORMAT";
	case STG_E_INCOMPLETE:                                                       return "STG_E_INCOMPLETE";
	case STG_E_TERMINATED:                                                       return "STG_E_TERMINATED";
	case STG_E_STATUS_COPY_PROTECTION_FAILURE:                                   return "STG_E_STATUS_COPY_PROTECTION_FAILURE";
	case STG_E_CSS_AUTHENTICATION_FAILURE:                                       return "STG_E_CSS_AUTHENTICATION_FAILURE";
	case STG_E_CSS_KEY_NOT_PRESENT:                                              return "STG_E_CSS_KEY_NOT_PRESENT";
	case STG_E_CSS_KEY_NOT_ESTABLISHED:                                          return "STG_E_CSS_KEY_NOT_ESTABLISHED";
	case STG_E_CSS_SCRAMBLED_SECTOR:                                             return "STG_E_CSS_SCRAMBLED_SECTOR";
	case STG_E_CSS_REGION_MISMATCH:                                              return "STG_E_CSS_REGION_MISMATCH";
	case STG_E_RESETS_EXHAUSTED:                                                 return "STG_E_RESETS_EXHAUSTED";
	case OLE_E_OLEVERB:                                                          return "OLE_E_OLEVERB";
	case OLE_E_ADVF:                                                             return "OLE_E_ADVF";
	case OLE_E_ENUM_NOMORE:                                                      return "OLE_E_ENUM_NOMORE";
	case OLE_E_ADVISENOTSUPPORTED:                                               return "OLE_E_ADVISENOTSUPPORTED";
	case OLE_E_NOCONNECTION:                                                     return "OLE_E_NOCONNECTION";
	case OLE_E_NOTRUNNING:                                                       return "OLE_E_NOTRUNNING";
	case OLE_E_NOCACHE:                                                          return "OLE_E_NOCACHE";
	case OLE_E_BLANK:                                                            return "OLE_E_BLANK";
	case OLE_E_CLASSDIFF:                                                        return "OLE_E_CLASSDIFF";
	case OLE_E_CANT_GETMONIKER:                                                  return "OLE_E_CANT_GETMONIKER";
	case OLE_E_CANT_BINDTOSOURCE:                                                return "OLE_E_CANT_BINDTOSOURCE";
	case OLE_E_STATIC:                                                           return "OLE_E_STATIC";
	case OLE_E_PROMPTSAVECANCELLED:                                              return "OLE_E_PROMPTSAVECANCELLED";
	case OLE_E_INVALIDRECT:                                                      return "OLE_E_INVALIDRECT";
	case OLE_E_WRONGCOMPOBJ:                                                     return "OLE_E_WRONGCOMPOBJ";
	case OLE_E_INVALIDHWND:                                                      return "OLE_E_INVALIDHWND";
	case OLE_E_NOT_INPLACEACTIVE:                                                return "OLE_E_NOT_INPLACEACTIVE";
	case OLE_E_CANTCONVERT:                                                      return "OLE_E_CANTCONVERT";
	case OLE_E_NOSTORAGE:                                                        return "OLE_E_NOSTORAGE";
	case DV_E_FORMATETC:                                                         return "DV_E_FORMATETC";
	case DV_E_DVTARGETDEVICE:                                                    return "DV_E_DVTARGETDEVICE";
	case DV_E_STGMEDIUM:                                                         return "DV_E_STGMEDIUM";
	case DV_E_STATDATA:                                                          return "DV_E_STATDATA";
	case DV_E_LINDEX:                                                            return "DV_E_LINDEX";
	case DV_E_TYMED:                                                             return "DV_E_TYMED";
	case DV_E_CLIPFORMAT:                                                        return "DV_E_CLIPFORMAT";
	case DV_E_DVASPECT:                                                          return "DV_E_DVASPECT";
	case DV_E_DVTARGETDEVICE_SIZE:                                               return "DV_E_DVTARGETDEVICE_SIZE";
	case DV_E_NOIVIEWOBJECT:                                                     return "DV_E_NOIVIEWOBJECT";
	case DRAGDROP_E_NOTREGISTERED:                                               return "DRAGDROP_E_NOTREGISTERED";
	case DRAGDROP_E_ALREADYREGISTERED:                                           return "DRAGDROP_E_ALREADYREGISTERED";
	case DRAGDROP_E_INVALIDHWND:                                                 return "DRAGDROP_E_INVALIDHWND";
	case CLASS_E_NOAGGREGATION:                                                  return "CLASS_E_NOAGGREGATION";
	case CLASS_E_CLASSNOTAVAILABLE:                                              return "CLASS_E_CLASSNOTAVAILABLE";
	case CLASS_E_NOTLICENSED:                                                    return "CLASS_E_NOTLICENSED";
	case VIEW_E_DRAW:                                                            return "VIEW_E_DRAW";
	case REGDB_E_READREGDB:                                                      return "REGDB_E_READREGDB";
	case REGDB_E_WRITEREGDB:                                                     return "REGDB_E_WRITEREGDB";
	case REGDB_E_KEYMISSING:                                                     return "REGDB_E_KEYMISSING";
	case REGDB_E_INVALIDVALUE:                                                   return "REGDB_E_INVALIDVALUE";
	case REGDB_E_CLASSNOTREG:                                                    return "REGDB_E_CLASSNOTREG";
	case REGDB_E_IIDNOTREG:                                                      return "REGDB_E_IIDNOTREG";
	case REGDB_E_BADTHREADINGMODEL:                                              return "REGDB_E_BADTHREADINGMODEL";
	case CAT_E_CATIDNOEXIST:                                                     return "CAT_E_CATIDNOEXIST";
	case CAT_E_NODESCRIPTION:                                                    return "CAT_E_NODESCRIPTION";
	case CS_E_PACKAGE_NOTFOUND:                                                  return "CS_E_PACKAGE_NOTFOUND";
	case CS_E_NOT_DELETABLE:                                                     return "CS_E_NOT_DELETABLE";
	case CS_E_CLASS_NOTFOUND:                                                    return "CS_E_CLASS_NOTFOUND";
	case CS_E_INVALID_VERSION:                                                   return "CS_E_INVALID_VERSION";
	case CS_E_NO_CLASSSTORE:                                                     return "CS_E_NO_CLASSSTORE";
	case CS_E_OBJECT_NOTFOUND:                                                   return "CS_E_OBJECT_NOTFOUND";
	case CS_E_OBJECT_ALREADY_EXISTS:                                             return "CS_E_OBJECT_ALREADY_EXISTS";
	case CS_E_INVALID_PATH:                                                      return "CS_E_INVALID_PATH";
	case CS_E_NETWORK_ERROR:                                                     return "CS_E_NETWORK_ERROR";
	case CS_E_ADMIN_LIMIT_EXCEEDED:                                              return "CS_E_ADMIN_LIMIT_EXCEEDED";
	case CS_E_SCHEMA_MISMATCH:                                                   return "CS_E_SCHEMA_MISMATCH";
	case CS_E_INTERNAL_ERROR:                                                    return "CS_E_INTERNAL_ERROR";
	case CACHE_E_NOCACHE_UPDATED:                                                return "CACHE_E_NOCACHE_UPDATED";
	case OLEOBJ_E_NOVERBS:                                                       return "OLEOBJ_E_NOVERBS";
	case OLEOBJ_E_INVALIDVERB:                                                   return "OLEOBJ_E_INVALIDVERB";
	case INPLACE_E_NOTUNDOABLE:                                                  return "INPLACE_E_NOTUNDOABLE";
	case INPLACE_E_NOTOOLSPACE:                                                  return "INPLACE_E_NOTOOLSPACE";
	case CONVERT10_E_OLESTREAM_GET:                                              return "CONVERT10_E_OLESTREAM_GET";
	case CONVERT10_E_OLESTREAM_PUT:                                              return "CONVERT10_E_OLESTREAM_PUT";
	case CONVERT10_E_OLESTREAM_FMT:                                              return "CONVERT10_E_OLESTREAM_FMT";
	case CONVERT10_E_OLESTREAM_BITMAP_TO_DIB:                                    return "CONVERT10_E_OLESTREAM_BITMAP_TO_DIB";
	case CONVERT10_E_STG_FMT:                                                    return "CONVERT10_E_STG_FMT";
	case CONVERT10_E_STG_NO_STD_STREAM:                                          return "CONVERT10_E_STG_NO_STD_STREAM";
	case CONVERT10_E_STG_DIB_TO_BITMAP:                                          return "CONVERT10_E_STG_DIB_TO_BITMAP";
	case CLIPBRD_E_CANT_OPEN:                                                    return "CLIPBRD_E_CANT_OPEN";
	case CLIPBRD_E_CANT_EMPTY:                                                   return "CLIPBRD_E_CANT_EMPTY";
	case CLIPBRD_E_CANT_SET:                                                     return "CLIPBRD_E_CANT_SET";
	case CLIPBRD_E_BAD_DATA:                                                     return "CLIPBRD_E_BAD_DATA";
	case CLIPBRD_E_CANT_CLOSE:                                                   return "CLIPBRD_E_CANT_CLOSE";
	case MK_E_CONNECTMANUALLY:                                                   return "MK_E_CONNECTMANUALLY";
	case MK_E_EXCEEDEDDEADLINE:                                                  return "MK_E_EXCEEDEDDEADLINE";
	case MK_E_NEEDGENERIC:                                                       return "MK_E_NEEDGENERIC";
	case MK_E_UNAVAILABLE:                                                       return "MK_E_UNAVAILABLE";
	case MK_E_SYNTAX:                                                            return "MK_E_SYNTAX";
	case MK_E_NOOBJECT:                                                          return "MK_E_NOOBJECT";
	case MK_E_INVALIDEXTENSION:                                                  return "MK_E_INVALIDEXTENSION";
	case MK_E_INTERMEDIATEINTERFACENOTSUPPORTED:                                 return "MK_E_INTERMEDIATEINTERFACENOTSUPPORTED";
	case MK_E_NOTBINDABLE:                                                       return "MK_E_NOTBINDABLE";
	case MK_E_NOTBOUND:                                                          return "MK_E_NOTBOUND";
	case MK_E_CANTOPENFILE:                                                      return "MK_E_CANTOPENFILE";
	case MK_E_MUSTBOTHERUSER:                                                    return "MK_E_MUSTBOTHERUSER";
	case MK_E_NOINVERSE:                                                         return "MK_E_NOINVERSE";
	case MK_E_NOSTORAGE:                                                         return "MK_E_NOSTORAGE";
	case MK_E_NOPREFIX:                                                          return "MK_E_NOPREFIX";
	case MK_E_ENUMERATION_FAILED:                                                return "MK_E_ENUMERATION_FAILED";
	case CO_E_NOTINITIALIZED:                                                    return "CO_E_NOTINITIALIZED";
	case CO_E_ALREADYINITIALIZED:                                                return "CO_E_ALREADYINITIALIZED";
	case CO_E_CANTDETERMINECLASS:                                                return "CO_E_CANTDETERMINECLASS";
	case CO_E_CLASSSTRING:                                                       return "CO_E_CLASSSTRING";
	case CO_E_IIDSTRING:                                                         return "CO_E_IIDSTRING";
	case CO_E_APPNOTFOUND:                                                       return "CO_E_APPNOTFOUND";
	case CO_E_APPSINGLEUSE:                                                      return "CO_E_APPSINGLEUSE";
	case CO_E_ERRORINAPP:                                                        return "CO_E_ERRORINAPP";
	case CO_E_DLLNOTFOUND:                                                       return "CO_E_DLLNOTFOUND";
	case CO_E_ERRORINDLL:                                                        return "CO_E_ERRORINDLL";
	case CO_E_WRONGOSFORAPP:                                                     return "CO_E_WRONGOSFORAPP";
	case CO_E_OBJNOTREG:                                                         return "CO_E_OBJNOTREG";
	case CO_E_OBJISREG:                                                          return "CO_E_OBJISREG";
	case CO_E_OBJNOTCONNECTED:                                                   return "CO_E_OBJNOTCONNECTED";
	case CO_E_APPDIDNTREG:                                                       return "CO_E_APPDIDNTREG";
	case CO_E_RELEASED:                                                          return "CO_E_RELEASED";
	case EVENT_E_ALL_SUBSCRIBERS_FAILED:                                         return "EVENT_E_ALL_SUBSCRIBERS_FAILED";
	case EVENT_E_QUERYSYNTAX:                                                    return "EVENT_E_QUERYSYNTAX";
	case EVENT_E_QUERYFIELD:                                                     return "EVENT_E_QUERYFIELD";
	case EVENT_E_INTERNALEXCEPTION:                                              return "EVENT_E_INTERNALEXCEPTION";
	case EVENT_E_INTERNALERROR:                                                  return "EVENT_E_INTERNALERROR";
	case EVENT_E_INVALID_PER_USER_SID:                                           return "EVENT_E_INVALID_PER_USER_SID";
	case EVENT_E_USER_EXCEPTION:                                                 return "EVENT_E_USER_EXCEPTION";
	case EVENT_E_TOO_MANY_METHODS:                                               return "EVENT_E_TOO_MANY_METHODS";
	case EVENT_E_MISSING_EVENTCLASS:                                             return "EVENT_E_MISSING_EVENTCLASS";
	case EVENT_E_NOT_ALL_REMOVED:                                                return "EVENT_E_NOT_ALL_REMOVED";
	case EVENT_E_COMPLUS_NOT_INSTALLED:                                          return "EVENT_E_COMPLUS_NOT_INSTALLED";
	case EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT:                      return "EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT";
	case EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT:                        return "EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT";
	case EVENT_E_INVALID_EVENT_CLASS_PARTITION:                                  return "EVENT_E_INVALID_EVENT_CLASS_PARTITION";
	case EVENT_E_PER_USER_SID_NOT_LOGGED_ON:                                     return "EVENT_E_PER_USER_SID_NOT_LOGGED_ON";
	case SCHED_E_TRIGGER_NOT_FOUND:                                              return "SCHED_E_TRIGGER_NOT_FOUND";
	case SCHED_E_TASK_NOT_READY:                                                 return "SCHED_E_TASK_NOT_READY";
	case SCHED_E_TASK_NOT_RUNNING:                                               return "SCHED_E_TASK_NOT_RUNNING";
	case SCHED_E_SERVICE_NOT_INSTALLED:                                          return "SCHED_E_SERVICE_NOT_INSTALLED";
	case SCHED_E_CANNOT_OPEN_TASK:                                               return "SCHED_E_CANNOT_OPEN_TASK";
	case SCHED_E_INVALID_TASK:                                                   return "SCHED_E_INVALID_TASK";
	case SCHED_E_ACCOUNT_INFORMATION_NOT_SET:                                    return "SCHED_E_ACCOUNT_INFORMATION_NOT_SET";
	case SCHED_E_ACCOUNT_NAME_NOT_FOUND:                                         return "SCHED_E_ACCOUNT_NAME_NOT_FOUND";
	case SCHED_E_ACCOUNT_DBASE_CORRUPT:                                          return "SCHED_E_ACCOUNT_DBASE_CORRUPT";
	case SCHED_E_NO_SECURITY_SERVICES:                                           return "SCHED_E_NO_SECURITY_SERVICES";
	case SCHED_E_UNKNOWN_OBJECT_VERSION:                                         return "SCHED_E_UNKNOWN_OBJECT_VERSION";
	case SCHED_E_UNSUPPORTED_ACCOUNT_OPTION:                                     return "SCHED_E_UNSUPPORTED_ACCOUNT_OPTION";
	case SCHED_E_SERVICE_NOT_RUNNING:                                            return "SCHED_E_SERVICE_NOT_RUNNING";
	case SCHED_E_UNEXPECTEDNODE:                                                 return "SCHED_E_UNEXPECTEDNODE";
	case SCHED_E_NAMESPACE:                                                      return "SCHED_E_NAMESPACE";
	case SCHED_E_INVALIDVALUE:                                                   return "SCHED_E_INVALIDVALUE";
	case SCHED_E_MISSINGNODE:                                                    return "SCHED_E_MISSINGNODE";
	case SCHED_E_MALFORMEDXML:                                                   return "SCHED_E_MALFORMEDXML";
	case SCHED_E_TOO_MANY_NODES:                                                 return "SCHED_E_TOO_MANY_NODES";
	case SCHED_E_PAST_END_BOUNDARY:                                              return "SCHED_E_PAST_END_BOUNDARY";
	case SCHED_E_ALREADY_RUNNING:                                                return "SCHED_E_ALREADY_RUNNING";
	case SCHED_E_USER_NOT_LOGGED_ON:                                             return "SCHED_E_USER_NOT_LOGGED_ON";
	case SCHED_E_INVALID_TASK_HASH:                                              return "SCHED_E_INVALID_TASK_HASH";
	case SCHED_E_SERVICE_NOT_AVAILABLE:                                          return "SCHED_E_SERVICE_NOT_AVAILABLE";
	case SCHED_E_SERVICE_TOO_BUSY:                                               return "SCHED_E_SERVICE_TOO_BUSY";
	case SCHED_E_TASK_ATTEMPTED:                                                 return "SCHED_E_TASK_ATTEMPTED";
	case XACT_E_ALREADYOTHERSINGLEPHASE:                                         return "XACT_E_ALREADYOTHERSINGLEPHASE";
	case XACT_E_CANTRETAIN:                                                      return "XACT_E_CANTRETAIN";
	case XACT_E_COMMITFAILED:                                                    return "XACT_E_COMMITFAILED";
	case XACT_E_COMMITPREVENTED:                                                 return "XACT_E_COMMITPREVENTED";
	case XACT_E_HEURISTICABORT:                                                  return "XACT_E_HEURISTICABORT";
	case XACT_E_HEURISTICCOMMIT:                                                 return "XACT_E_HEURISTICCOMMIT";
	case XACT_E_HEURISTICDAMAGE:                                                 return "XACT_E_HEURISTICDAMAGE";
	case XACT_E_HEURISTICDANGER:                                                 return "XACT_E_HEURISTICDANGER";
	case XACT_E_ISOLATIONLEVEL:                                                  return "XACT_E_ISOLATIONLEVEL";
	case XACT_E_NOASYNC:                                                         return "XACT_E_NOASYNC";
	case XACT_E_NOENLIST:                                                        return "XACT_E_NOENLIST";
	case XACT_E_NOISORETAIN:                                                     return "XACT_E_NOISORETAIN";
	case XACT_E_NORESOURCE:                                                      return "XACT_E_NORESOURCE";
	case XACT_E_NOTCURRENT:                                                      return "XACT_E_NOTCURRENT";
	case XACT_E_NOTRANSACTION:                                                   return "XACT_E_NOTRANSACTION";
	case XACT_E_NOTSUPPORTED:                                                    return "XACT_E_NOTSUPPORTED";
	case XACT_E_UNKNOWNRMGRID:                                                   return "XACT_E_UNKNOWNRMGRID";
	case XACT_E_WRONGSTATE:                                                      return "XACT_E_WRONGSTATE";
	case XACT_E_WRONGUOW:                                                        return "XACT_E_WRONGUOW";
	case XACT_E_XTIONEXISTS:                                                     return "XACT_E_XTIONEXISTS";
	case XACT_E_NOIMPORTOBJECT:                                                  return "XACT_E_NOIMPORTOBJECT";
	case XACT_E_INVALIDCOOKIE:                                                   return "XACT_E_INVALIDCOOKIE";
	case XACT_E_INDOUBT:                                                         return "XACT_E_INDOUBT";
	case XACT_E_NOTIMEOUT:                                                       return "XACT_E_NOTIMEOUT";
	case XACT_E_ALREADYINPROGRESS:                                               return "XACT_E_ALREADYINPROGRESS";
	case XACT_E_ABORTED:                                                         return "XACT_E_ABORTED";
	case XACT_E_LOGFULL:                                                         return "XACT_E_LOGFULL";
	case XACT_E_TMNOTAVAILABLE:                                                  return "XACT_E_TMNOTAVAILABLE";
	case XACT_E_CONNECTION_DOWN:                                                 return "XACT_E_CONNECTION_DOWN";
	case XACT_E_CONNECTION_DENIED:                                               return "XACT_E_CONNECTION_DENIED";
	case XACT_E_REENLISTTIMEOUT:                                                 return "XACT_E_REENLISTTIMEOUT";
	case XACT_E_TIP_CONNECT_FAILED:                                              return "XACT_E_TIP_CONNECT_FAILED";
	case XACT_E_TIP_PROTOCOL_ERROR:                                              return "XACT_E_TIP_PROTOCOL_ERROR";
	case XACT_E_TIP_PULL_FAILED:                                                 return "XACT_E_TIP_PULL_FAILED";
	case XACT_E_DEST_TMNOTAVAILABLE:                                             return "XACT_E_DEST_TMNOTAVAILABLE";
	case XACT_E_TIP_DISABLED:                                                    return "XACT_E_TIP_DISABLED";
	case XACT_E_NETWORK_TX_DISABLED:                                             return "XACT_E_NETWORK_TX_DISABLED";
	case XACT_E_PARTNER_NETWORK_TX_DISABLED:                                     return "XACT_E_PARTNER_NETWORK_TX_DISABLED";
	case XACT_E_XA_TX_DISABLED:                                                  return "XACT_E_XA_TX_DISABLED";
	case XACT_E_UNABLE_TO_READ_DTC_CONFIG:                                       return "XACT_E_UNABLE_TO_READ_DTC_CONFIG";
	case XACT_E_UNABLE_TO_LOAD_DTC_PROXY:                                        return "XACT_E_UNABLE_TO_LOAD_DTC_PROXY";
	case XACT_E_ABORTING:                                                        return "XACT_E_ABORTING";
	case XACT_E_CLERKNOTFOUND:                                                   return "XACT_E_CLERKNOTFOUND";
	case XACT_E_CLERKEXISTS:                                                     return "XACT_E_CLERKEXISTS";
	case XACT_E_RECOVERYINPROGRESS:                                              return "XACT_E_RECOVERYINPROGRESS";
	case XACT_E_TRANSACTIONCLOSED:                                               return "XACT_E_TRANSACTIONCLOSED";
	case XACT_E_INVALIDLSN:                                                      return "XACT_E_INVALIDLSN";
	case XACT_E_REPLAYREQUEST:                                                   return "XACT_E_REPLAYREQUEST";
	case CONTEXT_E_ABORTED:                                                      return "CONTEXT_E_ABORTED";
	case CONTEXT_E_ABORTING:                                                     return "CONTEXT_E_ABORTING";
	case CONTEXT_E_NOCONTEXT:                                                    return "CONTEXT_E_NOCONTEXT";
	case CONTEXT_E_WOULD_DEADLOCK:                                               return "CONTEXT_E_WOULD_DEADLOCK";
	case CONTEXT_E_SYNCH_TIMEOUT:                                                return "CONTEXT_E_SYNCH_TIMEOUT";
	case CONTEXT_E_OLDREF:                                                       return "CONTEXT_E_OLDREF";
	case CONTEXT_E_ROLENOTFOUND:                                                 return "CONTEXT_E_ROLENOTFOUND";
	case CONTEXT_E_TMNOTAVAILABLE:                                               return "CONTEXT_E_TMNOTAVAILABLE";
	case CO_E_ACTIVATIONFAILED:                                                  return "CO_E_ACTIVATIONFAILED";
	case CO_E_ACTIVATIONFAILED_EVENTLOGGED:                                      return "CO_E_ACTIVATIONFAILED_EVENTLOGGED";
	case CO_E_ACTIVATIONFAILED_CATALOGERROR:                                     return "CO_E_ACTIVATIONFAILED_CATALOGERROR";
	case CO_E_ACTIVATIONFAILED_TIMEOUT:                                          return "CO_E_ACTIVATIONFAILED_TIMEOUT";
	case CO_E_INITIALIZATIONFAILED:                                              return "CO_E_INITIALIZATIONFAILED";
	case CONTEXT_E_NOJIT:                                                        return "CONTEXT_E_NOJIT";
	case CONTEXT_E_NOTRANSACTION:                                                return "CONTEXT_E_NOTRANSACTION";
	case CO_E_THREADINGMODEL_CHANGED:                                            return "CO_E_THREADINGMODEL_CHANGED";
	case CO_E_NOIISINTRINSICS:                                                   return "CO_E_NOIISINTRINSICS";
	case CO_E_NOCOOKIES:                                                         return "CO_E_NOCOOKIES";
	case CO_E_DBERROR:                                                           return "CO_E_DBERROR";
	case CO_E_NOTPOOLED:                                                         return "CO_E_NOTPOOLED";
	case CO_E_NOTCONSTRUCTED:                                                    return "CO_E_NOTCONSTRUCTED";
	case CO_E_NOSYNCHRONIZATION:                                                 return "CO_E_NOSYNCHRONIZATION";
	case CO_E_ISOLEVELMISMATCH:                                                  return "CO_E_ISOLEVELMISMATCH";
	case CO_E_CALL_OUT_OF_TX_SCOPE_NOT_ALLOWED:                                  return "CO_E_CALL_OUT_OF_TX_SCOPE_NOT_ALLOWED";
	case CO_E_EXIT_TRANSACTION_SCOPE_NOT_CALLED:                                 return "CO_E_EXIT_TRANSACTION_SCOPE_NOT_CALLED";
	case E_ACCESSDENIED:                                                         return "E_ACCESSDENIED";
	case E_OUTOFMEMORY:                                                          return "E_OUTOFMEMORY";
	case ERROR_NOT_SUPPORTED:                                                    return "ERROR_NOT_SUPPORTED";
	case E_INVALIDARG:                                                           return "E_INVALIDARG";
	case ERROR_DISK_FULL:                                                        return "ERROR_DISK_FULL";
	case CO_E_CLASS_CREATE_FAILED:                                               return "CO_E_CLASS_CREATE_FAILED";
	case CO_E_SCM_ERROR:                                                         return "CO_E_SCM_ERROR";
	case CO_E_SCM_RPC_FAILURE:                                                   return "CO_E_SCM_RPC_FAILURE";
	case CO_E_BAD_PATH:                                                          return "CO_E_BAD_PATH";
	case CO_E_SERVER_EXEC_FAILURE:                                               return "CO_E_SERVER_EXEC_FAILURE";
	case CO_E_OBJSRV_RPC_FAILURE:                                                return "CO_E_OBJSRV_RPC_FAILURE";
	case MK_E_NO_NORMALIZED:                                                     return "MK_E_NO_NORMALIZED";
	case CO_E_SERVER_STOPPING:                                                   return "CO_E_SERVER_STOPPING";
	case MEM_E_INVALID_ROOT:                                                     return "MEM_E_INVALID_ROOT";
	case MEM_E_INVALID_LINK:                                                     return "MEM_E_INVALID_LINK";
	case MEM_E_INVALID_SIZE:                                                     return "MEM_E_INVALID_SIZE";
	case CO_E_MISSING_DISPLAYNAME:                                               return "CO_E_MISSING_DISPLAYNAME";
	case CO_E_RUNAS_VALUE_MUST_BE_AAA:                                           return "CO_E_RUNAS_VALUE_MUST_BE_AAA";
	case CO_E_ELEVATION_DISABLED:                                                return "CO_E_ELEVATION_DISABLED";
	case NTE_BAD_UID:                                                            return "NTE_BAD_UID";
	case NTE_BAD_HASH:                                                           return "NTE_BAD_HASH";
	case NTE_BAD_KEY:                                                            return "NTE_BAD_KEY";
	case NTE_BAD_LEN:                                                            return "NTE_BAD_LEN";
	case NTE_BAD_DATA:                                                           return "NTE_BAD_DATA";
	case NTE_BAD_SIGNATURE:                                                      return "NTE_BAD_SIGNATURE";
	case NTE_BAD_VER:                                                            return "NTE_BAD_VER";
	case NTE_BAD_ALGID:                                                          return "NTE_BAD_ALGID";
	case NTE_BAD_FLAGS:                                                          return "NTE_BAD_FLAGS";
	case NTE_BAD_TYPE:                                                           return "NTE_BAD_TYPE";
	case NTE_BAD_KEY_STATE:                                                      return "NTE_BAD_KEY_STATE";
	case NTE_BAD_HASH_STATE:                                                     return "NTE_BAD_HASH_STATE";
	case NTE_NO_KEY:                                                             return "NTE_NO_KEY";
	case NTE_NO_MEMORY:                                                          return "NTE_NO_MEMORY";
	case NTE_EXISTS:                                                             return "NTE_EXISTS";
	case NTE_PERM:                                                               return "NTE_PERM";
	case NTE_NOT_FOUND:                                                          return "NTE_NOT_FOUND";
	case NTE_DOUBLE_ENCRYPT:                                                     return "NTE_DOUBLE_ENCRYPT";
	case NTE_BAD_PROVIDER:                                                       return "NTE_BAD_PROVIDER";
	case NTE_BAD_PROV_TYPE:                                                      return "NTE_BAD_PROV_TYPE";
	case NTE_BAD_PUBLIC_KEY:                                                     return "NTE_BAD_PUBLIC_KEY";
	case NTE_BAD_KEYSET:                                                         return "NTE_BAD_KEYSET";
	case NTE_PROV_TYPE_NOT_DEF:                                                  return "NTE_PROV_TYPE_NOT_DEF";
	case NTE_PROV_TYPE_ENTRY_BAD:                                                return "NTE_PROV_TYPE_ENTRY_BAD";
	case NTE_KEYSET_NOT_DEF:                                                     return "NTE_KEYSET_NOT_DEF";
	case NTE_KEYSET_ENTRY_BAD:                                                   return "NTE_KEYSET_ENTRY_BAD";
	case NTE_PROV_TYPE_NO_MATCH:                                                 return "NTE_PROV_TYPE_NO_MATCH";
	case NTE_SIGNATURE_FILE_BAD:                                                 return "NTE_SIGNATURE_FILE_BAD";
	case NTE_PROVIDER_DLL_FAIL:                                                  return "NTE_PROVIDER_DLL_FAIL";
	case NTE_PROV_DLL_NOT_FOUND:                                                 return "NTE_PROV_DLL_NOT_FOUND";
	case NTE_BAD_KEYSET_PARAM:                                                   return "NTE_BAD_KEYSET_PARAM";
	case NTE_FAIL:                                                               return "NTE_FAIL";
	case NTE_SYS_ERR:                                                            return "NTE_SYS_ERR";
	case NTE_SILENT_CONTEXT:                                                     return "NTE_SILENT_CONTEXT";
	case NTE_TOKEN_KEYSET_STORAGE_FULL:                                          return "NTE_TOKEN_KEYSET_STORAGE_FULL";
	case NTE_TEMPORARY_PROFILE:                                                  return "NTE_TEMPORARY_PROFILE";
	case NTE_FIXEDPARAMETER:                                                     return "NTE_FIXEDPARAMETER";
	case NTE_INVALID_HANDLE:                                                     return "NTE_INVALID_HANDLE";
	case NTE_INVALID_PARAMETER:                                                  return "NTE_INVALID_PARAMETER";
	case NTE_BUFFER_TOO_SMALL:                                                   return "NTE_BUFFER_TOO_SMALL";
	case NTE_NOT_SUPPORTED:                                                      return "NTE_NOT_SUPPORTED";
	case NTE_NO_MORE_ITEMS:                                                      return "NTE_NO_MORE_ITEMS";
	case NTE_BUFFERS_OVERLAP:                                                    return "NTE_BUFFERS_OVERLAP";
	case NTE_DECRYPTION_FAILURE:                                                 return "NTE_DECRYPTION_FAILURE";
	case NTE_INTERNAL_ERROR:                                                     return "NTE_INTERNAL_ERROR";
	case NTE_UI_REQUIRED:                                                        return "NTE_UI_REQUIRED";
	case NTE_HMAC_NOT_SUPPORTED:                                                 return "NTE_HMAC_NOT_SUPPORTED";
	case SEC_E_INSUFFICIENT_MEMORY:                                              return "SEC_E_INSUFFICIENT_MEMORY";
	case SEC_E_INVALID_HANDLE:                                                   return "SEC_E_INVALID_HANDLE";
	case SEC_E_UNSUPPORTED_FUNCTION:                                             return "SEC_E_UNSUPPORTED_FUNCTION";
	case SEC_E_TARGET_UNKNOWN:                                                   return "SEC_E_TARGET_UNKNOWN";
	case SEC_E_INTERNAL_ERROR:                                                   return "SEC_E_INTERNAL_ERROR";
	case SEC_E_SECPKG_NOT_FOUND:                                                 return "SEC_E_SECPKG_NOT_FOUND";
	case SEC_E_NOT_OWNER:                                                        return "SEC_E_NOT_OWNER";
	case SEC_E_CANNOT_INSTALL:                                                   return "SEC_E_CANNOT_INSTALL";
	case SEC_E_INVALID_TOKEN:                                                    return "SEC_E_INVALID_TOKEN";
	case SEC_E_CANNOT_PACK:                                                      return "SEC_E_CANNOT_PACK";
	case SEC_E_QOP_NOT_SUPPORTED:                                                return "SEC_E_QOP_NOT_SUPPORTED";
	case SEC_E_NO_IMPERSONATION:                                                 return "SEC_E_NO_IMPERSONATION";
	case SEC_E_LOGON_DENIED:                                                     return "SEC_E_LOGON_DENIED";
	case SEC_E_UNKNOWN_CREDENTIALS:                                              return "SEC_E_UNKNOWN_CREDENTIALS";
	case SEC_E_NO_CREDENTIALS:                                                   return "SEC_E_NO_CREDENTIALS";
	case SEC_E_MESSAGE_ALTERED:                                                  return "SEC_E_MESSAGE_ALTERED";
	case SEC_E_OUT_OF_SEQUENCE:                                                  return "SEC_E_OUT_OF_SEQUENCE";
	case SEC_E_NO_AUTHENTICATING_AUTHORITY:                                      return "SEC_E_NO_AUTHENTICATING_AUTHORITY";
	case SEC_E_BAD_PKGID:                                                        return "SEC_E_BAD_PKGID";
	case SEC_E_CONTEXT_EXPIRED:                                                  return "SEC_E_CONTEXT_EXPIRED";
	case SEC_E_INCOMPLETE_MESSAGE:                                               return "SEC_E_INCOMPLETE_MESSAGE";
	case SEC_E_INCOMPLETE_CREDENTIALS:                                           return "SEC_E_INCOMPLETE_CREDENTIALS";
	case SEC_E_BUFFER_TOO_SMALL:                                                 return "SEC_E_BUFFER_TOO_SMALL";
	case SEC_E_WRONG_PRINCIPAL:                                                  return "SEC_E_WRONG_PRINCIPAL";
	case SEC_E_TIME_SKEW:                                                        return "SEC_E_TIME_SKEW";
	case SEC_E_UNTRUSTED_ROOT:                                                   return "SEC_E_UNTRUSTED_ROOT";
	case SEC_E_ILLEGAL_MESSAGE:                                                  return "SEC_E_ILLEGAL_MESSAGE";
	case SEC_E_CERT_UNKNOWN:                                                     return "SEC_E_CERT_UNKNOWN";
	case SEC_E_CERT_EXPIRED:                                                     return "SEC_E_CERT_EXPIRED";
	case SEC_E_ENCRYPT_FAILURE:                                                  return "SEC_E_ENCRYPT_FAILURE";
	case SEC_E_DECRYPT_FAILURE:                                                  return "SEC_E_DECRYPT_FAILURE";
	case SEC_E_ALGORITHM_MISMATCH:                                               return "SEC_E_ALGORITHM_MISMATCH";
	case SEC_E_SECURITY_QOS_FAILED:                                              return "SEC_E_SECURITY_QOS_FAILED";
	case SEC_E_UNFINISHED_CONTEXT_DELETED:                                       return "SEC_E_UNFINISHED_CONTEXT_DELETED";
	case SEC_E_NO_TGT_REPLY:                                                     return "SEC_E_NO_TGT_REPLY";
	case SEC_E_NO_IP_ADDRESSES:                                                  return "SEC_E_NO_IP_ADDRESSES";
	case SEC_E_WRONG_CREDENTIAL_HANDLE:                                          return "SEC_E_WRONG_CREDENTIAL_HANDLE";
	case SEC_E_CRYPTO_SYSTEM_INVALID:                                            return "SEC_E_CRYPTO_SYSTEM_INVALID";
	case SEC_E_MAX_REFERRALS_EXCEEDED:                                           return "SEC_E_MAX_REFERRALS_EXCEEDED";
	case SEC_E_MUST_BE_KDC:                                                      return "SEC_E_MUST_BE_KDC";
	case SEC_E_STRONG_CRYPTO_NOT_SUPPORTED:                                      return "SEC_E_STRONG_CRYPTO_NOT_SUPPORTED";
	case SEC_E_TOO_MANY_PRINCIPALS:                                              return "SEC_E_TOO_MANY_PRINCIPALS";
	case SEC_E_NO_PA_DATA:                                                       return "SEC_E_NO_PA_DATA";
	case SEC_E_PKINIT_NAME_MISMATCH:                                             return "SEC_E_PKINIT_NAME_MISMATCH";
	case SEC_E_SMARTCARD_LOGON_REQUIRED:                                         return "SEC_E_SMARTCARD_LOGON_REQUIRED";
	case SEC_E_SHUTDOWN_IN_PROGRESS:                                             return "SEC_E_SHUTDOWN_IN_PROGRESS";
	case SEC_E_KDC_INVALID_REQUEST:                                              return "SEC_E_KDC_INVALID_REQUEST";
	case SEC_E_KDC_UNABLE_TO_REFER:                                              return "SEC_E_KDC_UNABLE_TO_REFER";
	case SEC_E_KDC_UNKNOWN_ETYPE:                                                return "SEC_E_KDC_UNKNOWN_ETYPE";
	case SEC_E_UNSUPPORTED_PREAUTH:                                              return "SEC_E_UNSUPPORTED_PREAUTH";
	case SEC_E_DELEGATION_REQUIRED:                                              return "SEC_E_DELEGATION_REQUIRED";
	case SEC_E_BAD_BINDINGS:                                                     return "SEC_E_BAD_BINDINGS";
	case SEC_E_MULTIPLE_ACCOUNTS:                                                return "SEC_E_MULTIPLE_ACCOUNTS";
	case SEC_E_NO_KERB_KEY:                                                      return "SEC_E_NO_KERB_KEY";
	case SEC_E_CERT_WRONG_USAGE:                                                 return "SEC_E_CERT_WRONG_USAGE";
	case SEC_E_DOWNGRADE_DETECTED:                                               return "SEC_E_DOWNGRADE_DETECTED";
	case SEC_E_SMARTCARD_CERT_REVOKED:                                           return "SEC_E_SMARTCARD_CERT_REVOKED";
	case SEC_E_ISSUING_CA_UNTRUSTED:                                             return "SEC_E_ISSUING_CA_UNTRUSTED";
	case SEC_E_REVOCATION_OFFLINE_C:                                             return "SEC_E_REVOCATION_OFFLINE_C";
	case SEC_E_PKINIT_CLIENT_FAILURE:                                            return "SEC_E_PKINIT_CLIENT_FAILURE";
	case SEC_E_SMARTCARD_CERT_EXPIRED:                                           return "SEC_E_SMARTCARD_CERT_EXPIRED";
	case SEC_E_NO_S4U_PROT_SUPPORT:                                              return "SEC_E_NO_S4U_PROT_SUPPORT";
	case SEC_E_CROSSREALM_DELEGATION_FAILURE:                                    return "SEC_E_CROSSREALM_DELEGATION_FAILURE";
	case SEC_E_REVOCATION_OFFLINE_KDC:                                           return "SEC_E_REVOCATION_OFFLINE_KDC";
	case SEC_E_ISSUING_CA_UNTRUSTED_KDC:                                         return "SEC_E_ISSUING_CA_UNTRUSTED_KDC";
	case SEC_E_KDC_CERT_EXPIRED:                                                 return "SEC_E_KDC_CERT_EXPIRED";
	case SEC_E_KDC_CERT_REVOKED:                                                 return "SEC_E_KDC_CERT_REVOKED";
	case SEC_E_INVALID_PARAMETER:                                                return "SEC_E_INVALID_PARAMETER";
	case SEC_E_DELEGATION_POLICY:                                                return "SEC_E_DELEGATION_POLICY";
	case SEC_E_POLICY_NLTM_ONLY:                                                 return "SEC_E_POLICY_NLTM_ONLY";
	case CRYPT_E_MSG_ERROR:                                                      return "CRYPT_E_MSG_ERROR";
	case CRYPT_E_UNKNOWN_ALGO:                                                   return "CRYPT_E_UNKNOWN_ALGO";
	case CRYPT_E_OID_FORMAT:                                                     return "CRYPT_E_OID_FORMAT";
	case CRYPT_E_INVALID_MSG_TYPE:                                               return "CRYPT_E_INVALID_MSG_TYPE";
	case CRYPT_E_UNEXPECTED_ENCODING:                                            return "CRYPT_E_UNEXPECTED_ENCODING";
	case CRYPT_E_AUTH_ATTR_MISSING:                                              return "CRYPT_E_AUTH_ATTR_MISSING";
	case CRYPT_E_HASH_VALUE:                                                     return "CRYPT_E_HASH_VALUE";
	case CRYPT_E_INVALID_INDEX:                                                  return "CRYPT_E_INVALID_INDEX";
	case CRYPT_E_ALREADY_DECRYPTED:                                              return "CRYPT_E_ALREADY_DECRYPTED";
	case CRYPT_E_NOT_DECRYPTED:                                                  return "CRYPT_E_NOT_DECRYPTED";
	case CRYPT_E_RECIPIENT_NOT_FOUND:                                            return "CRYPT_E_RECIPIENT_NOT_FOUND";
	case CRYPT_E_CONTROL_TYPE:                                                   return "CRYPT_E_CONTROL_TYPE";
	case CRYPT_E_ISSUER_SERIALNUMBER:                                            return "CRYPT_E_ISSUER_SERIALNUMBER";
	case CRYPT_E_SIGNER_NOT_FOUND:                                               return "CRYPT_E_SIGNER_NOT_FOUND";
	case CRYPT_E_ATTRIBUTES_MISSING:                                             return "CRYPT_E_ATTRIBUTES_MISSING";
	case CRYPT_E_STREAM_MSG_NOT_READY:                                           return "CRYPT_E_STREAM_MSG_NOT_READY";
	case CRYPT_E_STREAM_INSUFFICIENT_DATA:                                       return "CRYPT_E_STREAM_INSUFFICIENT_DATA";
	case CRYPT_E_BAD_LEN:                                                        return "CRYPT_E_BAD_LEN";
	case CRYPT_E_BAD_ENCODE:                                                     return "CRYPT_E_BAD_ENCODE";
	case CRYPT_E_FILE_ERROR:                                                     return "CRYPT_E_FILE_ERROR";
	case CRYPT_E_NOT_FOUND:                                                      return "CRYPT_E_NOT_FOUND";
	case CRYPT_E_EXISTS:                                                         return "CRYPT_E_EXISTS";
	case CRYPT_E_NO_PROVIDER:                                                    return "CRYPT_E_NO_PROVIDER";
	case CRYPT_E_SELF_SIGNED:                                                    return "CRYPT_E_SELF_SIGNED";
	case CRYPT_E_DELETED_PREV:                                                   return "CRYPT_E_DELETED_PREV";
	case CRYPT_E_NO_MATCH:                                                       return "CRYPT_E_NO_MATCH";
	case CRYPT_E_UNEXPECTED_MSG_TYPE:                                            return "CRYPT_E_UNEXPECTED_MSG_TYPE";
	case CRYPT_E_NO_KEY_PROPERTY:                                                return "CRYPT_E_NO_KEY_PROPERTY";
	case CRYPT_E_NO_DECRYPT_CERT:                                                return "CRYPT_E_NO_DECRYPT_CERT";
	case CRYPT_E_BAD_MSG:                                                        return "CRYPT_E_BAD_MSG";
	case CRYPT_E_NO_SIGNER:                                                      return "CRYPT_E_NO_SIGNER";
	case CRYPT_E_PENDING_CLOSE:                                                  return "CRYPT_E_PENDING_CLOSE";
	case CRYPT_E_REVOKED:                                                        return "CRYPT_E_REVOKED";
	case CRYPT_E_NO_REVOCATION_DLL:                                              return "CRYPT_E_NO_REVOCATION_DLL";
	case CRYPT_E_NO_REVOCATION_CHECK:                                            return "CRYPT_E_NO_REVOCATION_CHECK";
	case CRYPT_E_REVOCATION_OFFLINE:                                             return "CRYPT_E_REVOCATION_OFFLINE";
	case CRYPT_E_NOT_IN_REVOCATION_DATABASE:                                     return "CRYPT_E_NOT_IN_REVOCATION_DATABASE";
	case CRYPT_E_INVALID_NUMERIC_STRING:                                         return "CRYPT_E_INVALID_NUMERIC_STRING";
	case CRYPT_E_INVALID_PRINTABLE_STRING:                                       return "CRYPT_E_INVALID_PRINTABLE_STRING";
	case CRYPT_E_INVALID_IA5_STRING:                                             return "CRYPT_E_INVALID_IA5_STRING";
	case CRYPT_E_INVALID_X500_STRING:                                            return "CRYPT_E_INVALID_X500_STRING";
	case CRYPT_E_NOT_CHAR_STRING:                                                return "CRYPT_E_NOT_CHAR_STRING";
	case CRYPT_E_FILERESIZED:                                                    return "CRYPT_E_FILERESIZED";
	case CRYPT_E_SECURITY_SETTINGS:                                              return "CRYPT_E_SECURITY_SETTINGS";
	case CRYPT_E_NO_VERIFY_USAGE_DLL:                                            return "CRYPT_E_NO_VERIFY_USAGE_DLL";
	case CRYPT_E_NO_VERIFY_USAGE_CHECK:                                          return "CRYPT_E_NO_VERIFY_USAGE_CHECK";
	case CRYPT_E_VERIFY_USAGE_OFFLINE:                                           return "CRYPT_E_VERIFY_USAGE_OFFLINE";
	case CRYPT_E_NOT_IN_CTL:                                                     return "CRYPT_E_NOT_IN_CTL";
	case CRYPT_E_NO_TRUSTED_SIGNER:                                              return "CRYPT_E_NO_TRUSTED_SIGNER";
	case CRYPT_E_MISSING_PUBKEY_PARA:                                            return "CRYPT_E_MISSING_PUBKEY_PARA";
	case CRYPT_E_OSS_ERROR:                                                      return "CRYPT_E_OSS_ERROR";
	case OSS_MORE_BUF:                                                           return "OSS_MORE_BUF";
	case OSS_NEGATIVE_UINTEGER:                                                  return "OSS_NEGATIVE_UINTEGER";
	case OSS_PDU_RANGE:                                                          return "OSS_PDU_RANGE";
	case OSS_MORE_INPUT:                                                         return "OSS_MORE_INPUT";
	case OSS_DATA_ERROR:                                                         return "OSS_DATA_ERROR";
	case OSS_BAD_ARG:                                                            return "OSS_BAD_ARG";
	case OSS_BAD_VERSION:                                                        return "OSS_BAD_VERSION";
	case OSS_OUT_MEMORY:                                                         return "OSS_OUT_MEMORY";
	case OSS_PDU_MISMATCH:                                                       return "OSS_PDU_MISMATCH";
	case OSS_LIMITED:                                                            return "OSS_LIMITED";
	case OSS_BAD_PTR:                                                            return "OSS_BAD_PTR";
	case OSS_BAD_TIME:                                                           return "OSS_BAD_TIME";
	case OSS_INDEFINITE_NOT_SUPPORTED:                                           return "OSS_INDEFINITE_NOT_SUPPORTED";
	case OSS_MEM_ERROR:                                                          return "OSS_MEM_ERROR";
	case OSS_BAD_TABLE:                                                          return "OSS_BAD_TABLE";
	case OSS_TOO_LONG:                                                           return "OSS_TOO_LONG";
	case OSS_CONSTRAINT_VIOLATED:                                                return "OSS_CONSTRAINT_VIOLATED";
	case OSS_FATAL_ERROR:                                                        return "OSS_FATAL_ERROR";
	case OSS_ACCESS_SERIALIZATION_ERROR:                                         return "OSS_ACCESS_SERIALIZATION_ERROR";
	case OSS_NULL_TBL:                                                           return "OSS_NULL_TBL";
	case OSS_NULL_FCN:                                                           return "OSS_NULL_FCN";
	case OSS_BAD_ENCRULES:                                                       return "OSS_BAD_ENCRULES";
	case OSS_UNAVAIL_ENCRULES:                                                   return "OSS_UNAVAIL_ENCRULES";
	case OSS_CANT_OPEN_TRACE_WINDOW:                                             return "OSS_CANT_OPEN_TRACE_WINDOW";
	case OSS_UNIMPLEMENTED:                                                      return "OSS_UNIMPLEMENTED";
	case OSS_OID_DLL_NOT_LINKED:                                                 return "OSS_OID_DLL_NOT_LINKED";
	case OSS_CANT_OPEN_TRACE_FILE:                                               return "OSS_CANT_OPEN_TRACE_FILE";
	case OSS_TRACE_FILE_ALREADY_OPEN:                                            return "OSS_TRACE_FILE_ALREADY_OPEN";
	case OSS_TABLE_MISMATCH:                                                     return "OSS_TABLE_MISMATCH";
	case OSS_TYPE_NOT_SUPPORTED:                                                 return "OSS_TYPE_NOT_SUPPORTED";
	case OSS_REAL_DLL_NOT_LINKED:                                                return "OSS_REAL_DLL_NOT_LINKED";
	case OSS_REAL_CODE_NOT_LINKED:                                               return "OSS_REAL_CODE_NOT_LINKED";
	case OSS_OUT_OF_RANGE:                                                       return "OSS_OUT_OF_RANGE";
	case OSS_COPIER_DLL_NOT_LINKED:                                              return "OSS_COPIER_DLL_NOT_LINKED";
	case OSS_CONSTRAINT_DLL_NOT_LINKED:                                          return "OSS_CONSTRAINT_DLL_NOT_LINKED";
	case OSS_COMPARATOR_DLL_NOT_LINKED:                                          return "OSS_COMPARATOR_DLL_NOT_LINKED";
	case OSS_COMPARATOR_CODE_NOT_LINKED:                                         return "OSS_COMPARATOR_CODE_NOT_LINKED";
	case OSS_MEM_MGR_DLL_NOT_LINKED:                                             return "OSS_MEM_MGR_DLL_NOT_LINKED";
	case OSS_PDV_DLL_NOT_LINKED:                                                 return "OSS_PDV_DLL_NOT_LINKED";
	case OSS_PDV_CODE_NOT_LINKED:                                                return "OSS_PDV_CODE_NOT_LINKED";
	case OSS_API_DLL_NOT_LINKED:                                                 return "OSS_API_DLL_NOT_LINKED";
	case OSS_BERDER_DLL_NOT_LINKED:                                              return "OSS_BERDER_DLL_NOT_LINKED";
	case OSS_PER_DLL_NOT_LINKED:                                                 return "OSS_PER_DLL_NOT_LINKED";
	case OSS_OPEN_TYPE_ERROR:                                                    return "OSS_OPEN_TYPE_ERROR";
	case OSS_MUTEX_NOT_CREATED:                                                  return "OSS_MUTEX_NOT_CREATED";
	case OSS_CANT_CLOSE_TRACE_FILE:                                              return "OSS_CANT_CLOSE_TRACE_FILE";
	case CRYPT_E_ASN1_ERROR:                                                     return "CRYPT_E_ASN1_ERROR";
	case CRYPT_E_ASN1_INTERNAL:                                                  return "CRYPT_E_ASN1_INTERNAL";
	case CRYPT_E_ASN1_EOD:                                                       return "CRYPT_E_ASN1_EOD";
	case CRYPT_E_ASN1_CORRUPT:                                                   return "CRYPT_E_ASN1_CORRUPT";
	case CRYPT_E_ASN1_LARGE:                                                     return "CRYPT_E_ASN1_LARGE";
	case CRYPT_E_ASN1_CONSTRAINT:                                                return "CRYPT_E_ASN1_CONSTRAINT";
	case CRYPT_E_ASN1_MEMORY:                                                    return "CRYPT_E_ASN1_MEMORY";
	case CRYPT_E_ASN1_OVERFLOW:                                                  return "CRYPT_E_ASN1_OVERFLOW";
	case CRYPT_E_ASN1_BADPDU:                                                    return "CRYPT_E_ASN1_BADPDU";
	case CRYPT_E_ASN1_BADARGS:                                                   return "CRYPT_E_ASN1_BADARGS";
	case CRYPT_E_ASN1_BADREAL:                                                   return "CRYPT_E_ASN1_BADREAL";
	case CRYPT_E_ASN1_BADTAG:                                                    return "CRYPT_E_ASN1_BADTAG";
	case CRYPT_E_ASN1_CHOICE:                                                    return "CRYPT_E_ASN1_CHOICE";
	case CRYPT_E_ASN1_RULE:                                                      return "CRYPT_E_ASN1_RULE";
	case CRYPT_E_ASN1_UTF8:                                                      return "CRYPT_E_ASN1_UTF8";
	case CRYPT_E_ASN1_PDU_TYPE:                                                  return "CRYPT_E_ASN1_PDU_TYPE";
	case CRYPT_E_ASN1_NYI:                                                       return "CRYPT_E_ASN1_NYI";
	case CRYPT_E_ASN1_EXTENDED:                                                  return "CRYPT_E_ASN1_EXTENDED";
	case CRYPT_E_ASN1_NOEOD:                                                     return "CRYPT_E_ASN1_NOEOD";
	case CERTSRV_E_BAD_REQUESTSUBJECT:                                           return "CERTSRV_E_BAD_REQUESTSUBJECT";
	case CERTSRV_E_NO_REQUEST:                                                   return "CERTSRV_E_NO_REQUEST";
	case CERTSRV_E_BAD_REQUESTSTATUS:                                            return "CERTSRV_E_BAD_REQUESTSTATUS";
	case CERTSRV_E_PROPERTY_EMPTY:                                               return "CERTSRV_E_PROPERTY_EMPTY";
	case CERTSRV_E_INVALID_CA_CERTIFICATE:                                       return "CERTSRV_E_INVALID_CA_CERTIFICATE";
	case CERTSRV_E_SERVER_SUSPENDED:                                             return "CERTSRV_E_SERVER_SUSPENDED";
	case CERTSRV_E_ENCODING_LENGTH:                                              return "CERTSRV_E_ENCODING_LENGTH";
	case CERTSRV_E_ROLECONFLICT:                                                 return "CERTSRV_E_ROLECONFLICT";
	case CERTSRV_E_RESTRICTEDOFFICER:                                            return "CERTSRV_E_RESTRICTEDOFFICER";
	case CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED:                                  return "CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED";
	case CERTSRV_E_NO_VALID_KRA:                                                 return "CERTSRV_E_NO_VALID_KRA";
	case CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL:                                     return "CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL";
	case CERTSRV_E_NO_CAADMIN_DEFINED:                                           return "CERTSRV_E_NO_CAADMIN_DEFINED";
	case CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE:                                   return "CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE";
	case CERTSRV_E_NO_DB_SESSIONS:                                               return "CERTSRV_E_NO_DB_SESSIONS";
	case CERTSRV_E_ALIGNMENT_FAULT:                                              return "CERTSRV_E_ALIGNMENT_FAULT";
	case CERTSRV_E_ENROLL_DENIED:                                                return "CERTSRV_E_ENROLL_DENIED";
	case CERTSRV_E_TEMPLATE_DENIED:                                              return "CERTSRV_E_TEMPLATE_DENIED";
	case CERTSRV_E_DOWNLEVEL_DC_SSL_OR_UPGRADE:                                  return "CERTSRV_E_DOWNLEVEL_DC_SSL_OR_UPGRADE";
	case CERTSRV_E_UNSUPPORTED_CERT_TYPE:                                        return "CERTSRV_E_UNSUPPORTED_CERT_TYPE";
	case CERTSRV_E_NO_CERT_TYPE:                                                 return "CERTSRV_E_NO_CERT_TYPE";
	case CERTSRV_E_TEMPLATE_CONFLICT:                                            return "CERTSRV_E_TEMPLATE_CONFLICT";
	case CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED:                                    return "CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED";
	case CERTSRV_E_ARCHIVED_KEY_REQUIRED:                                        return "CERTSRV_E_ARCHIVED_KEY_REQUIRED";
	case CERTSRV_E_SMIME_REQUIRED:                                               return "CERTSRV_E_SMIME_REQUIRED";
	case CERTSRV_E_BAD_RENEWAL_SUBJECT:                                          return "CERTSRV_E_BAD_RENEWAL_SUBJECT";
	case CERTSRV_E_BAD_TEMPLATE_VERSION:                                         return "CERTSRV_E_BAD_TEMPLATE_VERSION";
	case CERTSRV_E_TEMPLATE_POLICY_REQUIRED:                                     return "CERTSRV_E_TEMPLATE_POLICY_REQUIRED";
	case CERTSRV_E_SIGNATURE_POLICY_REQUIRED:                                    return "CERTSRV_E_SIGNATURE_POLICY_REQUIRED";
	case CERTSRV_E_SIGNATURE_COUNT:                                              return "CERTSRV_E_SIGNATURE_COUNT";
	case CERTSRV_E_SIGNATURE_REJECTED:                                           return "CERTSRV_E_SIGNATURE_REJECTED";
	case CERTSRV_E_ISSUANCE_POLICY_REQUIRED:                                     return "CERTSRV_E_ISSUANCE_POLICY_REQUIRED";
	case CERTSRV_E_SUBJECT_UPN_REQUIRED:                                         return "CERTSRV_E_SUBJECT_UPN_REQUIRED";
	case CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED:                              return "CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED";
	case CERTSRV_E_SUBJECT_DNS_REQUIRED:                                         return "CERTSRV_E_SUBJECT_DNS_REQUIRED";
	case CERTSRV_E_ARCHIVED_KEY_UNEXPECTED:                                      return "CERTSRV_E_ARCHIVED_KEY_UNEXPECTED";
	case CERTSRV_E_KEY_LENGTH:                                                   return "CERTSRV_E_KEY_LENGTH";
	case CERTSRV_E_SUBJECT_EMAIL_REQUIRED:                                       return "CERTSRV_E_SUBJECT_EMAIL_REQUIRED";
	case CERTSRV_E_UNKNOWN_CERT_TYPE:                                            return "CERTSRV_E_UNKNOWN_CERT_TYPE";
	case CERTSRV_E_CERT_TYPE_OVERLAP:                                            return "CERTSRV_E_CERT_TYPE_OVERLAP";
	case CERTSRV_E_TOO_MANY_SIGNATURES:                                          return "CERTSRV_E_TOO_MANY_SIGNATURES";
	case CERTSRV_E_RENEWAL_BAD_PUBLIC_KEY:                                       return "CERTSRV_E_RENEWAL_BAD_PUBLIC_KEY";
	case CERTSRV_E_INVALID_EK:                                                   return "CERTSRV_E_INVALID_EK";
	case CERTSRV_E_KEY_ATTESTATION:                                              return "CERTSRV_E_KEY_ATTESTATION";
	case XENROLL_E_KEY_NOT_EXPORTABLE:                                           return "XENROLL_E_KEY_NOT_EXPORTABLE";
	case XENROLL_E_CANNOT_ADD_ROOT_CERT:                                         return "XENROLL_E_CANNOT_ADD_ROOT_CERT";
	case XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND:                                   return "XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND";
	case XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH:                                  return "XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH";
	case XENROLL_E_RESPONSE_KA_HASH_MISMATCH:                                    return "XENROLL_E_RESPONSE_KA_HASH_MISMATCH";
	case XENROLL_E_KEYSPEC_SMIME_MISMATCH:                                       return "XENROLL_E_KEYSPEC_SMIME_MISMATCH";
	case TRUST_E_SYSTEM_ERROR:                                                   return "TRUST_E_SYSTEM_ERROR";
	case TRUST_E_NO_SIGNER_CERT:                                                 return "TRUST_E_NO_SIGNER_CERT";
	case TRUST_E_COUNTER_SIGNER:                                                 return "TRUST_E_COUNTER_SIGNER";
	case TRUST_E_CERT_SIGNATURE:                                                 return "TRUST_E_CERT_SIGNATURE";
	case TRUST_E_TIME_STAMP:                                                     return "TRUST_E_TIME_STAMP";
	case TRUST_E_BAD_DIGEST:                                                     return "TRUST_E_BAD_DIGEST";
	case TRUST_E_BASIC_CONSTRAINTS:                                              return "TRUST_E_BASIC_CONSTRAINTS";
	case TRUST_E_FINANCIAL_CRITERIA:                                             return "TRUST_E_FINANCIAL_CRITERIA";
	case MSSIPOTF_E_OUTOFMEMRANGE:                                               return "MSSIPOTF_E_OUTOFMEMRANGE";
	case MSSIPOTF_E_CANTGETOBJECT:                                               return "MSSIPOTF_E_CANTGETOBJECT";
	case MSSIPOTF_E_NOHEADTABLE:                                                 return "MSSIPOTF_E_NOHEADTABLE";
	case MSSIPOTF_E_BAD_MAGICNUMBER:                                             return "MSSIPOTF_E_BAD_MAGICNUMBER";
	case MSSIPOTF_E_BAD_OFFSET_TABLE:                                            return "MSSIPOTF_E_BAD_OFFSET_TABLE";
	case MSSIPOTF_E_TABLE_TAGORDER:                                              return "MSSIPOTF_E_TABLE_TAGORDER";
	case MSSIPOTF_E_TABLE_LONGWORD:                                              return "MSSIPOTF_E_TABLE_LONGWORD";
	case MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT:                                   return "MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT";
	case MSSIPOTF_E_TABLES_OVERLAP:                                              return "MSSIPOTF_E_TABLES_OVERLAP";
	case MSSIPOTF_E_TABLE_PADBYTES:                                              return "MSSIPOTF_E_TABLE_PADBYTES";
	case MSSIPOTF_E_FILETOOSMALL:                                                return "MSSIPOTF_E_FILETOOSMALL";
	case MSSIPOTF_E_TABLE_CHECKSUM:                                              return "MSSIPOTF_E_TABLE_CHECKSUM";
	case MSSIPOTF_E_FILE_CHECKSUM:                                               return "MSSIPOTF_E_FILE_CHECKSUM";
	case MSSIPOTF_E_FAILED_POLICY:                                               return "MSSIPOTF_E_FAILED_POLICY";
	case MSSIPOTF_E_FAILED_HINTS_CHECK:                                          return "MSSIPOTF_E_FAILED_HINTS_CHECK";
	case MSSIPOTF_E_NOT_OPENTYPE:                                                return "MSSIPOTF_E_NOT_OPENTYPE";
	case MSSIPOTF_E_FILE:                                                        return "MSSIPOTF_E_FILE";
	case MSSIPOTF_E_CRYPT:                                                       return "MSSIPOTF_E_CRYPT";
	case MSSIPOTF_E_BADVERSION:                                                  return "MSSIPOTF_E_BADVERSION";
	case MSSIPOTF_E_DSIG_STRUCTURE:                                              return "MSSIPOTF_E_DSIG_STRUCTURE";
	case MSSIPOTF_E_PCONST_CHECK:                                                return "MSSIPOTF_E_PCONST_CHECK";
	case MSSIPOTF_E_STRUCTURE:                                                   return "MSSIPOTF_E_STRUCTURE";
	case ERROR_CRED_REQUIRES_CONFIRMATION:                                       return "ERROR_CRED_REQUIRES_CONFIRMATION";
	case TRUST_E_PROVIDER_UNKNOWN:                                               return "TRUST_E_PROVIDER_UNKNOWN";
	case TRUST_E_ACTION_UNKNOWN:                                                 return "TRUST_E_ACTION_UNKNOWN";
	case TRUST_E_SUBJECT_FORM_UNKNOWN:                                           return "TRUST_E_SUBJECT_FORM_UNKNOWN";
	case TRUST_E_SUBJECT_NOT_TRUSTED:                                            return "TRUST_E_SUBJECT_NOT_TRUSTED";
	case DIGSIG_E_ENCODE:                                                        return "DIGSIG_E_ENCODE";
	case DIGSIG_E_DECODE:                                                        return "DIGSIG_E_DECODE";
	case DIGSIG_E_EXTENSIBILITY:                                                 return "DIGSIG_E_EXTENSIBILITY";
	case DIGSIG_E_CRYPTO:                                                        return "DIGSIG_E_CRYPTO";
	case PERSIST_E_SIZEDEFINITE:                                                 return "PERSIST_E_SIZEDEFINITE";
	case PERSIST_E_SIZEINDEFINITE:                                               return "PERSIST_E_SIZEINDEFINITE";
	case PERSIST_E_NOTSELFSIZING:                                                return "PERSIST_E_NOTSELFSIZING";
	case TRUST_E_NOSIGNATURE:                                                    return "TRUST_E_NOSIGNATURE";
	case CERT_E_EXPIRED:                                                         return "CERT_E_EXPIRED";
	case CERT_E_VALIDITYPERIODNESTING:                                           return "CERT_E_VALIDITYPERIODNESTING";
	case CERT_E_ROLE:                                                            return "CERT_E_ROLE";
	case CERT_E_PATHLENCONST:                                                    return "CERT_E_PATHLENCONST";
	case CERT_E_CRITICAL:                                                        return "CERT_E_CRITICAL";
	case CERT_E_PURPOSE:                                                         return "CERT_E_PURPOSE";
	case CERT_E_ISSUERCHAINING:                                                  return "CERT_E_ISSUERCHAINING";
	case CERT_E_MALFORMED:                                                       return "CERT_E_MALFORMED";
	case CERT_E_UNTRUSTEDROOT:                                                   return "CERT_E_UNTRUSTEDROOT";
	case CERT_E_CHAINING:                                                        return "CERT_E_CHAINING";
	case TRUST_E_FAIL:                                                           return "TRUST_E_FAIL";
	case CERT_E_REVOKED:                                                         return "CERT_E_REVOKED";
	case CERT_E_UNTRUSTEDTESTROOT:                                               return "CERT_E_UNTRUSTEDTESTROOT";
	case CERT_E_REVOCATION_FAILURE:                                              return "CERT_E_REVOCATION_FAILURE";
	case CERT_E_CN_NO_MATCH:                                                     return "CERT_E_CN_NO_MATCH";
	case CERT_E_WRONG_USAGE:                                                     return "CERT_E_WRONG_USAGE";
	case TRUST_E_EXPLICIT_DISTRUST:                                              return "TRUST_E_EXPLICIT_DISTRUST";
	case CERT_E_UNTRUSTEDCA:                                                     return "CERT_E_UNTRUSTEDCA";
	case CERT_E_INVALID_POLICY:                                                  return "CERT_E_INVALID_POLICY";
	case CERT_E_INVALID_NAME:                                                    return "CERT_E_INVALID_NAME";
	case SPAPI_E_EXPECTED_SECTION_NAME:                                          return "SPAPI_E_EXPECTED_SECTION_NAME";
	case SPAPI_E_BAD_SECTION_NAME_LINE:                                          return "SPAPI_E_BAD_SECTION_NAME_LINE";
	case SPAPI_E_SECTION_NAME_TOO_LONG:                                          return "SPAPI_E_SECTION_NAME_TOO_LONG";
	case SPAPI_E_GENERAL_SYNTAX:                                                 return "SPAPI_E_GENERAL_SYNTAX";
	case SPAPI_E_WRONG_INF_STYLE:                                                return "SPAPI_E_WRONG_INF_STYLE";
	case SPAPI_E_SECTION_NOT_FOUND:                                              return "SPAPI_E_SECTION_NOT_FOUND";
	case SPAPI_E_LINE_NOT_FOUND:                                                 return "SPAPI_E_LINE_NOT_FOUND";
	case SPAPI_E_NO_BACKUP:                                                      return "SPAPI_E_NO_BACKUP";
	case SPAPI_E_NO_ASSOCIATED_CLASS:                                            return "SPAPI_E_NO_ASSOCIATED_CLASS";
	case SPAPI_E_CLASS_MISMATCH:                                                 return "SPAPI_E_CLASS_MISMATCH";
	case SPAPI_E_DUPLICATE_FOUND:                                                return "SPAPI_E_DUPLICATE_FOUND";
	case SPAPI_E_NO_DRIVER_SELECTED:                                             return "SPAPI_E_NO_DRIVER_SELECTED";
	case SPAPI_E_KEY_DOES_NOT_EXIST:                                             return "SPAPI_E_KEY_DOES_NOT_EXIST";
	case SPAPI_E_INVALID_DEVINST_NAME:                                           return "SPAPI_E_INVALID_DEVINST_NAME";
	case SPAPI_E_INVALID_CLASS:                                                  return "SPAPI_E_INVALID_CLASS";
	case SPAPI_E_DEVINST_ALREADY_EXISTS:                                         return "SPAPI_E_DEVINST_ALREADY_EXISTS";
	case SPAPI_E_DEVINFO_NOT_REGISTERED:                                         return "SPAPI_E_DEVINFO_NOT_REGISTERED";
	case SPAPI_E_INVALID_REG_PROPERTY:                                           return "SPAPI_E_INVALID_REG_PROPERTY";
	case SPAPI_E_NO_INF:                                                         return "SPAPI_E_NO_INF";
	case SPAPI_E_NO_SUCH_DEVINST:                                                return "SPAPI_E_NO_SUCH_DEVINST";
	case SPAPI_E_CANT_LOAD_CLASS_ICON:                                           return "SPAPI_E_CANT_LOAD_CLASS_ICON";
	case SPAPI_E_INVALID_CLASS_INSTALLER:                                        return "SPAPI_E_INVALID_CLASS_INSTALLER";
	case SPAPI_E_DI_DO_DEFAULT:                                                  return "SPAPI_E_DI_DO_DEFAULT";
	case SPAPI_E_DI_NOFILECOPY:                                                  return "SPAPI_E_DI_NOFILECOPY";
	case SPAPI_E_INVALID_HWPROFILE:                                              return "SPAPI_E_INVALID_HWPROFILE";
	case SPAPI_E_NO_DEVICE_SELECTED:                                             return "SPAPI_E_NO_DEVICE_SELECTED";
	case SPAPI_E_DEVINFO_LIST_LOCKED:                                            return "SPAPI_E_DEVINFO_LIST_LOCKED";
	case SPAPI_E_DEVINFO_DATA_LOCKED:                                            return "SPAPI_E_DEVINFO_DATA_LOCKED";
	case SPAPI_E_DI_BAD_PATH:                                                    return "SPAPI_E_DI_BAD_PATH";
	case SPAPI_E_NO_CLASSINSTALL_PARAMS:                                         return "SPAPI_E_NO_CLASSINSTALL_PARAMS";
	case SPAPI_E_FILEQUEUE_LOCKED:                                               return "SPAPI_E_FILEQUEUE_LOCKED";
	case SPAPI_E_BAD_SERVICE_INSTALLSECT:                                        return "SPAPI_E_BAD_SERVICE_INSTALLSECT";
	case SPAPI_E_NO_CLASS_DRIVER_LIST:                                           return "SPAPI_E_NO_CLASS_DRIVER_LIST";
	case SPAPI_E_NO_ASSOCIATED_SERVICE:                                          return "SPAPI_E_NO_ASSOCIATED_SERVICE";
	case SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE:                                    return "SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE";
	case SPAPI_E_DEVICE_INTERFACE_ACTIVE:                                        return "SPAPI_E_DEVICE_INTERFACE_ACTIVE";
	case SPAPI_E_DEVICE_INTERFACE_REMOVED:                                       return "SPAPI_E_DEVICE_INTERFACE_REMOVED";
	case SPAPI_E_BAD_INTERFACE_INSTALLSECT:                                      return "SPAPI_E_BAD_INTERFACE_INSTALLSECT";
	case SPAPI_E_NO_SUCH_INTERFACE_CLASS:                                        return "SPAPI_E_NO_SUCH_INTERFACE_CLASS";
	case SPAPI_E_INVALID_REFERENCE_STRING:                                       return "SPAPI_E_INVALID_REFERENCE_STRING";
	case SPAPI_E_INVALID_MACHINENAME:                                            return "SPAPI_E_INVALID_MACHINENAME";
	case SPAPI_E_REMOTE_COMM_FAILURE:                                            return "SPAPI_E_REMOTE_COMM_FAILURE";
	case SPAPI_E_MACHINE_UNAVAILABLE:                                            return "SPAPI_E_MACHINE_UNAVAILABLE";
	case SPAPI_E_NO_CONFIGMGR_SERVICES:                                          return "SPAPI_E_NO_CONFIGMGR_SERVICES";
	case SPAPI_E_INVALID_PROPPAGE_PROVIDER:                                      return "SPAPI_E_INVALID_PROPPAGE_PROVIDER";
	case SPAPI_E_NO_SUCH_DEVICE_INTERFACE:                                       return "SPAPI_E_NO_SUCH_DEVICE_INTERFACE";
	case SPAPI_E_DI_POSTPROCESSING_REQUIRED:                                     return "SPAPI_E_DI_POSTPROCESSING_REQUIRED";
	case SPAPI_E_INVALID_COINSTALLER:                                            return "SPAPI_E_INVALID_COINSTALLER";
	case SPAPI_E_NO_COMPAT_DRIVERS:                                              return "SPAPI_E_NO_COMPAT_DRIVERS";
	case SPAPI_E_NO_DEVICE_ICON:                                                 return "SPAPI_E_NO_DEVICE_ICON";
	case SPAPI_E_INVALID_INF_LOGCONFIG:                                          return "SPAPI_E_INVALID_INF_LOGCONFIG";
	case SPAPI_E_DI_DONT_INSTALL:                                                return "SPAPI_E_DI_DONT_INSTALL";
	case SPAPI_E_INVALID_FILTER_DRIVER:                                          return "SPAPI_E_INVALID_FILTER_DRIVER";
	case SPAPI_E_NON_WINDOWS_NT_DRIVER:                                          return "SPAPI_E_NON_WINDOWS_NT_DRIVER";
	case SPAPI_E_NON_WINDOWS_DRIVER:                                             return "SPAPI_E_NON_WINDOWS_DRIVER";
	case SPAPI_E_NO_CATALOG_FOR_OEM_INF:                                         return "SPAPI_E_NO_CATALOG_FOR_OEM_INF";
	case SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE:                                     return "SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE";
	case SPAPI_E_NOT_DISABLEABLE:                                                return "SPAPI_E_NOT_DISABLEABLE";
	case SPAPI_E_CANT_REMOVE_DEVINST:                                            return "SPAPI_E_CANT_REMOVE_DEVINST";
	case SPAPI_E_INVALID_TARGET:                                                 return "SPAPI_E_INVALID_TARGET";
	case SPAPI_E_DRIVER_NONNATIVE:                                               return "SPAPI_E_DRIVER_NONNATIVE";
	case SPAPI_E_IN_WOW64:                                                       return "SPAPI_E_IN_WOW64";
	case SPAPI_E_SET_SYSTEM_RESTORE_POINT:                                       return "SPAPI_E_SET_SYSTEM_RESTORE_POINT";
	case SPAPI_E_INCORRECTLY_COPIED_INF:                                         return "SPAPI_E_INCORRECTLY_COPIED_INF";
	case SPAPI_E_SCE_DISABLED:                                                   return "SPAPI_E_SCE_DISABLED";
	case SPAPI_E_UNKNOWN_EXCEPTION:                                              return "SPAPI_E_UNKNOWN_EXCEPTION";
	case SPAPI_E_PNP_REGISTRY_ERROR:                                             return "SPAPI_E_PNP_REGISTRY_ERROR";
	case SPAPI_E_REMOTE_REQUEST_UNSUPPORTED:                                     return "SPAPI_E_REMOTE_REQUEST_UNSUPPORTED";
	case SPAPI_E_NOT_AN_INSTALLED_OEM_INF:                                       return "SPAPI_E_NOT_AN_INSTALLED_OEM_INF";
	case SPAPI_E_INF_IN_USE_BY_DEVICES:                                          return "SPAPI_E_INF_IN_USE_BY_DEVICES";
	case SPAPI_E_DI_FUNCTION_OBSOLETE:                                           return "SPAPI_E_DI_FUNCTION_OBSOLETE";
	case SPAPI_E_NO_AUTHENTICODE_CATALOG:                                        return "SPAPI_E_NO_AUTHENTICODE_CATALOG";
	case SPAPI_E_AUTHENTICODE_DISALLOWED:                                        return "SPAPI_E_AUTHENTICODE_DISALLOWED";
	case SPAPI_E_AUTHENTICODE_TRUSTED_PUBLISHER:                                 return "SPAPI_E_AUTHENTICODE_TRUSTED_PUBLISHER";
	case SPAPI_E_AUTHENTICODE_TRUST_NOT_ESTABLISHED:                             return "SPAPI_E_AUTHENTICODE_TRUST_NOT_ESTABLISHED";
	case SPAPI_E_AUTHENTICODE_PUBLISHER_NOT_TRUSTED:                             return "SPAPI_E_AUTHENTICODE_PUBLISHER_NOT_TRUSTED";
	case SPAPI_E_SIGNATURE_OSATTRIBUTE_MISMATCH:                                 return "SPAPI_E_SIGNATURE_OSATTRIBUTE_MISMATCH";
	case SPAPI_E_ONLY_VALIDATE_VIA_AUTHENTICODE:                                 return "SPAPI_E_ONLY_VALIDATE_VIA_AUTHENTICODE";
	case SPAPI_E_DEVICE_INSTALLER_NOT_READY:                                     return "SPAPI_E_DEVICE_INSTALLER_NOT_READY";
	case SPAPI_E_DRIVER_STORE_ADD_FAILED:                                        return "SPAPI_E_DRIVER_STORE_ADD_FAILED";
	case SPAPI_E_DEVICE_INSTALL_BLOCKED:                                         return "SPAPI_E_DEVICE_INSTALL_BLOCKED";
	case SPAPI_E_DRIVER_INSTALL_BLOCKED:                                         return "SPAPI_E_DRIVER_INSTALL_BLOCKED";
	case SPAPI_E_WRONG_INF_TYPE:                                                 return "SPAPI_E_WRONG_INF_TYPE";
	case SPAPI_E_FILE_HASH_NOT_IN_CATALOG:                                       return "SPAPI_E_FILE_HASH_NOT_IN_CATALOG";
	case SPAPI_E_DRIVER_STORE_DELETE_FAILED:                                     return "SPAPI_E_DRIVER_STORE_DELETE_FAILED";
	case SPAPI_E_UNRECOVERABLE_STACK_OVERFLOW:                                   return "SPAPI_E_UNRECOVERABLE_STACK_OVERFLOW";
	case SPAPI_E_ERROR_NOT_INSTALLED:                                            return "SPAPI_E_ERROR_NOT_INSTALLED";
	case SCARD_F_INTERNAL_ERROR:                                                 return "SCARD_F_INTERNAL_ERROR";
	case SCARD_E_CANCELLED:                                                      return "SCARD_E_CANCELLED";
	case SCARD_E_INVALID_HANDLE:                                                 return "SCARD_E_INVALID_HANDLE";
	case SCARD_E_INVALID_PARAMETER:                                              return "SCARD_E_INVALID_PARAMETER";
	case SCARD_E_INVALID_TARGET:                                                 return "SCARD_E_INVALID_TARGET";
	case SCARD_E_NO_MEMORY:                                                      return "SCARD_E_NO_MEMORY";
	case SCARD_F_WAITED_TOO_LONG:                                                return "SCARD_F_WAITED_TOO_LONG";
	case SCARD_E_INSUFFICIENT_BUFFER:                                            return "SCARD_E_INSUFFICIENT_BUFFER";
	case SCARD_E_UNKNOWN_READER:                                                 return "SCARD_E_UNKNOWN_READER";
	case SCARD_E_TIMEOUT:                                                        return "SCARD_E_TIMEOUT";
	case SCARD_E_SHARING_VIOLATION:                                              return "SCARD_E_SHARING_VIOLATION";
	case SCARD_E_NO_SMARTCARD:                                                   return "SCARD_E_NO_SMARTCARD";
	case SCARD_E_UNKNOWN_CARD:                                                   return "SCARD_E_UNKNOWN_CARD";
	case SCARD_E_CANT_DISPOSE:                                                   return "SCARD_E_CANT_DISPOSE";
	case SCARD_E_PROTO_MISMATCH:                                                 return "SCARD_E_PROTO_MISMATCH";
	case SCARD_E_NOT_READY:                                                      return "SCARD_E_NOT_READY";
	case SCARD_E_INVALID_VALUE:                                                  return "SCARD_E_INVALID_VALUE";
	case SCARD_E_SYSTEM_CANCELLED:                                               return "SCARD_E_SYSTEM_CANCELLED";
	case SCARD_F_COMM_ERROR:                                                     return "SCARD_F_COMM_ERROR";
	case SCARD_F_UNKNOWN_ERROR:                                                  return "SCARD_F_UNKNOWN_ERROR";
	case SCARD_E_INVALID_ATR:                                                    return "SCARD_E_INVALID_ATR";
	case SCARD_E_NOT_TRANSACTED:                                                 return "SCARD_E_NOT_TRANSACTED";
	case SCARD_E_READER_UNAVAILABLE:                                             return "SCARD_E_READER_UNAVAILABLE";
	case SCARD_P_SHUTDOWN:                                                       return "SCARD_P_SHUTDOWN";
	case SCARD_E_PCI_TOO_SMALL:                                                  return "SCARD_E_PCI_TOO_SMALL";
	case SCARD_E_READER_UNSUPPORTED:                                             return "SCARD_E_READER_UNSUPPORTED";
	case SCARD_E_DUPLICATE_READER:                                               return "SCARD_E_DUPLICATE_READER";
	case SCARD_E_CARD_UNSUPPORTED:                                               return "SCARD_E_CARD_UNSUPPORTED";
	case SCARD_E_NO_SERVICE:                                                     return "SCARD_E_NO_SERVICE";
	case SCARD_E_SERVICE_STOPPED:                                                return "SCARD_E_SERVICE_STOPPED";
	case SCARD_E_UNEXPECTED:                                                     return "SCARD_E_UNEXPECTED";
	case SCARD_E_ICC_INSTALLATION:                                               return "SCARD_E_ICC_INSTALLATION";
	case SCARD_E_ICC_CREATEORDER:                                                return "SCARD_E_ICC_CREATEORDER";
	case SCARD_E_UNSUPPORTED_FEATURE:                                            return "SCARD_E_UNSUPPORTED_FEATURE";
	case SCARD_E_DIR_NOT_FOUND:                                                  return "SCARD_E_DIR_NOT_FOUND";
	case SCARD_E_FILE_NOT_FOUND:                                                 return "SCARD_E_FILE_NOT_FOUND";
	case SCARD_E_NO_DIR:                                                         return "SCARD_E_NO_DIR";
	case SCARD_E_NO_FILE:                                                        return "SCARD_E_NO_FILE";
	case SCARD_E_NO_ACCESS:                                                      return "SCARD_E_NO_ACCESS";
	case SCARD_E_WRITE_TOO_MANY:                                                 return "SCARD_E_WRITE_TOO_MANY";
	case SCARD_E_BAD_SEEK:                                                       return "SCARD_E_BAD_SEEK";
	case SCARD_E_INVALID_CHV:                                                    return "SCARD_E_INVALID_CHV";
	case SCARD_E_UNKNOWN_RES_MNG:                                                return "SCARD_E_UNKNOWN_RES_MNG";
	case SCARD_E_NO_SUCH_CERTIFICATE:                                            return "SCARD_E_NO_SUCH_CERTIFICATE";
	case SCARD_E_CERTIFICATE_UNAVAILABLE:                                        return "SCARD_E_CERTIFICATE_UNAVAILABLE";
	case SCARD_E_NO_READERS_AVAILABLE:                                           return "SCARD_E_NO_READERS_AVAILABLE";
	case SCARD_E_COMM_DATA_LOST:                                                 return "SCARD_E_COMM_DATA_LOST";
	case SCARD_E_NO_KEY_CONTAINER:                                               return "SCARD_E_NO_KEY_CONTAINER";
	case SCARD_E_SERVER_TOO_BUSY:                                                return "SCARD_E_SERVER_TOO_BUSY";
	case SCARD_W_UNSUPPORTED_CARD:                                               return "SCARD_W_UNSUPPORTED_CARD";
	case SCARD_W_UNRESPONSIVE_CARD:                                              return "SCARD_W_UNRESPONSIVE_CARD";
	case SCARD_W_UNPOWERED_CARD:                                                 return "SCARD_W_UNPOWERED_CARD";
	case SCARD_W_RESET_CARD:                                                     return "SCARD_W_RESET_CARD";
	case SCARD_W_REMOVED_CARD:                                                   return "SCARD_W_REMOVED_CARD";
	case SCARD_W_SECURITY_VIOLATION:                                             return "SCARD_W_SECURITY_VIOLATION";
	case SCARD_W_WRONG_CHV:                                                      return "SCARD_W_WRONG_CHV";
	case SCARD_W_CHV_BLOCKED:                                                    return "SCARD_W_CHV_BLOCKED";
	case SCARD_W_EOF:                                                            return "SCARD_W_EOF";
	case SCARD_W_CANCELLED_BY_USER:                                              return "SCARD_W_CANCELLED_BY_USER";
	case SCARD_W_CARD_NOT_AUTHENTICATED:                                         return "SCARD_W_CARD_NOT_AUTHENTICATED";
	case COMADMIN_E_OBJECTERRORS:                                                return "COMADMIN_E_OBJECTERRORS";
	case COMADMIN_E_OBJECTINVALID:                                               return "COMADMIN_E_OBJECTINVALID";
	case COMADMIN_E_KEYMISSING:                                                  return "COMADMIN_E_KEYMISSING";
	case COMADMIN_E_ALREADYINSTALLED:                                            return "COMADMIN_E_ALREADYINSTALLED";
	case COMADMIN_E_APP_FILE_WRITEFAIL:                                          return "COMADMIN_E_APP_FILE_WRITEFAIL";
	case COMADMIN_E_APP_FILE_READFAIL:                                           return "COMADMIN_E_APP_FILE_READFAIL";
	case COMADMIN_E_APP_FILE_VERSION:                                            return "COMADMIN_E_APP_FILE_VERSION";
	case COMADMIN_E_BADPATH:                                                     return "COMADMIN_E_BADPATH";
	case COMADMIN_E_APPLICATIONEXISTS:                                           return "COMADMIN_E_APPLICATIONEXISTS";
	case COMADMIN_E_ROLEEXISTS:                                                  return "COMADMIN_E_ROLEEXISTS";
	case COMADMIN_E_CANTCOPYFILE:                                                return "COMADMIN_E_CANTCOPYFILE";
	case COMADMIN_E_NOUSER:                                                      return "COMADMIN_E_NOUSER";
	case COMADMIN_E_INVALIDUSERIDS:                                              return "COMADMIN_E_INVALIDUSERIDS";
	case COMADMIN_E_NOREGISTRYCLSID:                                             return "COMADMIN_E_NOREGISTRYCLSID";
	case COMADMIN_E_BADREGISTRYPROGID:                                           return "COMADMIN_E_BADREGISTRYPROGID";
	case COMADMIN_E_AUTHENTICATIONLEVEL:                                         return "COMADMIN_E_AUTHENTICATIONLEVEL";
	case COMADMIN_E_USERPASSWDNOTVALID:                                          return "COMADMIN_E_USERPASSWDNOTVALID";
	case COMADMIN_E_CLSIDORIIDMISMATCH:                                          return "COMADMIN_E_CLSIDORIIDMISMATCH";
	case COMADMIN_E_REMOTEINTERFACE:                                             return "COMADMIN_E_REMOTEINTERFACE";
	case COMADMIN_E_DLLREGISTERSERVER:                                           return "COMADMIN_E_DLLREGISTERSERVER";
	case COMADMIN_E_NOSERVERSHARE:                                               return "COMADMIN_E_NOSERVERSHARE";
	case COMADMIN_E_DLLLOADFAILED:                                               return "COMADMIN_E_DLLLOADFAILED";
	case COMADMIN_E_BADREGISTRYLIBID:                                            return "COMADMIN_E_BADREGISTRYLIBID";
	case COMADMIN_E_APPDIRNOTFOUND:                                              return "COMADMIN_E_APPDIRNOTFOUND";
	case COMADMIN_E_REGISTRARFAILED:                                             return "COMADMIN_E_REGISTRARFAILED";
	case COMADMIN_E_COMPFILE_DOESNOTEXIST:                                       return "COMADMIN_E_COMPFILE_DOESNOTEXIST";
	case COMADMIN_E_COMPFILE_LOADDLLFAIL:                                        return "COMADMIN_E_COMPFILE_LOADDLLFAIL";
	case COMADMIN_E_COMPFILE_GETCLASSOBJ:                                        return "COMADMIN_E_COMPFILE_GETCLASSOBJ";
	case COMADMIN_E_COMPFILE_CLASSNOTAVAIL:                                      return "COMADMIN_E_COMPFILE_CLASSNOTAVAIL";
	case COMADMIN_E_COMPFILE_BADTLB:                                             return "COMADMIN_E_COMPFILE_BADTLB";
	case COMADMIN_E_COMPFILE_NOTINSTALLABLE:                                     return "COMADMIN_E_COMPFILE_NOTINSTALLABLE";
	case COMADMIN_E_NOTCHANGEABLE:                                               return "COMADMIN_E_NOTCHANGEABLE";
	case COMADMIN_E_NOTDELETEABLE:                                               return "COMADMIN_E_NOTDELETEABLE";
	case COMADMIN_E_SESSION:                                                     return "COMADMIN_E_SESSION";
	case COMADMIN_E_COMP_MOVE_LOCKED:                                            return "COMADMIN_E_COMP_MOVE_LOCKED";
	case COMADMIN_E_COMP_MOVE_BAD_DEST:                                          return "COMADMIN_E_COMP_MOVE_BAD_DEST";
	case COMADMIN_E_REGISTERTLB:                                                 return "COMADMIN_E_REGISTERTLB";
	case COMADMIN_E_SYSTEMAPP:                                                   return "COMADMIN_E_SYSTEMAPP";
	case COMADMIN_E_COMPFILE_NOREGISTRAR:                                        return "COMADMIN_E_COMPFILE_NOREGISTRAR";
	case COMADMIN_E_COREQCOMPINSTALLED:                                          return "COMADMIN_E_COREQCOMPINSTALLED";
	case COMADMIN_E_SERVICENOTINSTALLED:                                         return "COMADMIN_E_SERVICENOTINSTALLED";
	case COMADMIN_E_PROPERTYSAVEFAILED:                                          return "COMADMIN_E_PROPERTYSAVEFAILED";
	case COMADMIN_E_OBJECTEXISTS:                                                return "COMADMIN_E_OBJECTEXISTS";
	case COMADMIN_E_COMPONENTEXISTS:                                             return "COMADMIN_E_COMPONENTEXISTS";
	case COMADMIN_E_REGFILE_CORRUPT:                                             return "COMADMIN_E_REGFILE_CORRUPT";
	case COMADMIN_E_PROPERTY_OVERFLOW:                                           return "COMADMIN_E_PROPERTY_OVERFLOW";
	case COMADMIN_E_NOTINREGISTRY:                                               return "COMADMIN_E_NOTINREGISTRY";
	case COMADMIN_E_OBJECTNOTPOOLABLE:                                           return "COMADMIN_E_OBJECTNOTPOOLABLE";
	case COMADMIN_E_APPLID_MATCHES_CLSID:                                        return "COMADMIN_E_APPLID_MATCHES_CLSID";
	case COMADMIN_E_ROLE_DOES_NOT_EXIST:                                         return "COMADMIN_E_ROLE_DOES_NOT_EXIST";
	case COMADMIN_E_START_APP_NEEDS_COMPONENTS:                                  return "COMADMIN_E_START_APP_NEEDS_COMPONENTS";
	case COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM:                                 return "COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM";
	case COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY:                                    return "COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY";
	case COMADMIN_E_CAN_NOT_START_APP:                                           return "COMADMIN_E_CAN_NOT_START_APP";
	case COMADMIN_E_CAN_NOT_EXPORT_SYS_APP:                                      return "COMADMIN_E_CAN_NOT_EXPORT_SYS_APP";
	case COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT:                                 return "COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT";
	case COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER:                               return "COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER";
	case COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE:                                  return "COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE";
	case COMADMIN_E_BASE_PARTITION_ONLY:                                         return "COMADMIN_E_BASE_PARTITION_ONLY";
	case COMADMIN_E_START_APP_DISABLED:                                          return "COMADMIN_E_START_APP_DISABLED";
	case COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME:                                return "COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME";
	case COMADMIN_E_CAT_INVALID_PARTITION_NAME:                                  return "COMADMIN_E_CAT_INVALID_PARTITION_NAME";
	case COMADMIN_E_CAT_PARTITION_IN_USE:                                        return "COMADMIN_E_CAT_PARTITION_IN_USE";
	case COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES:                              return "COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES";
	case COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED:                         return "COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED";
	case COMADMIN_E_AMBIGUOUS_APPLICATION_NAME:                                  return "COMADMIN_E_AMBIGUOUS_APPLICATION_NAME";
	case COMADMIN_E_AMBIGUOUS_PARTITION_NAME:                                    return "COMADMIN_E_AMBIGUOUS_PARTITION_NAME";
	case COMADMIN_E_REGDB_NOTINITIALIZED:                                        return "COMADMIN_E_REGDB_NOTINITIALIZED";
	case COMADMIN_E_REGDB_NOTOPEN:                                               return "COMADMIN_E_REGDB_NOTOPEN";
	case COMADMIN_E_REGDB_SYSTEMERR:                                             return "COMADMIN_E_REGDB_SYSTEMERR";
	case COMADMIN_E_REGDB_ALREADYRUNNING:                                        return "COMADMIN_E_REGDB_ALREADYRUNNING";
	case COMADMIN_E_MIG_VERSIONNOTSUPPORTED:                                     return "COMADMIN_E_MIG_VERSIONNOTSUPPORTED";
	case COMADMIN_E_MIG_SCHEMANOTFOUND:                                          return "COMADMIN_E_MIG_SCHEMANOTFOUND";
	case COMADMIN_E_CAT_BITNESSMISMATCH:                                         return "COMADMIN_E_CAT_BITNESSMISMATCH";
	case COMADMIN_E_CAT_UNACCEPTABLEBITNESS:                                     return "COMADMIN_E_CAT_UNACCEPTABLEBITNESS";
	case COMADMIN_E_CAT_WRONGAPPBITNESS:                                         return "COMADMIN_E_CAT_WRONGAPPBITNESS";
	case COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED:                              return "COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED";
	case COMADMIN_E_CAT_SERVERFAULT:                                             return "COMADMIN_E_CAT_SERVERFAULT";
	case COMQC_E_APPLICATION_NOT_QUEUED:                                         return "COMQC_E_APPLICATION_NOT_QUEUED";
	case COMQC_E_NO_QUEUEABLE_INTERFACES:                                        return "COMQC_E_NO_QUEUEABLE_INTERFACES";
	case COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE:                                  return "COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE";
	case COMQC_E_NO_IPERSISTSTREAM:                                              return "COMQC_E_NO_IPERSISTSTREAM";
	case COMQC_E_BAD_MESSAGE:                                                    return "COMQC_E_BAD_MESSAGE";
	case COMQC_E_UNAUTHENTICATED:                                                return "COMQC_E_UNAUTHENTICATED";
	case COMQC_E_UNTRUSTED_ENQUEUER:                                             return "COMQC_E_UNTRUSTED_ENQUEUER";
	case MSDTC_E_DUPLICATE_RESOURCE:                                             return "MSDTC_E_DUPLICATE_RESOURCE";
	case COMADMIN_E_OBJECT_PARENT_MISSING:                                       return "COMADMIN_E_OBJECT_PARENT_MISSING";
	case COMADMIN_E_OBJECT_DOES_NOT_EXIST:                                       return "COMADMIN_E_OBJECT_DOES_NOT_EXIST";
	case COMADMIN_E_APP_NOT_RUNNING:                                             return "COMADMIN_E_APP_NOT_RUNNING";
	case COMADMIN_E_INVALID_PARTITION:                                           return "COMADMIN_E_INVALID_PARTITION";
	case COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE:                           return "COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE";
	case COMADMIN_E_USER_IN_SET:                                                 return "COMADMIN_E_USER_IN_SET";
	case COMADMIN_E_CANTRECYCLELIBRARYAPPS:                                      return "COMADMIN_E_CANTRECYCLELIBRARYAPPS";
	case COMADMIN_E_CANTRECYCLESERVICEAPPS:                                      return "COMADMIN_E_CANTRECYCLESERVICEAPPS";
	case COMADMIN_E_PROCESSALREADYRECYCLED:                                      return "COMADMIN_E_PROCESSALREADYRECYCLED";
	case COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED:                               return "COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED";
	case COMADMIN_E_CANTMAKEINPROCSERVICE:                                       return "COMADMIN_E_CANTMAKEINPROCSERVICE";
	case COMADMIN_E_PROGIDINUSEBYCLSID:                                          return "COMADMIN_E_PROGIDINUSEBYCLSID";
	case COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET:                                return "COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET";
	case COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED:                               return "COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED";
	case COMADMIN_E_PARTITION_ACCESSDENIED:                                      return "COMADMIN_E_PARTITION_ACCESSDENIED";
	case COMADMIN_E_PARTITION_MSI_ONLY:                                          return "COMADMIN_E_PARTITION_MSI_ONLY";
	case COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT:                       return "COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT";
	case COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS:               return "COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS";
	case COMADMIN_E_COMP_MOVE_SOURCE:                                            return "COMADMIN_E_COMP_MOVE_SOURCE";
	case COMADMIN_E_COMP_MOVE_DEST:                                              return "COMADMIN_E_COMP_MOVE_DEST";
	case COMADMIN_E_COMP_MOVE_PRIVATE:                                           return "COMADMIN_E_COMP_MOVE_PRIVATE";
	case COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET:                               return "COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET";
	case COMADMIN_E_CANNOT_ALIAS_EVENTCLASS:                                     return "COMADMIN_E_CANNOT_ALIAS_EVENTCLASS";
	case COMADMIN_E_PRIVATE_ACCESSDENIED:                                        return "COMADMIN_E_PRIVATE_ACCESSDENIED";
	case COMADMIN_E_SAFERINVALID:                                                return "COMADMIN_E_SAFERINVALID";
	case COMADMIN_E_REGISTRY_ACCESSDENIED:                                       return "COMADMIN_E_REGISTRY_ACCESSDENIED";
	case COMADMIN_E_PARTITIONS_DISABLED:                                         return "COMADMIN_E_PARTITIONS_DISABLED";
	case ERROR_FLT_NO_HANDLER_DEFINED:                                           return "ERROR_FLT_NO_HANDLER_DEFINED";
	case ERROR_FLT_CONTEXT_ALREADY_DEFINED:                                      return "ERROR_FLT_CONTEXT_ALREADY_DEFINED";
	case ERROR_FLT_INVALID_ASYNCHRONOUS_REQUEST:                                 return "ERROR_FLT_INVALID_ASYNCHRONOUS_REQUEST";
	case ERROR_FLT_DISALLOW_FAST_IO:                                             return "ERROR_FLT_DISALLOW_FAST_IO";
	case ERROR_FLT_INVALID_NAME_REQUEST:                                         return "ERROR_FLT_INVALID_NAME_REQUEST";
	case ERROR_FLT_NOT_SAFE_TO_POST_OPERATION:                                   return "ERROR_FLT_NOT_SAFE_TO_POST_OPERATION";
	case ERROR_FLT_NOT_INITIALIZED:                                              return "ERROR_FLT_NOT_INITIALIZED";
	case ERROR_FLT_FILTER_NOT_READY:                                             return "ERROR_FLT_FILTER_NOT_READY";
	case ERROR_FLT_POST_OPERATION_CLEANUP:                                       return "ERROR_FLT_POST_OPERATION_CLEANUP";
	case ERROR_FLT_INTERNAL_ERROR:                                               return "ERROR_FLT_INTERNAL_ERROR";
	case ERROR_FLT_DELETING_OBJECT:                                              return "ERROR_FLT_DELETING_OBJECT";
	case ERROR_FLT_MUST_BE_NONPAGED_POOL:                                        return "ERROR_FLT_MUST_BE_NONPAGED_POOL";
	case ERROR_FLT_DUPLICATE_ENTRY:                                              return "ERROR_FLT_DUPLICATE_ENTRY";
	case ERROR_FLT_CBDQ_DISABLED:                                                return "ERROR_FLT_CBDQ_DISABLED";
	case ERROR_FLT_DO_NOT_ATTACH:                                                return "ERROR_FLT_DO_NOT_ATTACH";
	case ERROR_FLT_DO_NOT_DETACH:                                                return "ERROR_FLT_DO_NOT_DETACH";
	case ERROR_FLT_INSTANCE_ALTITUDE_COLLISION:                                  return "ERROR_FLT_INSTANCE_ALTITUDE_COLLISION";
	case ERROR_FLT_INSTANCE_NAME_COLLISION:                                      return "ERROR_FLT_INSTANCE_NAME_COLLISION";
	case ERROR_FLT_FILTER_NOT_FOUND:                                             return "ERROR_FLT_FILTER_NOT_FOUND";
	case ERROR_FLT_VOLUME_NOT_FOUND:                                             return "ERROR_FLT_VOLUME_NOT_FOUND";
	case ERROR_FLT_INSTANCE_NOT_FOUND:                                           return "ERROR_FLT_INSTANCE_NOT_FOUND";
	case ERROR_FLT_CONTEXT_ALLOCATION_NOT_FOUND:                                 return "ERROR_FLT_CONTEXT_ALLOCATION_NOT_FOUND";
	case ERROR_FLT_INVALID_CONTEXT_REGISTRATION:                                 return "ERROR_FLT_INVALID_CONTEXT_REGISTRATION";
	case ERROR_FLT_NAME_CACHE_MISS:                                              return "ERROR_FLT_NAME_CACHE_MISS";
	case ERROR_FLT_NO_DEVICE_OBJECT:                                             return "ERROR_FLT_NO_DEVICE_OBJECT";
	case ERROR_FLT_VOLUME_ALREADY_MOUNTED:                                       return "ERROR_FLT_VOLUME_ALREADY_MOUNTED";
	case ERROR_FLT_ALREADY_ENLISTED:                                             return "ERROR_FLT_ALREADY_ENLISTED";
	case ERROR_FLT_CONTEXT_ALREADY_LINKED:                                       return "ERROR_FLT_CONTEXT_ALREADY_LINKED";
	case ERROR_FLT_NO_WAITER_FOR_REPLY:                                          return "ERROR_FLT_NO_WAITER_FOR_REPLY";
	case ERROR_HUNG_DISPLAY_DRIVER_THREAD:                                       return "ERROR_HUNG_DISPLAY_DRIVER_THREAD";
	case ERROR_MONITOR_NO_DESCRIPTOR:                                            return "ERROR_MONITOR_NO_DESCRIPTOR";
	case ERROR_MONITOR_UNKNOWN_DESCRIPTOR_FORMAT:                                return "ERROR_MONITOR_UNKNOWN_DESCRIPTOR_FORMAT";
	case DWM_E_COMPOSITIONDISABLED:                                              return "DWM_E_COMPOSITIONDISABLED";
	case DWM_E_REMOTING_NOT_SUPPORTED:                                           return "DWM_E_REMOTING_NOT_SUPPORTED";
	case DWM_E_NO_REDIRECTION_SURFACE_AVAILABLE:                                 return "DWM_E_NO_REDIRECTION_SURFACE_AVAILABLE";
	case DWM_E_NOT_QUEUING_PRESENTS:                                             return "DWM_E_NOT_QUEUING_PRESENTS";
	case TPM_E_ERROR_MASK:                                                       return "TPM_E_ERROR_MASK";
	case TPM_E_AUTHFAIL:                                                         return "TPM_E_AUTHFAIL";
	case TPM_E_BADINDEX:                                                         return "TPM_E_BADINDEX";
	case TPM_E_BAD_PARAMETER:                                                    return "TPM_E_BAD_PARAMETER";
	case TPM_E_AUDITFAILURE:                                                     return "TPM_E_AUDITFAILURE";
	case TPM_E_CLEAR_DISABLED:                                                   return "TPM_E_CLEAR_DISABLED";
	case TPM_E_DEACTIVATED:                                                      return "TPM_E_DEACTIVATED";
	case TPM_E_DISABLED:                                                         return "TPM_E_DISABLED";
	case TPM_E_DISABLED_CMD:                                                     return "TPM_E_DISABLED_CMD";
	case TPM_E_FAIL:                                                             return "TPM_E_FAIL";
	case TPM_E_BAD_ORDINAL:                                                      return "TPM_E_BAD_ORDINAL";
	case TPM_E_INSTALL_DISABLED:                                                 return "TPM_E_INSTALL_DISABLED";
	case TPM_E_INVALID_KEYHANDLE:                                                return "TPM_E_INVALID_KEYHANDLE";
	case TPM_E_KEYNOTFOUND:                                                      return "TPM_E_KEYNOTFOUND";
	case TPM_E_INAPPROPRIATE_ENC:                                                return "TPM_E_INAPPROPRIATE_ENC";
	case TPM_E_MIGRATEFAIL:                                                      return "TPM_E_MIGRATEFAIL";
	case TPM_E_INVALID_PCR_INFO:                                                 return "TPM_E_INVALID_PCR_INFO";
	case TPM_E_NOSPACE:                                                          return "TPM_E_NOSPACE";
	case TPM_E_NOSRK:                                                            return "TPM_E_NOSRK";
	case TPM_E_NOTSEALED_BLOB:                                                   return "TPM_E_NOTSEALED_BLOB";
	case TPM_E_OWNER_SET:                                                        return "TPM_E_OWNER_SET";
	case TPM_E_RESOURCES:                                                        return "TPM_E_RESOURCES";
	case TPM_E_SHORTRANDOM:                                                      return "TPM_E_SHORTRANDOM";
	case TPM_E_SIZE:                                                             return "TPM_E_SIZE";
	case TPM_E_WRONGPCRVAL:                                                      return "TPM_E_WRONGPCRVAL";
	case TPM_E_BAD_PARAM_SIZE:                                                   return "TPM_E_BAD_PARAM_SIZE";
	case TPM_E_SHA_THREAD:                                                       return "TPM_E_SHA_THREAD";
	case TPM_E_SHA_ERROR:                                                        return "TPM_E_SHA_ERROR";
	case TPM_E_FAILEDSELFTEST:                                                   return "TPM_E_FAILEDSELFTEST";
	case TPM_E_AUTH2FAIL:                                                        return "TPM_E_AUTH2FAIL";
	case TPM_E_BADTAG:                                                           return "TPM_E_BADTAG";
	case TPM_E_IOERROR:                                                          return "TPM_E_IOERROR";
	case TPM_E_ENCRYPT_ERROR:                                                    return "TPM_E_ENCRYPT_ERROR";
	case TPM_E_DECRYPT_ERROR:                                                    return "TPM_E_DECRYPT_ERROR";
	case TPM_E_INVALID_AUTHHANDLE:                                               return "TPM_E_INVALID_AUTHHANDLE";
	case TPM_E_NO_ENDORSEMENT:                                                   return "TPM_E_NO_ENDORSEMENT";
	case TPM_E_INVALID_KEYUSAGE:                                                 return "TPM_E_INVALID_KEYUSAGE";
	case TPM_E_WRONG_ENTITYTYPE:                                                 return "TPM_E_WRONG_ENTITYTYPE";
	case TPM_E_INVALID_POSTINIT:                                                 return "TPM_E_INVALID_POSTINIT";
	case TPM_E_INAPPROPRIATE_SIG:                                                return "TPM_E_INAPPROPRIATE_SIG";
	case TPM_E_BAD_KEY_PROPERTY:                                                 return "TPM_E_BAD_KEY_PROPERTY";
	case TPM_E_BAD_MIGRATION:                                                    return "TPM_E_BAD_MIGRATION";
	case TPM_E_BAD_SCHEME:                                                       return "TPM_E_BAD_SCHEME";
	case TPM_E_BAD_DATASIZE:                                                     return "TPM_E_BAD_DATASIZE";
	case TPM_E_BAD_MODE:                                                         return "TPM_E_BAD_MODE";
	case TPM_E_BAD_PRESENCE:                                                     return "TPM_E_BAD_PRESENCE";
	case TPM_E_BAD_VERSION:                                                      return "TPM_E_BAD_VERSION";
	case TPM_E_NO_WRAP_TRANSPORT:                                                return "TPM_E_NO_WRAP_TRANSPORT";
	case TPM_E_AUDITFAIL_UNSUCCESSFUL:                                           return "TPM_E_AUDITFAIL_UNSUCCESSFUL";
	case TPM_E_AUDITFAIL_SUCCESSFUL:                                             return "TPM_E_AUDITFAIL_SUCCESSFUL";
	case TPM_E_NOTRESETABLE:                                                     return "TPM_E_NOTRESETABLE";
	case TPM_E_NOTLOCAL:                                                         return "TPM_E_NOTLOCAL";
	case TPM_E_BAD_TYPE:                                                         return "TPM_E_BAD_TYPE";
	case TPM_E_INVALID_RESOURCE:                                                 return "TPM_E_INVALID_RESOURCE";
	case TPM_E_NOTFIPS:                                                          return "TPM_E_NOTFIPS";
	case TPM_E_INVALID_FAMILY:                                                   return "TPM_E_INVALID_FAMILY";
	case TPM_E_NO_NV_PERMISSION:                                                 return "TPM_E_NO_NV_PERMISSION";
	case TPM_E_REQUIRES_SIGN:                                                    return "TPM_E_REQUIRES_SIGN";
	case TPM_E_KEY_NOTSUPPORTED:                                                 return "TPM_E_KEY_NOTSUPPORTED";
	case TPM_E_AUTH_CONFLICT:                                                    return "TPM_E_AUTH_CONFLICT";
	case TPM_E_AREA_LOCKED:                                                      return "TPM_E_AREA_LOCKED";
	case TPM_E_BAD_LOCALITY:                                                     return "TPM_E_BAD_LOCALITY";
	case TPM_E_READ_ONLY:                                                        return "TPM_E_READ_ONLY";
	case TPM_E_PER_NOWRITE:                                                      return "TPM_E_PER_NOWRITE";
	case TPM_E_FAMILYCOUNT:                                                      return "TPM_E_FAMILYCOUNT";
	case TPM_E_WRITE_LOCKED:                                                     return "TPM_E_WRITE_LOCKED";
	case TPM_E_BAD_ATTRIBUTES:                                                   return "TPM_E_BAD_ATTRIBUTES";
	case TPM_E_INVALID_STRUCTURE:                                                return "TPM_E_INVALID_STRUCTURE";
	case TPM_E_KEY_OWNER_CONTROL:                                                return "TPM_E_KEY_OWNER_CONTROL";
	case TPM_E_BAD_COUNTER:                                                      return "TPM_E_BAD_COUNTER";
	case TPM_E_NOT_FULLWRITE:                                                    return "TPM_E_NOT_FULLWRITE";
	case TPM_E_CONTEXT_GAP:                                                      return "TPM_E_CONTEXT_GAP";
	case TPM_E_MAXNVWRITES:                                                      return "TPM_E_MAXNVWRITES";
	case TPM_E_NOOPERATOR:                                                       return "TPM_E_NOOPERATOR";
	case TPM_E_RESOURCEMISSING:                                                  return "TPM_E_RESOURCEMISSING";
	case TPM_E_DELEGATE_LOCK:                                                    return "TPM_E_DELEGATE_LOCK";
	case TPM_E_DELEGATE_FAMILY:                                                  return "TPM_E_DELEGATE_FAMILY";
	case TPM_E_DELEGATE_ADMIN:                                                   return "TPM_E_DELEGATE_ADMIN";
	case TPM_E_TRANSPORT_NOTEXCLUSIVE:                                           return "TPM_E_TRANSPORT_NOTEXCLUSIVE";
	case TPM_E_OWNER_CONTROL:                                                    return "TPM_E_OWNER_CONTROL";
	case TPM_E_DAA_RESOURCES:                                                    return "TPM_E_DAA_RESOURCES";
	case TPM_E_DAA_INPUT_DATA0:                                                  return "TPM_E_DAA_INPUT_DATA0";
	case TPM_E_DAA_INPUT_DATA1:                                                  return "TPM_E_DAA_INPUT_DATA1";
	case TPM_E_DAA_ISSUER_SETTINGS:                                              return "TPM_E_DAA_ISSUER_SETTINGS";
	case TPM_E_DAA_TPM_SETTINGS:                                                 return "TPM_E_DAA_TPM_SETTINGS";
	case TPM_E_DAA_STAGE:                                                        return "TPM_E_DAA_STAGE";
	case TPM_E_DAA_ISSUER_VALIDITY:                                              return "TPM_E_DAA_ISSUER_VALIDITY";
	case TPM_E_DAA_WRONG_W:                                                      return "TPM_E_DAA_WRONG_W";
	case TPM_E_BAD_HANDLE:                                                       return "TPM_E_BAD_HANDLE";
	case TPM_E_BAD_DELEGATE:                                                     return "TPM_E_BAD_DELEGATE";
	case TPM_E_BADCONTEXT:                                                       return "TPM_E_BADCONTEXT";
	case TPM_E_TOOMANYCONTEXTS:                                                  return "TPM_E_TOOMANYCONTEXTS";
	case TPM_E_MA_TICKET_SIGNATURE:                                              return "TPM_E_MA_TICKET_SIGNATURE";
	case TPM_E_MA_DESTINATION:                                                   return "TPM_E_MA_DESTINATION";
	case TPM_E_MA_SOURCE:                                                        return "TPM_E_MA_SOURCE";
	case TPM_E_MA_AUTHORITY:                                                     return "TPM_E_MA_AUTHORITY";
	case TPM_E_PERMANENTEK:                                                      return "TPM_E_PERMANENTEK";
	case TPM_E_BAD_SIGNATURE:                                                    return "TPM_E_BAD_SIGNATURE";
	case TPM_E_NOCONTEXTSPACE:                                                   return "TPM_E_NOCONTEXTSPACE";
	case TPM_E_COMMAND_BLOCKED:                                                  return "TPM_E_COMMAND_BLOCKED";
	case TPM_E_INVALID_HANDLE:                                                   return "TPM_E_INVALID_HANDLE";
	case TPM_E_DUPLICATE_VHANDLE:                                                return "TPM_E_DUPLICATE_VHANDLE";
	case TPM_E_EMBEDDED_COMMAND_BLOCKED:                                         return "TPM_E_EMBEDDED_COMMAND_BLOCKED";
	case TPM_E_EMBEDDED_COMMAND_UNSUPPORTED:                                     return "TPM_E_EMBEDDED_COMMAND_UNSUPPORTED";
	case TPM_E_RETRY:                                                            return "TPM_E_RETRY";
	case TPM_E_NEEDS_SELFTEST:                                                   return "TPM_E_NEEDS_SELFTEST";
	case TPM_E_DOING_SELFTEST:                                                   return "TPM_E_DOING_SELFTEST";
	case TPM_E_DEFEND_LOCK_RUNNING:                                              return "TPM_E_DEFEND_LOCK_RUNNING";
	case TBS_E_INTERNAL_ERROR:                                                   return "TBS_E_INTERNAL_ERROR";
	case TBS_E_BAD_PARAMETER:                                                    return "TBS_E_BAD_PARAMETER";
	case TBS_E_INVALID_OUTPUT_POINTER:                                           return "TBS_E_INVALID_OUTPUT_POINTER";
	case TBS_E_INVALID_CONTEXT:                                                  return "TBS_E_INVALID_CONTEXT";
	case TBS_E_INSUFFICIENT_BUFFER:                                              return "TBS_E_INSUFFICIENT_BUFFER";
	case TBS_E_IOERROR:                                                          return "TBS_E_IOERROR";
	case TBS_E_INVALID_CONTEXT_PARAM:                                            return "TBS_E_INVALID_CONTEXT_PARAM";
	case TBS_E_SERVICE_NOT_RUNNING:                                              return "TBS_E_SERVICE_NOT_RUNNING";
	case TBS_E_TOO_MANY_TBS_CONTEXTS:                                            return "TBS_E_TOO_MANY_TBS_CONTEXTS";
	case TBS_E_TOO_MANY_RESOURCES:                                               return "TBS_E_TOO_MANY_RESOURCES";
	case TBS_E_SERVICE_START_PENDING:                                            return "TBS_E_SERVICE_START_PENDING";
	case TBS_E_PPI_NOT_SUPPORTED:                                                return "TBS_E_PPI_NOT_SUPPORTED";
	case TBS_E_COMMAND_CANCELED:                                                 return "TBS_E_COMMAND_CANCELED";
	case TBS_E_BUFFER_TOO_LARGE:                                                 return "TBS_E_BUFFER_TOO_LARGE";
	case TPMAPI_E_INVALID_STATE:                                                 return "TPMAPI_E_INVALID_STATE";
	case TPMAPI_E_NOT_ENOUGH_DATA:                                               return "TPMAPI_E_NOT_ENOUGH_DATA";
	case TPMAPI_E_TOO_MUCH_DATA:                                                 return "TPMAPI_E_TOO_MUCH_DATA";
	case TPMAPI_E_INVALID_OUTPUT_POINTER:                                        return "TPMAPI_E_INVALID_OUTPUT_POINTER";
	case TPMAPI_E_INVALID_PARAMETER:                                             return "TPMAPI_E_INVALID_PARAMETER";
	case TPMAPI_E_OUT_OF_MEMORY:                                                 return "TPMAPI_E_OUT_OF_MEMORY";
	case TPMAPI_E_BUFFER_TOO_SMALL:                                              return "TPMAPI_E_BUFFER_TOO_SMALL";
	case TPMAPI_E_INTERNAL_ERROR:                                                return "TPMAPI_E_INTERNAL_ERROR";
	case TPMAPI_E_ACCESS_DENIED:                                                 return "TPMAPI_E_ACCESS_DENIED";
	case TPMAPI_E_AUTHORIZATION_FAILED:                                          return "TPMAPI_E_AUTHORIZATION_FAILED";
	case TPMAPI_E_INVALID_CONTEXT_HANDLE:                                        return "TPMAPI_E_INVALID_CONTEXT_HANDLE";
	case TPMAPI_E_TBS_COMMUNICATION_ERROR:                                       return "TPMAPI_E_TBS_COMMUNICATION_ERROR";
	case TPMAPI_E_TPM_COMMAND_ERROR:                                             return "TPMAPI_E_TPM_COMMAND_ERROR";
	case TPMAPI_E_MESSAGE_TOO_LARGE:                                             return "TPMAPI_E_MESSAGE_TOO_LARGE";
	case TPMAPI_E_INVALID_ENCODING:                                              return "TPMAPI_E_INVALID_ENCODING";
	case TPMAPI_E_INVALID_KEY_SIZE:                                              return "TPMAPI_E_INVALID_KEY_SIZE";
	case TPMAPI_E_ENCRYPTION_FAILED:                                             return "TPMAPI_E_ENCRYPTION_FAILED";
	case TPMAPI_E_INVALID_KEY_PARAMS:                                            return "TPMAPI_E_INVALID_KEY_PARAMS";
	case TPMAPI_E_INVALID_MIGRATION_AUTHORIZATION_BLOB:                          return "TPMAPI_E_INVALID_MIGRATION_AUTHORIZATION_BLOB";
	case TPMAPI_E_INVALID_PCR_INDEX:                                             return "TPMAPI_E_INVALID_PCR_INDEX";
	case TPMAPI_E_INVALID_DELEGATE_BLOB:                                         return "TPMAPI_E_INVALID_DELEGATE_BLOB";
	case TPMAPI_E_INVALID_CONTEXT_PARAMS:                                        return "TPMAPI_E_INVALID_CONTEXT_PARAMS";
	case TPMAPI_E_INVALID_KEY_BLOB:                                              return "TPMAPI_E_INVALID_KEY_BLOB";
	case TPMAPI_E_INVALID_PCR_DATA:                                              return "TPMAPI_E_INVALID_PCR_DATA";
	case TPMAPI_E_INVALID_OWNER_AUTH:                                            return "TPMAPI_E_INVALID_OWNER_AUTH";
	case TBSIMP_E_BUFFER_TOO_SMALL:                                              return "TBSIMP_E_BUFFER_TOO_SMALL";
	case TBSIMP_E_CLEANUP_FAILED:                                                return "TBSIMP_E_CLEANUP_FAILED";
	case TBSIMP_E_INVALID_CONTEXT_HANDLE:                                        return "TBSIMP_E_INVALID_CONTEXT_HANDLE";
	case TBSIMP_E_INVALID_CONTEXT_PARAM:                                         return "TBSIMP_E_INVALID_CONTEXT_PARAM";
	case TBSIMP_E_TPM_ERROR:                                                     return "TBSIMP_E_TPM_ERROR";
	case TBSIMP_E_HASH_BAD_KEY:                                                  return "TBSIMP_E_HASH_BAD_KEY";
	case TBSIMP_E_DUPLICATE_VHANDLE:                                             return "TBSIMP_E_DUPLICATE_VHANDLE";
	case TBSIMP_E_INVALID_OUTPUT_POINTER:                                        return "TBSIMP_E_INVALID_OUTPUT_POINTER";
	case TBSIMP_E_INVALID_PARAMETER:                                             return "TBSIMP_E_INVALID_PARAMETER";
	case TBSIMP_E_RPC_INIT_FAILED:                                               return "TBSIMP_E_RPC_INIT_FAILED";
	case TBSIMP_E_SCHEDULER_NOT_RUNNING:                                         return "TBSIMP_E_SCHEDULER_NOT_RUNNING";
	case TBSIMP_E_COMMAND_CANCELED:                                              return "TBSIMP_E_COMMAND_CANCELED";
	case TBSIMP_E_OUT_OF_MEMORY:                                                 return "TBSIMP_E_OUT_OF_MEMORY";
	case TBSIMP_E_LIST_NO_MORE_ITEMS:                                            return "TBSIMP_E_LIST_NO_MORE_ITEMS";
	case TBSIMP_E_LIST_NOT_FOUND:                                                return "TBSIMP_E_LIST_NOT_FOUND";
	case TBSIMP_E_NOT_ENOUGH_SPACE:                                              return "TBSIMP_E_NOT_ENOUGH_SPACE";
	case TBSIMP_E_NOT_ENOUGH_TPM_CONTEXTS:                                       return "TBSIMP_E_NOT_ENOUGH_TPM_CONTEXTS";
	case TBSIMP_E_COMMAND_FAILED:                                                return "TBSIMP_E_COMMAND_FAILED";
	case TBSIMP_E_UNKNOWN_ORDINAL:                                               return "TBSIMP_E_UNKNOWN_ORDINAL";
	case TBSIMP_E_RESOURCE_EXPIRED:                                              return "TBSIMP_E_RESOURCE_EXPIRED";
	case TBSIMP_E_INVALID_RESOURCE:                                              return "TBSIMP_E_INVALID_RESOURCE";
	case TBSIMP_E_NOTHING_TO_UNLOAD:                                             return "TBSIMP_E_NOTHING_TO_UNLOAD";
	case TBSIMP_E_HASH_TABLE_FULL:                                               return "TBSIMP_E_HASH_TABLE_FULL";
	case TBSIMP_E_TOO_MANY_TBS_CONTEXTS:                                         return "TBSIMP_E_TOO_MANY_TBS_CONTEXTS";
	case TBSIMP_E_TOO_MANY_RESOURCES:                                            return "TBSIMP_E_TOO_MANY_RESOURCES";
	case TBSIMP_E_PPI_NOT_SUPPORTED:                                             return "TBSIMP_E_PPI_NOT_SUPPORTED";
	case TBSIMP_E_TPM_INCOMPATIBLE:                                              return "TBSIMP_E_TPM_INCOMPATIBLE";
	case TPM_E_PPI_ACPI_FAILURE:                                                 return "TPM_E_PPI_ACPI_FAILURE";
	case TPM_E_PPI_USER_ABORT:                                                   return "TPM_E_PPI_USER_ABORT";
	case TPM_E_PPI_BIOS_FAILURE:                                                 return "TPM_E_PPI_BIOS_FAILURE";
	case TPM_E_PPI_NOT_SUPPORTED:                                                return "TPM_E_PPI_NOT_SUPPORTED";
	case PLA_E_DCS_NOT_FOUND:                                                    return "PLA_E_DCS_NOT_FOUND";
	case PLA_E_TOO_MANY_FOLDERS:                                                 return "PLA_E_TOO_MANY_FOLDERS";
	case PLA_E_NO_MIN_DISK:                                                      return "PLA_E_NO_MIN_DISK";
	case PLA_E_DCS_IN_USE:                                                       return "PLA_E_DCS_IN_USE";
	case PLA_E_DCS_ALREADY_EXISTS:                                               return "PLA_E_DCS_ALREADY_EXISTS";
	case PLA_E_PROPERTY_CONFLICT:                                                return "PLA_E_PROPERTY_CONFLICT";
	case PLA_E_DCS_SINGLETON_REQUIRED:                                           return "PLA_E_DCS_SINGLETON_REQUIRED";
	case PLA_E_CREDENTIALS_REQUIRED:                                             return "PLA_E_CREDENTIALS_REQUIRED";
	case PLA_E_DCS_NOT_RUNNING:                                                  return "PLA_E_DCS_NOT_RUNNING";
	case PLA_E_CONFLICT_INCL_EXCL_API:                                           return "PLA_E_CONFLICT_INCL_EXCL_API";
	case PLA_E_NETWORK_EXE_NOT_VALID:                                            return "PLA_E_NETWORK_EXE_NOT_VALID";
	case PLA_E_EXE_ALREADY_CONFIGURED:                                           return "PLA_E_EXE_ALREADY_CONFIGURED";
	case PLA_E_EXE_PATH_NOT_VALID:                                               return "PLA_E_EXE_PATH_NOT_VALID";
	case PLA_E_DC_ALREADY_EXISTS:                                                return "PLA_E_DC_ALREADY_EXISTS";
	case PLA_E_DCS_START_WAIT_TIMEOUT:                                           return "PLA_E_DCS_START_WAIT_TIMEOUT";
	case PLA_E_DC_START_WAIT_TIMEOUT:                                            return "PLA_E_DC_START_WAIT_TIMEOUT";
	case PLA_E_REPORT_WAIT_TIMEOUT:                                              return "PLA_E_REPORT_WAIT_TIMEOUT";
	case PLA_E_NO_DUPLICATES:                                                    return "PLA_E_NO_DUPLICATES";
	case PLA_E_EXE_FULL_PATH_REQUIRED:                                           return "PLA_E_EXE_FULL_PATH_REQUIRED";
	case PLA_E_INVALID_SESSION_NAME:                                             return "PLA_E_INVALID_SESSION_NAME";
	case PLA_E_PLA_CHANNEL_NOT_ENABLED:                                          return "PLA_E_PLA_CHANNEL_NOT_ENABLED";
	case PLA_E_TASKSCHED_CHANNEL_NOT_ENABLED:                                    return "PLA_E_TASKSCHED_CHANNEL_NOT_ENABLED";
	case FVE_E_LOCKED_VOLUME:                                                    return "FVE_E_LOCKED_VOLUME";
	case FVE_E_NOT_ENCRYPTED:                                                    return "FVE_E_NOT_ENCRYPTED";
	case FVE_E_NO_TPM_BIOS:                                                      return "FVE_E_NO_TPM_BIOS";
	case FVE_E_NO_MBR_METRIC:                                                    return "FVE_E_NO_MBR_METRIC";
	case FVE_E_NO_BOOTSECTOR_METRIC:                                             return "FVE_E_NO_BOOTSECTOR_METRIC";
	case FVE_E_NO_BOOTMGR_METRIC:                                                return "FVE_E_NO_BOOTMGR_METRIC";
	case FVE_E_WRONG_BOOTMGR:                                                    return "FVE_E_WRONG_BOOTMGR";
	case FVE_E_SECURE_KEY_REQUIRED:                                              return "FVE_E_SECURE_KEY_REQUIRED";
	case FVE_E_NOT_ACTIVATED:                                                    return "FVE_E_NOT_ACTIVATED";
	case FVE_E_ACTION_NOT_ALLOWED:                                               return "FVE_E_ACTION_NOT_ALLOWED";
	case FVE_E_AD_SCHEMA_NOT_INSTALLED:                                          return "FVE_E_AD_SCHEMA_NOT_INSTALLED";
	case FVE_E_AD_INVALID_DATATYPE:                                              return "FVE_E_AD_INVALID_DATATYPE";
	case FVE_E_AD_INVALID_DATASIZE:                                              return "FVE_E_AD_INVALID_DATASIZE";
	case FVE_E_AD_NO_VALUES:                                                     return "FVE_E_AD_NO_VALUES";
	case FVE_E_AD_ATTR_NOT_SET:                                                  return "FVE_E_AD_ATTR_NOT_SET";
	case FVE_E_AD_GUID_NOT_FOUND:                                                return "FVE_E_AD_GUID_NOT_FOUND";
	case FVE_E_BAD_INFORMATION:                                                  return "FVE_E_BAD_INFORMATION";
	case FVE_E_TOO_SMALL:                                                        return "FVE_E_TOO_SMALL";
	case FVE_E_SYSTEM_VOLUME:                                                    return "FVE_E_SYSTEM_VOLUME";
	case FVE_E_FAILED_WRONG_FS:                                                  return "FVE_E_FAILED_WRONG_FS";
	case FVE_E_NOT_SUPPORTED:                                                    return "FVE_E_NOT_SUPPORTED";
	case FVE_E_BAD_DATA:                                                         return "FVE_E_BAD_DATA";
	case FVE_E_VOLUME_NOT_BOUND:                                                 return "FVE_E_VOLUME_NOT_BOUND";
	case FVE_E_TPM_NOT_OWNED:                                                    return "FVE_E_TPM_NOT_OWNED";
	case FVE_E_NOT_DATA_VOLUME:                                                  return "FVE_E_NOT_DATA_VOLUME";
	case FVE_E_AD_INSUFFICIENT_BUFFER:                                           return "FVE_E_AD_INSUFFICIENT_BUFFER";
	case FVE_E_CONV_READ:                                                        return "FVE_E_CONV_READ";
	case FVE_E_CONV_WRITE:                                                       return "FVE_E_CONV_WRITE";
	case FVE_E_KEY_REQUIRED:                                                     return "FVE_E_KEY_REQUIRED";
	case FVE_E_CLUSTERING_NOT_SUPPORTED:                                         return "FVE_E_CLUSTERING_NOT_SUPPORTED";
	case FVE_E_VOLUME_BOUND_ALREADY:                                             return "FVE_E_VOLUME_BOUND_ALREADY";
	case FVE_E_OS_NOT_PROTECTED:                                                 return "FVE_E_OS_NOT_PROTECTED";
	case FVE_E_PROTECTION_DISABLED:                                              return "FVE_E_PROTECTION_DISABLED";
	case FVE_E_RECOVERY_KEY_REQUIRED:                                            return "FVE_E_RECOVERY_KEY_REQUIRED";
	case FVE_E_FOREIGN_VOLUME:                                                   return "FVE_E_FOREIGN_VOLUME";
	case FVE_E_OVERLAPPED_UPDATE:                                                return "FVE_E_OVERLAPPED_UPDATE";
	case FVE_E_TPM_SRK_AUTH_NOT_ZERO:                                            return "FVE_E_TPM_SRK_AUTH_NOT_ZERO";
	case FVE_E_FAILED_SECTOR_SIZE:                                               return "FVE_E_FAILED_SECTOR_SIZE";
	case FVE_E_FAILED_AUTHENTICATION:                                            return "FVE_E_FAILED_AUTHENTICATION";
	case FVE_E_NOT_OS_VOLUME:                                                    return "FVE_E_NOT_OS_VOLUME";
	case FVE_E_AUTOUNLOCK_ENABLED:                                               return "FVE_E_AUTOUNLOCK_ENABLED";
	case FVE_E_WRONG_BOOTSECTOR:                                                 return "FVE_E_WRONG_BOOTSECTOR";
	case FVE_E_WRONG_SYSTEM_FS:                                                  return "FVE_E_WRONG_SYSTEM_FS";
	case FVE_E_POLICY_PASSWORD_REQUIRED:                                         return "FVE_E_POLICY_PASSWORD_REQUIRED";
	case FVE_E_CANNOT_SET_FVEK_ENCRYPTED:                                        return "FVE_E_CANNOT_SET_FVEK_ENCRYPTED";
	case FVE_E_CANNOT_ENCRYPT_NO_KEY:                                            return "FVE_E_CANNOT_ENCRYPT_NO_KEY";
	case FVE_E_BOOTABLE_CDDVD:                                                   return "FVE_E_BOOTABLE_CDDVD";
	case FVE_E_PROTECTOR_EXISTS:                                                 return "FVE_E_PROTECTOR_EXISTS";
	case FVE_E_RELATIVE_PATH:                                                    return "FVE_E_RELATIVE_PATH";
	case FWP_E_CALLOUT_NOT_FOUND:                                                return "FWP_E_CALLOUT_NOT_FOUND";
	case FWP_E_CONDITION_NOT_FOUND:                                              return "FWP_E_CONDITION_NOT_FOUND";
	case FWP_E_FILTER_NOT_FOUND:                                                 return "FWP_E_FILTER_NOT_FOUND";
	case FWP_E_LAYER_NOT_FOUND:                                                  return "FWP_E_LAYER_NOT_FOUND";
	case FWP_E_PROVIDER_NOT_FOUND:                                               return "FWP_E_PROVIDER_NOT_FOUND";
	case FWP_E_PROVIDER_CONTEXT_NOT_FOUND:                                       return "FWP_E_PROVIDER_CONTEXT_NOT_FOUND";
	case FWP_E_SUBLAYER_NOT_FOUND:                                               return "FWP_E_SUBLAYER_NOT_FOUND";
	case FWP_E_NOT_FOUND:                                                        return "FWP_E_NOT_FOUND";
	case FWP_E_ALREADY_EXISTS:                                                   return "FWP_E_ALREADY_EXISTS";
	case FWP_E_IN_USE:                                                           return "FWP_E_IN_USE";
	case FWP_E_DYNAMIC_SESSION_IN_PROGRESS:                                      return "FWP_E_DYNAMIC_SESSION_IN_PROGRESS";
	case FWP_E_WRONG_SESSION:                                                    return "FWP_E_WRONG_SESSION";
	case FWP_E_NO_TXN_IN_PROGRESS:                                               return "FWP_E_NO_TXN_IN_PROGRESS";
	case FWP_E_TXN_IN_PROGRESS:                                                  return "FWP_E_TXN_IN_PROGRESS";
	case FWP_E_TXN_ABORTED:                                                      return "FWP_E_TXN_ABORTED";
	case FWP_E_SESSION_ABORTED:                                                  return "FWP_E_SESSION_ABORTED";
	case FWP_E_INCOMPATIBLE_TXN:                                                 return "FWP_E_INCOMPATIBLE_TXN";
	case FWP_E_TIMEOUT:                                                          return "FWP_E_TIMEOUT";
	case FWP_E_NET_EVENTS_DISABLED:                                              return "FWP_E_NET_EVENTS_DISABLED";
	case FWP_E_INCOMPATIBLE_LAYER:                                               return "FWP_E_INCOMPATIBLE_LAYER";
	case FWP_E_KM_CLIENTS_ONLY:                                                  return "FWP_E_KM_CLIENTS_ONLY";
	case FWP_E_LIFETIME_MISMATCH:                                                return "FWP_E_LIFETIME_MISMATCH";
	case FWP_E_BUILTIN_OBJECT:                                                   return "FWP_E_BUILTIN_OBJECT";
	case FWP_E_NOTIFICATION_DROPPED:                                             return "FWP_E_NOTIFICATION_DROPPED";
	case FWP_E_TRAFFIC_MISMATCH:                                                 return "FWP_E_TRAFFIC_MISMATCH";
	case FWP_E_INCOMPATIBLE_SA_STATE:                                            return "FWP_E_INCOMPATIBLE_SA_STATE";
	case FWP_E_NULL_POINTER:                                                     return "FWP_E_NULL_POINTER";
	case FWP_E_INVALID_ENUMERATOR:                                               return "FWP_E_INVALID_ENUMERATOR";
	case FWP_E_INVALID_FLAGS:                                                    return "FWP_E_INVALID_FLAGS";
	case FWP_E_INVALID_NET_MASK:                                                 return "FWP_E_INVALID_NET_MASK";
	case FWP_E_INVALID_RANGE:                                                    return "FWP_E_INVALID_RANGE";
	case FWP_E_INVALID_INTERVAL:                                                 return "FWP_E_INVALID_INTERVAL";
	case FWP_E_ZERO_LENGTH_ARRAY:                                                return "FWP_E_ZERO_LENGTH_ARRAY";
	case FWP_E_NULL_DISPLAY_NAME:                                                return "FWP_E_NULL_DISPLAY_NAME";
	case FWP_E_INVALID_ACTION_TYPE:                                              return "FWP_E_INVALID_ACTION_TYPE";
	case FWP_E_INVALID_WEIGHT:                                                   return "FWP_E_INVALID_WEIGHT";
	case FWP_E_MATCH_TYPE_MISMATCH:                                              return "FWP_E_MATCH_TYPE_MISMATCH";
	case FWP_E_TYPE_MISMATCH:                                                    return "FWP_E_TYPE_MISMATCH";
	case FWP_E_OUT_OF_BOUNDS:                                                    return "FWP_E_OUT_OF_BOUNDS";
	case FWP_E_RESERVED:                                                         return "FWP_E_RESERVED";
	case FWP_E_DUPLICATE_CONDITION:                                              return "FWP_E_DUPLICATE_CONDITION";
	case FWP_E_DUPLICATE_KEYMOD:                                                 return "FWP_E_DUPLICATE_KEYMOD";
	case FWP_E_ACTION_INCOMPATIBLE_WITH_LAYER:                                   return "FWP_E_ACTION_INCOMPATIBLE_WITH_LAYER";
	case FWP_E_ACTION_INCOMPATIBLE_WITH_SUBLAYER:                                return "FWP_E_ACTION_INCOMPATIBLE_WITH_SUBLAYER";
	case FWP_E_CONTEXT_INCOMPATIBLE_WITH_LAYER:                                  return "FWP_E_CONTEXT_INCOMPATIBLE_WITH_LAYER";
	case FWP_E_CONTEXT_INCOMPATIBLE_WITH_CALLOUT:                                return "FWP_E_CONTEXT_INCOMPATIBLE_WITH_CALLOUT";
	case FWP_E_INCOMPATIBLE_AUTH_METHOD:                                         return "FWP_E_INCOMPATIBLE_AUTH_METHOD";
	case FWP_E_INCOMPATIBLE_DH_GROUP:                                            return "FWP_E_INCOMPATIBLE_DH_GROUP";
	case FWP_E_EM_NOT_SUPPORTED:                                                 return "FWP_E_EM_NOT_SUPPORTED";
	case FWP_E_NEVER_MATCH:                                                      return "FWP_E_NEVER_MATCH";
	case FWP_E_PROVIDER_CONTEXT_MISMATCH:                                        return "FWP_E_PROVIDER_CONTEXT_MISMATCH";
	case FWP_E_INVALID_PARAMETER:                                                return "FWP_E_INVALID_PARAMETER";
	case FWP_E_TOO_MANY_SUBLAYERS:                                               return "FWP_E_TOO_MANY_SUBLAYERS";
	case FWP_E_CALLOUT_NOTIFICATION_FAILED:                                      return "FWP_E_CALLOUT_NOTIFICATION_FAILED";
	case ERROR_NDIS_INTERFACE_CLOSING:                                           return "ERROR_NDIS_INTERFACE_CLOSING";
	case ERROR_NDIS_BAD_VERSION:                                                 return "ERROR_NDIS_BAD_VERSION";
	case ERROR_NDIS_BAD_CHARACTERISTICS:                                         return "ERROR_NDIS_BAD_CHARACTERISTICS";
	case ERROR_NDIS_ADAPTER_NOT_FOUND:                                           return "ERROR_NDIS_ADAPTER_NOT_FOUND";
	case ERROR_NDIS_OPEN_FAILED:                                                 return "ERROR_NDIS_OPEN_FAILED";
	case ERROR_NDIS_DEVICE_FAILED:                                               return "ERROR_NDIS_DEVICE_FAILED";
	case ERROR_NDIS_MULTICAST_FULL:                                              return "ERROR_NDIS_MULTICAST_FULL";
	case ERROR_NDIS_MULTICAST_EXISTS:                                            return "ERROR_NDIS_MULTICAST_EXISTS";
	case ERROR_NDIS_MULTICAST_NOT_FOUND:                                         return "ERROR_NDIS_MULTICAST_NOT_FOUND";
	case ERROR_NDIS_REQUEST_ABORTED:                                             return "ERROR_NDIS_REQUEST_ABORTED";
	case ERROR_NDIS_RESET_IN_PROGRESS:                                           return "ERROR_NDIS_RESET_IN_PROGRESS";
	case ERROR_NDIS_INVALID_PACKET:                                              return "ERROR_NDIS_INVALID_PACKET";
	case ERROR_NDIS_INVALID_DEVICE_REQUEST:                                      return "ERROR_NDIS_INVALID_DEVICE_REQUEST";
	case ERROR_NDIS_ADAPTER_NOT_READY:                                           return "ERROR_NDIS_ADAPTER_NOT_READY";
	case ERROR_NDIS_INVALID_LENGTH:                                              return "ERROR_NDIS_INVALID_LENGTH";
	case ERROR_NDIS_INVALID_DATA:                                                return "ERROR_NDIS_INVALID_DATA";
	case ERROR_NDIS_BUFFER_TOO_SHORT:                                            return "ERROR_NDIS_BUFFER_TOO_SHORT";
	case ERROR_NDIS_INVALID_OID:                                                 return "ERROR_NDIS_INVALID_OID";
	case ERROR_NDIS_ADAPTER_REMOVED:                                             return "ERROR_NDIS_ADAPTER_REMOVED";
	case ERROR_NDIS_UNSUPPORTED_MEDIA:                                           return "ERROR_NDIS_UNSUPPORTED_MEDIA";
	case ERROR_NDIS_GROUP_ADDRESS_IN_USE:                                        return "ERROR_NDIS_GROUP_ADDRESS_IN_USE";
	case ERROR_NDIS_FILE_NOT_FOUND:                                              return "ERROR_NDIS_FILE_NOT_FOUND";
	case ERROR_NDIS_ERROR_READING_FILE:                                          return "ERROR_NDIS_ERROR_READING_FILE";
	case ERROR_NDIS_ALREADY_MAPPED:                                              return "ERROR_NDIS_ALREADY_MAPPED";
	case ERROR_NDIS_RESOURCE_CONFLICT:                                           return "ERROR_NDIS_RESOURCE_CONFLICT";
	case ERROR_NDIS_MEDIA_DISCONNECTED:                                          return "ERROR_NDIS_MEDIA_DISCONNECTED";
	case ERROR_NDIS_INVALID_ADDRESS:                                             return "ERROR_NDIS_INVALID_ADDRESS";
	case ERROR_NDIS_PAUSED:                                                      return "ERROR_NDIS_PAUSED";
	case ERROR_NDIS_INTERFACE_NOT_FOUND:                                         return "ERROR_NDIS_INTERFACE_NOT_FOUND";
	case ERROR_NDIS_UNSUPPORTED_REVISION:                                        return "ERROR_NDIS_UNSUPPORTED_REVISION";
	case ERROR_NDIS_INVALID_PORT:                                                return "ERROR_NDIS_INVALID_PORT";
	case ERROR_NDIS_INVALID_PORT_STATE:                                          return "ERROR_NDIS_INVALID_PORT_STATE";
	case ERROR_NDIS_NOT_SUPPORTED:                                               return "ERROR_NDIS_NOT_SUPPORTED";
	case ERROR_NDIS_DOT11_AUTO_CONFIG_ENABLED:                                   return "ERROR_NDIS_DOT11_AUTO_CONFIG_ENABLED";
	case ERROR_NDIS_DOT11_MEDIA_IN_USE:                                          return "ERROR_NDIS_DOT11_MEDIA_IN_USE";
	case ERROR_NDIS_DOT11_POWER_STATE_INVALID:                                   return "ERROR_NDIS_DOT11_POWER_STATE_INVALID";
	case ERROR_AUDITING_DISABLED:                                                return "ERROR_AUDITING_DISABLED";
	case ERROR_ALL_SIDS_FILTERED:                                                return "ERROR_ALL_SIDS_FILTERED";
	case ERROR_BIZRULES_NOT_ENABLED:                                             return "ERROR_BIZRULES_NOT_ENABLED";
	case ERROR_MONITOR_INVALID_DESCRIPTOR_CHECKSUM:                              return "ERROR_MONITOR_INVALID_DESCRIPTOR_CHECKSUM";
	case ERROR_MONITOR_INVALID_STANDARD_TIMING_BLOCK:                            return "ERROR_MONITOR_INVALID_STANDARD_TIMING_BLOCK";
	case ERROR_MONITOR_WMI_DATABLOCK_REGISTRATION_FAILED:                        return "ERROR_MONITOR_WMI_DATABLOCK_REGISTRATION_FAILED";
	case ERROR_MONITOR_INVALID_SERIAL_NUMBER_MONDSC_BLOCK:                       return "ERROR_MONITOR_INVALID_SERIAL_NUMBER_MONDSC_BLOCK";
	case ERROR_MONITOR_INVALID_USER_FRIENDLY_MONDSC_BLOCK:                       return "ERROR_MONITOR_INVALID_USER_FRIENDLY_MONDSC_BLOCK";
	case ERROR_MONITOR_NO_MORE_DESCRIPTOR_DATA:                                  return "ERROR_MONITOR_NO_MORE_DESCRIPTOR_DATA";
	case ERROR_MONITOR_INVALID_DETAILED_TIMING_BLOCK:                            return "ERROR_MONITOR_INVALID_DETAILED_TIMING_BLOCK";
	case ERROR_GRAPHICS_NOT_EXCLUSIVE_MODE_OWNER:                                return "ERROR_GRAPHICS_NOT_EXCLUSIVE_MODE_OWNER";
	case ERROR_GRAPHICS_INSUFFICIENT_DMA_BUFFER:                                 return "ERROR_GRAPHICS_INSUFFICIENT_DMA_BUFFER";
	case ERROR_GRAPHICS_INVALID_DISPLAY_ADAPTER:                                 return "ERROR_GRAPHICS_INVALID_DISPLAY_ADAPTER";
	case ERROR_GRAPHICS_ADAPTER_WAS_RESET:                                       return "ERROR_GRAPHICS_ADAPTER_WAS_RESET";
	case ERROR_GRAPHICS_INVALID_DRIVER_MODEL:                                    return "ERROR_GRAPHICS_INVALID_DRIVER_MODEL";
	case ERROR_GRAPHICS_PRESENT_MODE_CHANGED:                                    return "ERROR_GRAPHICS_PRESENT_MODE_CHANGED";
	case ERROR_GRAPHICS_PRESENT_OCCLUDED:                                        return "ERROR_GRAPHICS_PRESENT_OCCLUDED";
	case ERROR_GRAPHICS_PRESENT_DENIED:                                          return "ERROR_GRAPHICS_PRESENT_DENIED";
	case ERROR_GRAPHICS_CANNOTCOLORCONVERT:                                      return "ERROR_GRAPHICS_CANNOTCOLORCONVERT";
	case ERROR_GRAPHICS_NO_VIDEO_MEMORY:                                         return "ERROR_GRAPHICS_NO_VIDEO_MEMORY";
	case ERROR_GRAPHICS_CANT_LOCK_MEMORY:                                        return "ERROR_GRAPHICS_CANT_LOCK_MEMORY";
	case ERROR_GRAPHICS_ALLOCATION_BUSY:                                         return "ERROR_GRAPHICS_ALLOCATION_BUSY";
	case ERROR_GRAPHICS_TOO_MANY_REFERENCES:                                     return "ERROR_GRAPHICS_TOO_MANY_REFERENCES";
	case ERROR_GRAPHICS_TRY_AGAIN_LATER:                                         return "ERROR_GRAPHICS_TRY_AGAIN_LATER";
	case ERROR_GRAPHICS_TRY_AGAIN_NOW:                                           return "ERROR_GRAPHICS_TRY_AGAIN_NOW";
	case ERROR_GRAPHICS_ALLOCATION_INVALID:                                      return "ERROR_GRAPHICS_ALLOCATION_INVALID";
	case ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNAVAILABLE:                        return "ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNAVAILABLE";
	case ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNSUPPORTED:                        return "ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNSUPPORTED";
	case ERROR_GRAPHICS_CANT_EVICT_PINNED_ALLOCATION:                            return "ERROR_GRAPHICS_CANT_EVICT_PINNED_ALLOCATION";
	case ERROR_GRAPHICS_INVALID_ALLOCATION_USAGE:                                return "ERROR_GRAPHICS_INVALID_ALLOCATION_USAGE";
	case ERROR_GRAPHICS_CANT_RENDER_LOCKED_ALLOCATION:                           return "ERROR_GRAPHICS_CANT_RENDER_LOCKED_ALLOCATION";
	case ERROR_GRAPHICS_ALLOCATION_CLOSED:                                       return "ERROR_GRAPHICS_ALLOCATION_CLOSED";
	case ERROR_GRAPHICS_INVALID_ALLOCATION_INSTANCE:                             return "ERROR_GRAPHICS_INVALID_ALLOCATION_INSTANCE";
	case ERROR_GRAPHICS_INVALID_ALLOCATION_HANDLE:                               return "ERROR_GRAPHICS_INVALID_ALLOCATION_HANDLE";
	case ERROR_GRAPHICS_WRONG_ALLOCATION_DEVICE:                                 return "ERROR_GRAPHICS_WRONG_ALLOCATION_DEVICE";
	case ERROR_GRAPHICS_ALLOCATION_CONTENT_LOST:                                 return "ERROR_GRAPHICS_ALLOCATION_CONTENT_LOST";
	case ERROR_GRAPHICS_GPU_EXCEPTION_ON_DEVICE:                                 return "ERROR_GRAPHICS_GPU_EXCEPTION_ON_DEVICE";
	case ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY:                                  return "ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY";
	case ERROR_GRAPHICS_VIDPN_TOPOLOGY_NOT_SUPPORTED:                            return "ERROR_GRAPHICS_VIDPN_TOPOLOGY_NOT_SUPPORTED";
	case ERROR_GRAPHICS_VIDPN_TOPOLOGY_CURRENTLY_NOT_SUPPORTED:                  return "ERROR_GRAPHICS_VIDPN_TOPOLOGY_CURRENTLY_NOT_SUPPORTED";
	case ERROR_GRAPHICS_INVALID_VIDPN:                                           return "ERROR_GRAPHICS_INVALID_VIDPN";
	case ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE:                            return "ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE";
	case ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET:                            return "ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET";
	case ERROR_GRAPHICS_VIDPN_MODALITY_NOT_SUPPORTED:                            return "ERROR_GRAPHICS_VIDPN_MODALITY_NOT_SUPPORTED";
	case ERROR_GRAPHICS_INVALID_VIDPN_SOURCEMODESET:                             return "ERROR_GRAPHICS_INVALID_VIDPN_SOURCEMODESET";
	case ERROR_GRAPHICS_INVALID_VIDPN_TARGETMODESET:                             return "ERROR_GRAPHICS_INVALID_VIDPN_TARGETMODESET";
	case ERROR_GRAPHICS_INVALID_FREQUENCY:                                       return "ERROR_GRAPHICS_INVALID_FREQUENCY";
	case ERROR_GRAPHICS_INVALID_ACTIVE_REGION:                                   return "ERROR_GRAPHICS_INVALID_ACTIVE_REGION";
	case ERROR_GRAPHICS_INVALID_TOTAL_REGION:                                    return "ERROR_GRAPHICS_INVALID_TOTAL_REGION";
	case ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE_MODE:                       return "ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE_MODE";
	case ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET_MODE:                       return "ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET_MODE";
	case ERROR_GRAPHICS_PINNED_MODE_MUST_REMAIN_IN_SET:                          return "ERROR_GRAPHICS_PINNED_MODE_MUST_REMAIN_IN_SET";
	case ERROR_GRAPHICS_PATH_ALREADY_IN_TOPOLOGY:                                return "ERROR_GRAPHICS_PATH_ALREADY_IN_TOPOLOGY";
	case ERROR_GRAPHICS_MODE_ALREADY_IN_MODESET:                                 return "ERROR_GRAPHICS_MODE_ALREADY_IN_MODESET";
	case ERROR_GRAPHICS_INVALID_VIDEOPRESENTSOURCESET:                           return "ERROR_GRAPHICS_INVALID_VIDEOPRESENTSOURCESET";
	case ERROR_GRAPHICS_INVALID_VIDEOPRESENTTARGETSET:                           return "ERROR_GRAPHICS_INVALID_VIDEOPRESENTTARGETSET";
	case ERROR_GRAPHICS_SOURCE_ALREADY_IN_SET:                                   return "ERROR_GRAPHICS_SOURCE_ALREADY_IN_SET";
	case ERROR_GRAPHICS_TARGET_ALREADY_IN_SET:                                   return "ERROR_GRAPHICS_TARGET_ALREADY_IN_SET";
	case ERROR_GRAPHICS_INVALID_VIDPN_PRESENT_PATH:                              return "ERROR_GRAPHICS_INVALID_VIDPN_PRESENT_PATH";
	case ERROR_GRAPHICS_NO_RECOMMENDED_VIDPN_TOPOLOGY:                           return "ERROR_GRAPHICS_NO_RECOMMENDED_VIDPN_TOPOLOGY";
	case ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGESET:                       return "ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGESET";
	case ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE:                          return "ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE";
	case ERROR_GRAPHICS_FREQUENCYRANGE_NOT_IN_SET:                               return "ERROR_GRAPHICS_FREQUENCYRANGE_NOT_IN_SET";
	case ERROR_GRAPHICS_FREQUENCYRANGE_ALREADY_IN_SET:                           return "ERROR_GRAPHICS_FREQUENCYRANGE_ALREADY_IN_SET";
	case ERROR_GRAPHICS_STALE_MODESET:                                           return "ERROR_GRAPHICS_STALE_MODESET";
	case ERROR_GRAPHICS_INVALID_MONITOR_SOURCEMODESET:                           return "ERROR_GRAPHICS_INVALID_MONITOR_SOURCEMODESET";
	case ERROR_GRAPHICS_INVALID_MONITOR_SOURCE_MODE:                             return "ERROR_GRAPHICS_INVALID_MONITOR_SOURCE_MODE";
	case ERROR_GRAPHICS_NO_RECOMMENDED_FUNCTIONAL_VIDPN:                         return "ERROR_GRAPHICS_NO_RECOMMENDED_FUNCTIONAL_VIDPN";
	case ERROR_GRAPHICS_MODE_ID_MUST_BE_UNIQUE:                                  return "ERROR_GRAPHICS_MODE_ID_MUST_BE_UNIQUE";
	case ERROR_GRAPHICS_EMPTY_ADAPTER_MONITOR_MODE_SUPPORT_INTERSECTION:         return "ERROR_GRAPHICS_EMPTY_ADAPTER_MONITOR_MODE_SUPPORT_INTERSECTION";
	case ERROR_GRAPHICS_VIDEO_PRESENT_TARGETS_LESS_THAN_SOURCES:                 return "ERROR_GRAPHICS_VIDEO_PRESENT_TARGETS_LESS_THAN_SOURCES";
	case ERROR_GRAPHICS_PATH_NOT_IN_TOPOLOGY:                                    return "ERROR_GRAPHICS_PATH_NOT_IN_TOPOLOGY";
	case ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_SOURCE:                   return "ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_SOURCE";
	case ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_TARGET:                   return "ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_TARGET";
	case ERROR_GRAPHICS_INVALID_MONITORDESCRIPTORSET:                            return "ERROR_GRAPHICS_INVALID_MONITORDESCRIPTORSET";
	case ERROR_GRAPHICS_INVALID_MONITORDESCRIPTOR:                               return "ERROR_GRAPHICS_INVALID_MONITORDESCRIPTOR";
	case ERROR_GRAPHICS_MONITORDESCRIPTOR_NOT_IN_SET:                            return "ERROR_GRAPHICS_MONITORDESCRIPTOR_NOT_IN_SET";
	case ERROR_GRAPHICS_MONITORDESCRIPTOR_ALREADY_IN_SET:                        return "ERROR_GRAPHICS_MONITORDESCRIPTOR_ALREADY_IN_SET";
	case ERROR_GRAPHICS_MONITORDESCRIPTOR_ID_MUST_BE_UNIQUE:                     return "ERROR_GRAPHICS_MONITORDESCRIPTOR_ID_MUST_BE_UNIQUE";
	case ERROR_GRAPHICS_INVALID_VIDPN_TARGET_SUBSET_TYPE:                        return "ERROR_GRAPHICS_INVALID_VIDPN_TARGET_SUBSET_TYPE";
	case ERROR_GRAPHICS_RESOURCES_NOT_RELATED:                                   return "ERROR_GRAPHICS_RESOURCES_NOT_RELATED";
	case ERROR_GRAPHICS_SOURCE_ID_MUST_BE_UNIQUE:                                return "ERROR_GRAPHICS_SOURCE_ID_MUST_BE_UNIQUE";
	case ERROR_GRAPHICS_TARGET_ID_MUST_BE_UNIQUE:                                return "ERROR_GRAPHICS_TARGET_ID_MUST_BE_UNIQUE";
	case ERROR_GRAPHICS_NO_AVAILABLE_VIDPN_TARGET:                               return "ERROR_GRAPHICS_NO_AVAILABLE_VIDPN_TARGET";
	case ERROR_GRAPHICS_MONITOR_COULD_NOT_BE_ASSOCIATED_WITH_ADAPTER:            return "ERROR_GRAPHICS_MONITOR_COULD_NOT_BE_ASSOCIATED_WITH_ADAPTER";
	case ERROR_GRAPHICS_NO_VIDPNMGR:                                             return "ERROR_GRAPHICS_NO_VIDPNMGR";
	case ERROR_GRAPHICS_NO_ACTIVE_VIDPN:                                         return "ERROR_GRAPHICS_NO_ACTIVE_VIDPN";
	case ERROR_GRAPHICS_STALE_VIDPN_TOPOLOGY:                                    return "ERROR_GRAPHICS_STALE_VIDPN_TOPOLOGY";
	case ERROR_GRAPHICS_MONITOR_NOT_CONNECTED:                                   return "ERROR_GRAPHICS_MONITOR_NOT_CONNECTED";
	case ERROR_GRAPHICS_SOURCE_NOT_IN_TOPOLOGY:                                  return "ERROR_GRAPHICS_SOURCE_NOT_IN_TOPOLOGY";
	case ERROR_GRAPHICS_INVALID_PRIMARYSURFACE_SIZE:                             return "ERROR_GRAPHICS_INVALID_PRIMARYSURFACE_SIZE";
	case ERROR_GRAPHICS_INVALID_VISIBLEREGION_SIZE:                              return "ERROR_GRAPHICS_INVALID_VISIBLEREGION_SIZE";
	case ERROR_GRAPHICS_INVALID_STRIDE:                                          return "ERROR_GRAPHICS_INVALID_STRIDE";
	case ERROR_GRAPHICS_INVALID_PIXELFORMAT:                                     return "ERROR_GRAPHICS_INVALID_PIXELFORMAT";
	case ERROR_GRAPHICS_INVALID_COLORBASIS:                                      return "ERROR_GRAPHICS_INVALID_COLORBASIS";
	case ERROR_GRAPHICS_INVALID_PIXELVALUEACCESSMODE:                            return "ERROR_GRAPHICS_INVALID_PIXELVALUEACCESSMODE";
	case ERROR_GRAPHICS_TARGET_NOT_IN_TOPOLOGY:                                  return "ERROR_GRAPHICS_TARGET_NOT_IN_TOPOLOGY";
	case ERROR_GRAPHICS_NO_DISPLAY_MODE_MANAGEMENT_SUPPORT:                      return "ERROR_GRAPHICS_NO_DISPLAY_MODE_MANAGEMENT_SUPPORT";
	case ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE:                                     return "ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE";
	case ERROR_GRAPHICS_CANT_ACCESS_ACTIVE_VIDPN:                                return "ERROR_GRAPHICS_CANT_ACCESS_ACTIVE_VIDPN";
	case ERROR_GRAPHICS_INVALID_PATH_IMPORTANCE_ORDINAL:                         return "ERROR_GRAPHICS_INVALID_PATH_IMPORTANCE_ORDINAL";
	case ERROR_GRAPHICS_INVALID_PATH_CONTENT_GEOMETRY_TRANSFORMATION:            return "ERROR_GRAPHICS_INVALID_PATH_CONTENT_GEOMETRY_TRANSFORMATION";
	case ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_SUPPORTED:      return "ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_SUPPORTED";
	case ERROR_GRAPHICS_INVALID_GAMMA_RAMP:                                      return "ERROR_GRAPHICS_INVALID_GAMMA_RAMP";
	case ERROR_GRAPHICS_GAMMA_RAMP_NOT_SUPPORTED:                                return "ERROR_GRAPHICS_GAMMA_RAMP_NOT_SUPPORTED";
	case ERROR_GRAPHICS_MULTISAMPLING_NOT_SUPPORTED:                             return "ERROR_GRAPHICS_MULTISAMPLING_NOT_SUPPORTED";
	case ERROR_GRAPHICS_MODE_NOT_IN_MODESET:                                     return "ERROR_GRAPHICS_MODE_NOT_IN_MODESET";
	case ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY_RECOMMENDATION_REASON:            return "ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY_RECOMMENDATION_REASON";
	case ERROR_GRAPHICS_INVALID_PATH_CONTENT_TYPE:                               return "ERROR_GRAPHICS_INVALID_PATH_CONTENT_TYPE";
	case ERROR_GRAPHICS_INVALID_COPYPROTECTION_TYPE:                             return "ERROR_GRAPHICS_INVALID_COPYPROTECTION_TYPE";
	case ERROR_GRAPHICS_UNASSIGNED_MODESET_ALREADY_EXISTS:                       return "ERROR_GRAPHICS_UNASSIGNED_MODESET_ALREADY_EXISTS";
	case ERROR_GRAPHICS_INVALID_SCANLINE_ORDERING:                               return "ERROR_GRAPHICS_INVALID_SCANLINE_ORDERING";
	case ERROR_GRAPHICS_TOPOLOGY_CHANGES_NOT_ALLOWED:                            return "ERROR_GRAPHICS_TOPOLOGY_CHANGES_NOT_ALLOWED";
	case ERROR_GRAPHICS_NO_AVAILABLE_IMPORTANCE_ORDINALS:                        return "ERROR_GRAPHICS_NO_AVAILABLE_IMPORTANCE_ORDINALS";
	case ERROR_GRAPHICS_INCOMPATIBLE_PRIVATE_FORMAT:                             return "ERROR_GRAPHICS_INCOMPATIBLE_PRIVATE_FORMAT";
	case ERROR_GRAPHICS_INVALID_MODE_PRUNING_ALGORITHM:                          return "ERROR_GRAPHICS_INVALID_MODE_PRUNING_ALGORITHM";
	case ERROR_GRAPHICS_SPECIFIED_CHILD_ALREADY_CONNECTED:                       return "ERROR_GRAPHICS_SPECIFIED_CHILD_ALREADY_CONNECTED";
	case ERROR_GRAPHICS_CHILD_DESCRIPTOR_NOT_SUPPORTED:                          return "ERROR_GRAPHICS_CHILD_DESCRIPTOR_NOT_SUPPORTED";
	case ERROR_GRAPHICS_NOT_A_LINKED_ADAPTER:                                    return "ERROR_GRAPHICS_NOT_A_LINKED_ADAPTER";
	case ERROR_GRAPHICS_LEADLINK_NOT_ENUMERATED:                                 return "ERROR_GRAPHICS_LEADLINK_NOT_ENUMERATED";
	case ERROR_GRAPHICS_CHAINLINKS_NOT_ENUMERATED:                               return "ERROR_GRAPHICS_CHAINLINKS_NOT_ENUMERATED";
	case ERROR_GRAPHICS_ADAPTER_CHAIN_NOT_READY:                                 return "ERROR_GRAPHICS_ADAPTER_CHAIN_NOT_READY";
	case ERROR_GRAPHICS_CHAINLINKS_NOT_STARTED:                                  return "ERROR_GRAPHICS_CHAINLINKS_NOT_STARTED";
	case ERROR_GRAPHICS_CHAINLINKS_NOT_POWERED_ON:                               return "ERROR_GRAPHICS_CHAINLINKS_NOT_POWERED_ON";
	case ERROR_GRAPHICS_INCONSISTENT_DEVICE_LINK_STATE:                          return "ERROR_GRAPHICS_INCONSISTENT_DEVICE_LINK_STATE";
	case ERROR_GRAPHICS_NOT_POST_DEVICE_DRIVER:                                  return "ERROR_GRAPHICS_NOT_POST_DEVICE_DRIVER";
	case ERROR_GRAPHICS_OPM_NOT_SUPPORTED:                                       return "ERROR_GRAPHICS_OPM_NOT_SUPPORTED";
	case ERROR_GRAPHICS_COPP_NOT_SUPPORTED:                                      return "ERROR_GRAPHICS_COPP_NOT_SUPPORTED";
	case ERROR_GRAPHICS_UAB_NOT_SUPPORTED:                                       return "ERROR_GRAPHICS_UAB_NOT_SUPPORTED";
	case ERROR_GRAPHICS_OPM_INVALID_ENCRYPTED_PARAMETERS:                        return "ERROR_GRAPHICS_OPM_INVALID_ENCRYPTED_PARAMETERS";
	case ERROR_GRAPHICS_OPM_NO_VIDEO_OUTPUTS_EXIST:                              return "ERROR_GRAPHICS_OPM_NO_VIDEO_OUTPUTS_EXIST";
	case ERROR_GRAPHICS_OPM_INTERNAL_ERROR:                                      return "ERROR_GRAPHICS_OPM_INTERNAL_ERROR";
	case ERROR_GRAPHICS_OPM_INVALID_HANDLE:                                      return "ERROR_GRAPHICS_OPM_INVALID_HANDLE";
	case ERROR_GRAPHICS_PVP_INVALID_CERTIFICATE_LENGTH:                          return "ERROR_GRAPHICS_PVP_INVALID_CERTIFICATE_LENGTH";
	case ERROR_GRAPHICS_OPM_SPANNING_MODE_ENABLED:                               return "ERROR_GRAPHICS_OPM_SPANNING_MODE_ENABLED";
	case ERROR_GRAPHICS_OPM_THEATER_MODE_ENABLED:                                return "ERROR_GRAPHICS_OPM_THEATER_MODE_ENABLED";
	case ERROR_GRAPHICS_PVP_HFS_FAILED:                                          return "ERROR_GRAPHICS_PVP_HFS_FAILED";
	case ERROR_GRAPHICS_OPM_INVALID_SRM:                                         return "ERROR_GRAPHICS_OPM_INVALID_SRM";
	case ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_HDCP:                        return "ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_HDCP";
	case ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_ACP:                         return "ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_ACP";
	case ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_CGMSA:                       return "ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_CGMSA";
	case ERROR_GRAPHICS_OPM_HDCP_SRM_NEVER_SET:                                  return "ERROR_GRAPHICS_OPM_HDCP_SRM_NEVER_SET";
	case ERROR_GRAPHICS_OPM_RESOLUTION_TOO_HIGH:                                 return "ERROR_GRAPHICS_OPM_RESOLUTION_TOO_HIGH";
	case ERROR_GRAPHICS_OPM_ALL_HDCP_HARDWARE_ALREADY_IN_USE:                    return "ERROR_GRAPHICS_OPM_ALL_HDCP_HARDWARE_ALREADY_IN_USE";
	case ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_NO_LONGER_EXISTS:                       return "ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_NO_LONGER_EXISTS";
	case ERROR_GRAPHICS_OPM_SESSION_TYPE_CHANGE_IN_PROGRESS:                     return "ERROR_GRAPHICS_OPM_SESSION_TYPE_CHANGE_IN_PROGRESS";
	case ERROR_GRAPHICS_I2C_NOT_SUPPORTED:                                       return "ERROR_GRAPHICS_I2C_NOT_SUPPORTED";
	case ERROR_GRAPHICS_I2C_DEVICE_DOES_NOT_EXIST:                               return "ERROR_GRAPHICS_I2C_DEVICE_DOES_NOT_EXIST";
	case ERROR_GRAPHICS_I2C_ERROR_TRANSMITTING_DATA:                             return "ERROR_GRAPHICS_I2C_ERROR_TRANSMITTING_DATA";
	case ERROR_GRAPHICS_I2C_ERROR_RECEIVING_DATA:                                return "ERROR_GRAPHICS_I2C_ERROR_RECEIVING_DATA";
	case ERROR_GRAPHICS_DDCCI_VCP_NOT_SUPPORTED:                                 return "ERROR_GRAPHICS_DDCCI_VCP_NOT_SUPPORTED";
	case ERROR_GRAPHICS_DDCCI_INVALID_DATA:                                      return "ERROR_GRAPHICS_DDCCI_INVALID_DATA";
	case ERROR_GRAPHICS_DDCCI_MONITOR_RETURNED_INVALID_TIMING_STATUS_BYTE:       return "ERROR_GRAPHICS_DDCCI_MONITOR_RETURNED_INVALID_TIMING_STATUS_BYTE";
	case ERROR_GRAPHICS_MCA_INVALID_CAPABILITIES_STRING:                         return "ERROR_GRAPHICS_MCA_INVALID_CAPABILITIES_STRING";
	case ERROR_GRAPHICS_MCA_INTERNAL_ERROR:                                      return "ERROR_GRAPHICS_MCA_INTERNAL_ERROR";
	case ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_COMMAND:                           return "ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_COMMAND";
	case ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_LENGTH:                            return "ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_LENGTH";
	case ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_CHECKSUM:                          return "ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_CHECKSUM";
	case ERROR_GRAPHICS_DDCCI_CURRENT_CURRENT_VALUE_GREATER_THAN_MAXIMUM_VALUE:  return "ERROR_GRAPHICS_DDCCI_CURRENT_CURRENT_VALUE_GREATER_THAN_MAXIMUM_VALUE";
	case ERROR_GRAPHICS_MCA_INVALID_VCP_VERSION:                                 return "ERROR_GRAPHICS_MCA_INVALID_VCP_VERSION";
	case ERROR_GRAPHICS_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION:                 return "ERROR_GRAPHICS_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION";
	case ERROR_GRAPHICS_MCA_MCCS_VERSION_MISMATCH:                               return "ERROR_GRAPHICS_MCA_MCCS_VERSION_MISMATCH";
	case ERROR_GRAPHICS_MCA_UNSUPPORTED_MCCS_VERSION:                            return "ERROR_GRAPHICS_MCA_UNSUPPORTED_MCCS_VERSION";
	case ERROR_GRAPHICS_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED:                    return "ERROR_GRAPHICS_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED";
	case ERROR_GRAPHICS_MCA_UNSUPPORTED_COLOR_TEMPERATURE:                       return "ERROR_GRAPHICS_MCA_UNSUPPORTED_COLOR_TEMPERATURE";
	case ERROR_GRAPHICS_ONLY_CONSOLE_SESSION_SUPPORTED:                          return "ERROR_GRAPHICS_ONLY_CONSOLE_SESSION_SUPPORTED";
	default: return "[NOT RECOGNISED]";
}
}

#endif